{
	"id": "19bde2aac5ad794dbaa95aec49288874",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DegenToken.sol": {
				"content": "/*\r\n1. Minting new tokens: The platform should be able to create new tokens and distribute them to players as rewards. Only the owner can mint tokens.\r\n2. Transferring tokens: Players should be able to transfer their tokens to others.\r\n3. Redeeming tokens: Players should be able to redeem their tokens for items in the in-game store.\r\n4. Checking token balance: Players should be able to check their token balance at any time.\r\n5. Burning tokens: Anyone should be able to burn tokens, that they own, that are no longer needed.\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\n\r\ncontract DegenToken is ERC20, Ownable, ERC20Burnable {\r\n\r\n    struct Item {\r\n        string name;\r\n        uint8 itemId;\r\n        uint256 price;\r\n    }\r\n    mapping (uint8=>Item) public items;\r\n    uint8 public tokenId;\r\n    \r\n    event ItemPurchased(address indexed buyer, uint8 itemId, string itemName, uint256 price);\r\n    event GameOutcome(address indexed player, uint256 num, bool won, string result);\r\n\r\n    constructor (address initialOwner, uint tokenSupply) ERC20(\"Degen\", \"DGN\") Ownable(initialOwner) {\r\n        mint(initialOwner, tokenSupply);\r\n        \r\n        items[1] = Item(\"Novice Navigator\",1, 100);\r\n        items[2]=Item(\"Mythic Maverick\", 2, 700);\r\n        items[3]=Item(\"Celestial Crusher\", 3, 1200);\r\n        items[4]=Item(\"Astral Ace\", 4, 2200);\r\n        items[5]=Item(\"Divine Dominator\", 5, 2400);\r\n        tokenId=6;\r\n\r\n    }\r\n\r\n    function decimals() override public pure returns (uint8){\r\n        return 0;\r\n    }\r\n\r\n    // Minting tokens\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    // Transferring tokens\r\n\r\n    function transferToken(address _recipient, uint _amount) external {\r\n        require(balanceOf(msg.sender)>=_amount, \"Insufficient balance\");\r\n        transfer(_recipient, _amount);\r\n    }\r\n\r\n    // Redeeming tokens\r\n\r\n    function welcomeBonus() public {\r\n        require(balanceOf(msg.sender) == 0, \"You've already claimed your welcome bonus\");\r\n        _mint(msg.sender, 50);\r\n    }\r\n\r\n    function addItem(string memory _name, uint256 _price) public onlyOwner {\r\n        items[tokenId] = Item(_name, tokenId,_price);\r\n        tokenId++;\r\n    } \r\n\r\n    function isLessThanFive(bool _prediction, uint256 _betAmount) public {\r\n        uint randomNumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 10;\r\n\r\n        if (_prediction ==(randomNumber<5)) {\r\n            _mint(msg.sender, _betAmount*2);\r\n            emit GameOutcome(msg.sender, randomNumber, true, \"won\");\r\n\r\n        } else {\r\n            burn(_betAmount);\r\n            emit GameOutcome(msg.sender, randomNumber, false, \"lost\");\r\n        }\r\n    }\r\n    \r\n    function purchaseItem(uint8 _itemId) external {\r\n        require(items[_itemId].price != 0, \"Item not found\");\r\n        require(balanceOf(msg.sender) >= items[_itemId].price, \"Insufficient balance\");\r\n\r\n        burn(items[_itemId].price);\r\n\r\n        emit ItemPurchased(msg.sender, _itemId, items[_itemId].name, items[_itemId].price);\r\n    }\r\n\r\n    // Checking token balance\r\n\r\n    function getBalance() external view returns(uint256){\r\n        return balanceOf(msg.sender);\r\n    }\r\n\r\n    // Burning tokens\r\n\r\n    function burnToken(uint _amount) external {\r\n        require(balanceOf(msg.sender)>=_amount, \"Insufficient amount\");\r\n        burn(_amount);\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DegenToken.sol": {
				"DegenToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "won",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "result",
									"type": "string"
								}
							],
							"name": "GameOutcome",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "itemId",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "itemName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "ItemPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "addItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burnToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_prediction",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_betAmount",
									"type": "uint256"
								}
							],
							"name": "isLessThanFive",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "items",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "itemId",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_itemId",
									"type": "uint8"
								}
							],
							"name": "purchaseItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenId",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "welcomeBonus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DegenToken.sol\":785:3600  contract DegenToken is ERC20, Ownable, ERC20Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DegenToken.sol\":1199:1636  constructor (address initialOwner, uint tokenSupply) ERC20(\"Degen\", \"DGN\") Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/DegenToken.sol\":1282:1294  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x446567656e000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x44474e0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/DegenToken.sol\":1307:1338  mint(initialOwner, tokenSupply) */\n  tag_18\n    /* \"contracts/DegenToken.sol\":1312:1324  initialOwner */\n  dup3\n    /* \"contracts/DegenToken.sol\":1326:1337  tokenSupply */\n  dup3\n    /* \"contracts/DegenToken.sol\":1307:1311  mint */\n  shl(0x20, tag_19)\n    /* \"contracts/DegenToken.sol\":1307:1338  mint(initialOwner, tokenSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/DegenToken.sol\":1370:1401  Item(\"Novice Navigator\",1, 100) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x4e6f76696365204e6176696761746f7200000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1394:1395  1 */\n  0x01\n    /* \"contracts/DegenToken.sol\":1370:1401  Item(\"Novice Navigator\",1, 100) */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1397:1400  100 */\n  0x64\n    /* \"contracts/DegenToken.sol\":1370:1401  Item(\"Novice Navigator\",1, 100) */\n  dup2\n  mstore\n  pop\n    /* \"contracts/DegenToken.sol\":1359:1364  items */\n  0x06\n    /* \"contracts/DegenToken.sol\":1359:1367  items[1] */\n  0x00\n    /* \"contracts/DegenToken.sol\":1365:1366  1 */\n  0x01\n    /* \"contracts/DegenToken.sol\":1359:1367  items[1] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/DegenToken.sol\":1359:1401  items[1] = Item(\"Novice Navigator\",1, 100) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup2\n  tag_20\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_20:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":1421:1452  Item(\"Mythic Maverick\", 2, 700) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  0x4d7974686963204d6176657269636b0000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1445:1446  2 */\n  0x02\n    /* \"contracts/DegenToken.sol\":1421:1452  Item(\"Mythic Maverick\", 2, 700) */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1448:1451  700 */\n  0x02bc\n    /* \"contracts/DegenToken.sol\":1421:1452  Item(\"Mythic Maverick\", 2, 700) */\n  dup2\n  mstore\n  pop\n    /* \"contracts/DegenToken.sol\":1412:1417  items */\n  0x06\n    /* \"contracts/DegenToken.sol\":1412:1420  items[2] */\n  0x00\n    /* \"contracts/DegenToken.sol\":1418:1419  2 */\n  0x02\n    /* \"contracts/DegenToken.sol\":1412:1420  items[2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/DegenToken.sol\":1412:1452  items[2]=Item(\"Mythic Maverick\", 2, 700) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup2\n  tag_21\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_21:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":1472:1506  Item(\"Celestial Crusher\", 3, 1200) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x11\n  dup2\n  mstore\n  0x20\n  add\n  0x43656c65737469616c2043727573686572000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1498:1499  3 */\n  0x03\n    /* \"contracts/DegenToken.sol\":1472:1506  Item(\"Celestial Crusher\", 3, 1200) */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1501:1505  1200 */\n  0x04b0\n    /* \"contracts/DegenToken.sol\":1472:1506  Item(\"Celestial Crusher\", 3, 1200) */\n  dup2\n  mstore\n  pop\n    /* \"contracts/DegenToken.sol\":1463:1468  items */\n  0x06\n    /* \"contracts/DegenToken.sol\":1463:1471  items[3] */\n  0x00\n    /* \"contracts/DegenToken.sol\":1469:1470  3 */\n  0x03\n    /* \"contracts/DegenToken.sol\":1463:1471  items[3] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/DegenToken.sol\":1463:1506  items[3]=Item(\"Celestial Crusher\", 3, 1200) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup2\n  tag_22\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_22:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":1526:1553  Item(\"Astral Ace\", 4, 2200) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x41737472616c2041636500000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1545:1546  4 */\n  0x04\n    /* \"contracts/DegenToken.sol\":1526:1553  Item(\"Astral Ace\", 4, 2200) */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1548:1552  2200 */\n  0x0898\n    /* \"contracts/DegenToken.sol\":1526:1553  Item(\"Astral Ace\", 4, 2200) */\n  dup2\n  mstore\n  pop\n    /* \"contracts/DegenToken.sol\":1517:1522  items */\n  0x06\n    /* \"contracts/DegenToken.sol\":1517:1525  items[4] */\n  0x00\n    /* \"contracts/DegenToken.sol\":1523:1524  4 */\n  0x04\n    /* \"contracts/DegenToken.sol\":1517:1525  items[4] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/DegenToken.sol\":1517:1553  items[4]=Item(\"Astral Ace\", 4, 2200) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup2\n  tag_23\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_23:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":1573:1606  Item(\"Divine Dominator\", 5, 2400) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x446976696e6520446f6d696e61746f7200000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1598:1599  5 */\n  0x05\n    /* \"contracts/DegenToken.sol\":1573:1606  Item(\"Divine Dominator\", 5, 2400) */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1601:1605  2400 */\n  0x0960\n    /* \"contracts/DegenToken.sol\":1573:1606  Item(\"Divine Dominator\", 5, 2400) */\n  dup2\n  mstore\n  pop\n    /* \"contracts/DegenToken.sol\":1564:1569  items */\n  0x06\n    /* \"contracts/DegenToken.sol\":1564:1572  items[5] */\n  0x00\n    /* \"contracts/DegenToken.sol\":1570:1571  5 */\n  0x05\n    /* \"contracts/DegenToken.sol\":1564:1572  items[5] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/DegenToken.sol\":1564:1606  items[5]=Item(\"Divine Dominator\", 5, 2400) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup2\n  tag_24\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_24:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":1625:1626  6 */\n  0x06\n    /* \"contracts/DegenToken.sol\":1617:1624  tokenId */\n  0x07\n  0x00\n    /* \"contracts/DegenToken.sol\":1617:1626  tokenId=6 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DegenToken.sol\":1199:1636  constructor (address initialOwner, uint tokenSupply) ERC20(\"Degen\", \"DGN\") Ownable(initialOwner) {... */\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":785:3600  contract DegenToken is ERC20, Ownable, ERC20Burnable {... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/DegenToken.sol\":1760:1855  function mint(address to, uint256 amount) public onlyOwner {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_28\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  shl(0x20, tag_29)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"contracts/DegenToken.sol\":1830:1847  _mint(to, amount) */\n  tag_31\n    /* \"contracts/DegenToken.sol\":1836:1838  to */\n  dup3\n    /* \"contracts/DegenToken.sol\":1840:1846  amount */\n  dup3\n    /* \"contracts/DegenToken.sol\":1830:1835  _mint */\n  shl(0x20, tag_32)\n    /* \"contracts/DegenToken.sol\":1830:1847  _mint(to, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"contracts/DegenToken.sol\":1760:1855  function mint(address to, uint256 amount) public onlyOwner {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\ntag_29:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  tag_34\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n  shl(0x20, tag_35)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  tag_36\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n  shl(0x20, tag_37)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  tag_39\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n  shl(0x20, tag_35)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  mload(0x40)\n  0x118cdaa700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_40\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_43\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_44\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_45)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_50\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_52)\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_53\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_54\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_52:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_56\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_57)\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_58\n  swap2\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_61:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_63:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_64:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_98\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_63\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_65:\n    /* \"#utility.yul\":641:665   */\n  tag_100\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_64\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_101:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_66:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_103\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_65\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_67:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_68:\n    /* \"#utility.yul\":1001:1025   */\n  tag_106\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_67\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_107\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_107:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_69:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_109\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_68\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_112\n  tag_61\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1309:1428   */\ntag_111:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_113\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_66\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_114\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_69\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1718:1817   */\ntag_70:\n    /* \"#utility.yul\":1770:1776   */\n  0x00\n    /* \"#utility.yul\":1804:1809   */\n  dup2\n    /* \"#utility.yul\":1798:1810   */\n  mload\n    /* \"#utility.yul\":1788:1810   */\n  swap1\n  pop\n    /* \"#utility.yul\":1718:1817   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1823:2003   */\ntag_71:\n    /* \"#utility.yul\":1871:1948   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1868:1869   */\n  0x00\n    /* \"#utility.yul\":1861:1949   */\n  mstore\n    /* \"#utility.yul\":1968:1972   */\n  0x41\n    /* \"#utility.yul\":1965:1966   */\n  0x04\n    /* \"#utility.yul\":1958:1973   */\n  mstore\n    /* \"#utility.yul\":1992:1996   */\n  0x24\n    /* \"#utility.yul\":1989:1990   */\n  0x00\n    /* \"#utility.yul\":1982:1997   */\n  revert\n    /* \"#utility.yul\":2009:2189   */\ntag_72:\n    /* \"#utility.yul\":2057:2134   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2054:2055   */\n  0x00\n    /* \"#utility.yul\":2047:2135   */\n  mstore\n    /* \"#utility.yul\":2154:2158   */\n  0x22\n    /* \"#utility.yul\":2151:2152   */\n  0x04\n    /* \"#utility.yul\":2144:2159   */\n  mstore\n    /* \"#utility.yul\":2178:2182   */\n  0x24\n    /* \"#utility.yul\":2175:2176   */\n  0x00\n    /* \"#utility.yul\":2168:2183   */\n  revert\n    /* \"#utility.yul\":2195:2515   */\ntag_73:\n    /* \"#utility.yul\":2239:2245   */\n  0x00\n    /* \"#utility.yul\":2276:2277   */\n  0x02\n    /* \"#utility.yul\":2270:2274   */\n  dup3\n    /* \"#utility.yul\":2266:2278   */\n  div\n    /* \"#utility.yul\":2256:2278   */\n  swap1\n  pop\n    /* \"#utility.yul\":2323:2324   */\n  0x01\n    /* \"#utility.yul\":2317:2321   */\n  dup3\n    /* \"#utility.yul\":2313:2325   */\n  and\n    /* \"#utility.yul\":2344:2362   */\n  dup1\n    /* \"#utility.yul\":2334:2415   */\n  tag_119\n  jumpi\n    /* \"#utility.yul\":2400:2404   */\n  0x7f\n    /* \"#utility.yul\":2392:2398   */\n  dup3\n    /* \"#utility.yul\":2388:2405   */\n  and\n    /* \"#utility.yul\":2378:2405   */\n  swap2\n  pop\n    /* \"#utility.yul\":2334:2415   */\ntag_119:\n    /* \"#utility.yul\":2462:2464   */\n  0x20\n    /* \"#utility.yul\":2454:2460   */\n  dup3\n    /* \"#utility.yul\":2451:2465   */\n  lt\n    /* \"#utility.yul\":2431:2449   */\n  dup2\n    /* \"#utility.yul\":2428:2466   */\n  sub\n    /* \"#utility.yul\":2425:2509   */\n  tag_120\n  jumpi\n    /* \"#utility.yul\":2481:2499   */\n  tag_121\n  tag_72\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":2425:2509   */\ntag_120:\n    /* \"#utility.yul\":2246:2515   */\n  pop\n    /* \"#utility.yul\":2195:2515   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2521:2662   */\ntag_74:\n    /* \"#utility.yul\":2570:2574   */\n  0x00\n    /* \"#utility.yul\":2593:2596   */\n  dup2\n    /* \"#utility.yul\":2585:2596   */\n  swap1\n  pop\n    /* \"#utility.yul\":2616:2619   */\n  dup2\n    /* \"#utility.yul\":2613:2614   */\n  0x00\n    /* \"#utility.yul\":2606:2620   */\n  mstore\n    /* \"#utility.yul\":2650:2654   */\n  0x20\n    /* \"#utility.yul\":2647:2648   */\n  0x00\n    /* \"#utility.yul\":2637:2655   */\n  keccak256\n    /* \"#utility.yul\":2629:2655   */\n  swap1\n  pop\n    /* \"#utility.yul\":2521:2662   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2668:2761   */\ntag_75:\n    /* \"#utility.yul\":2705:2711   */\n  0x00\n    /* \"#utility.yul\":2752:2754   */\n  0x20\n    /* \"#utility.yul\":2747:2749   */\n  0x1f\n    /* \"#utility.yul\":2740:2745   */\n  dup4\n    /* \"#utility.yul\":2736:2750   */\n  add\n    /* \"#utility.yul\":2732:2755   */\n  div\n    /* \"#utility.yul\":2722:2755   */\n  swap1\n  pop\n    /* \"#utility.yul\":2668:2761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2767:2874   */\ntag_76:\n    /* \"#utility.yul\":2811:2819   */\n  0x00\n    /* \"#utility.yul\":2861:2866   */\n  dup3\n    /* \"#utility.yul\":2855:2859   */\n  dup3\n    /* \"#utility.yul\":2851:2867   */\n  shl\n    /* \"#utility.yul\":2830:2867   */\n  swap1\n  pop\n    /* \"#utility.yul\":2767:2874   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2880:3273   */\ntag_77:\n    /* \"#utility.yul\":2949:2955   */\n  0x00\n    /* \"#utility.yul\":2999:3000   */\n  0x08\n    /* \"#utility.yul\":2987:2997   */\n  dup4\n    /* \"#utility.yul\":2983:3001   */\n  mul\n    /* \"#utility.yul\":3022:3119   */\n  tag_126\n    /* \"#utility.yul\":3052:3118   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3041:3050   */\n  dup3\n    /* \"#utility.yul\":3022:3119   */\n  tag_76\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3140:3179   */\n  tag_127\n    /* \"#utility.yul\":3170:3178   */\n  dup7\n    /* \"#utility.yul\":3159:3168   */\n  dup4\n    /* \"#utility.yul\":3140:3179   */\n  tag_76\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3128:3179   */\n  swap6\n  pop\n    /* \"#utility.yul\":3212:3216   */\n  dup1\n    /* \"#utility.yul\":3208:3217   */\n  not\n    /* \"#utility.yul\":3201:3206   */\n  dup5\n    /* \"#utility.yul\":3197:3218   */\n  and\n    /* \"#utility.yul\":3188:3218   */\n  swap4\n  pop\n    /* \"#utility.yul\":3261:3265   */\n  dup1\n    /* \"#utility.yul\":3251:3259   */\n  dup7\n    /* \"#utility.yul\":3247:3266   */\n  and\n    /* \"#utility.yul\":3240:3245   */\n  dup5\n    /* \"#utility.yul\":3237:3267   */\n  or\n    /* \"#utility.yul\":3227:3267   */\n  swap3\n  pop\n    /* \"#utility.yul\":2956:3273   */\n  pop\n  pop\n    /* \"#utility.yul\":2880:3273   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3279:3339   */\ntag_78:\n    /* \"#utility.yul\":3307:3310   */\n  0x00\n    /* \"#utility.yul\":3328:3333   */\n  dup2\n    /* \"#utility.yul\":3321:3333   */\n  swap1\n  pop\n    /* \"#utility.yul\":3279:3339   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3345:3487   */\ntag_79:\n    /* \"#utility.yul\":3395:3404   */\n  0x00\n    /* \"#utility.yul\":3428:3481   */\n  tag_130\n    /* \"#utility.yul\":3446:3480   */\n  tag_131\n    /* \"#utility.yul\":3455:3479   */\n  tag_132\n    /* \"#utility.yul\":3473:3478   */\n  dup5\n    /* \"#utility.yul\":3455:3479   */\n  tag_67\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":3446:3480   */\n  tag_78\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":3428:3481   */\n  tag_67\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3415:3481   */\n  swap1\n  pop\n    /* \"#utility.yul\":3345:3487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3493:3568   */\ntag_80:\n    /* \"#utility.yul\":3536:3539   */\n  0x00\n    /* \"#utility.yul\":3557:3562   */\n  dup2\n    /* \"#utility.yul\":3550:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3493:3568   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3574:3843   */\ntag_81:\n    /* \"#utility.yul\":3684:3723   */\n  tag_135\n    /* \"#utility.yul\":3715:3722   */\n  dup4\n    /* \"#utility.yul\":3684:3723   */\n  tag_79\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3745:3836   */\n  tag_136\n    /* \"#utility.yul\":3794:3835   */\n  tag_137\n    /* \"#utility.yul\":3818:3834   */\n  dup3\n    /* \"#utility.yul\":3794:3835   */\n  tag_80\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":3786:3792   */\n  dup5\n    /* \"#utility.yul\":3779:3783   */\n  dup5\n    /* \"#utility.yul\":3773:3784   */\n  sload\n    /* \"#utility.yul\":3745:3836   */\n  tag_77\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":3739:3743   */\n  dup3\n    /* \"#utility.yul\":3732:3837   */\n  sstore\n    /* \"#utility.yul\":3650:3843   */\n  pop\n    /* \"#utility.yul\":3574:3843   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3849:3922   */\ntag_82:\n    /* \"#utility.yul\":3894:3897   */\n  0x00\n    /* \"#utility.yul\":3849:3922   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3928:4117   */\ntag_83:\n    /* \"#utility.yul\":4005:4037   */\n  tag_140\n  tag_82\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4046:4111   */\n  tag_141\n    /* \"#utility.yul\":4104:4110   */\n  dup2\n    /* \"#utility.yul\":4096:4102   */\n  dup5\n    /* \"#utility.yul\":4090:4094   */\n  dup5\n    /* \"#utility.yul\":4046:4111   */\n  tag_81\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3981:4117   */\n  pop\n    /* \"#utility.yul\":3928:4117   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4123:4309   */\ntag_84:\n    /* \"#utility.yul\":4183:4303   */\ntag_143:\n    /* \"#utility.yul\":4200:4203   */\n  dup2\n    /* \"#utility.yul\":4193:4198   */\n  dup2\n    /* \"#utility.yul\":4190:4204   */\n  lt\n    /* \"#utility.yul\":4183:4303   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":4254:4293   */\n  tag_146\n    /* \"#utility.yul\":4291:4292   */\n  0x00\n    /* \"#utility.yul\":4284:4289   */\n  dup3\n    /* \"#utility.yul\":4254:4293   */\n  tag_83\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":4227:4228   */\n  0x01\n    /* \"#utility.yul\":4220:4225   */\n  dup2\n    /* \"#utility.yul\":4216:4229   */\n  add\n    /* \"#utility.yul\":4207:4229   */\n  swap1\n  pop\n    /* \"#utility.yul\":4183:4303   */\n  jump(tag_143)\ntag_145:\n    /* \"#utility.yul\":4123:4309   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4315:4858   */\ntag_85:\n    /* \"#utility.yul\":4416:4418   */\n  0x1f\n    /* \"#utility.yul\":4411:4414   */\n  dup3\n    /* \"#utility.yul\":4408:4419   */\n  gt\n    /* \"#utility.yul\":4405:4851   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":4450:4488   */\n  tag_149\n    /* \"#utility.yul\":4482:4487   */\n  dup2\n    /* \"#utility.yul\":4450:4488   */\n  tag_74\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4534:4563   */\n  tag_150\n    /* \"#utility.yul\":4552:4562   */\n  dup5\n    /* \"#utility.yul\":4534:4563   */\n  tag_75\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":4524:4532   */\n  dup2\n    /* \"#utility.yul\":4520:4564   */\n  add\n    /* \"#utility.yul\":4717:4719   */\n  0x20\n    /* \"#utility.yul\":4705:4715   */\n  dup6\n    /* \"#utility.yul\":4702:4720   */\n  lt\n    /* \"#utility.yul\":4699:4748   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":4738:4746   */\n  dup2\n    /* \"#utility.yul\":4723:4746   */\n  swap1\n  pop\n    /* \"#utility.yul\":4699:4748   */\ntag_151:\n    /* \"#utility.yul\":4761:4841   */\n  tag_152\n    /* \"#utility.yul\":4817:4839   */\n  tag_153\n    /* \"#utility.yul\":4835:4838   */\n  dup6\n    /* \"#utility.yul\":4817:4839   */\n  tag_75\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":4807:4815   */\n  dup4\n    /* \"#utility.yul\":4803:4840   */\n  add\n    /* \"#utility.yul\":4790:4801   */\n  dup3\n    /* \"#utility.yul\":4761:4841   */\n  tag_84\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":4420:4851   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4851   */\ntag_148:\n    /* \"#utility.yul\":4315:4858   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4864:4981   */\ntag_86:\n    /* \"#utility.yul\":4918:4926   */\n  0x00\n    /* \"#utility.yul\":4968:4973   */\n  dup3\n    /* \"#utility.yul\":4962:4966   */\n  dup3\n    /* \"#utility.yul\":4958:4974   */\n  shr\n    /* \"#utility.yul\":4937:4974   */\n  swap1\n  pop\n    /* \"#utility.yul\":4864:4981   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4987:5156   */\ntag_87:\n    /* \"#utility.yul\":5031:5037   */\n  0x00\n    /* \"#utility.yul\":5064:5115   */\n  tag_156\n    /* \"#utility.yul\":5112:5113   */\n  0x00\n    /* \"#utility.yul\":5108:5114   */\n  not\n    /* \"#utility.yul\":5100:5105   */\n  dup5\n    /* \"#utility.yul\":5097:5098   */\n  0x08\n    /* \"#utility.yul\":5093:5106   */\n  mul\n    /* \"#utility.yul\":5064:5115   */\n  tag_86\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":5060:5116   */\n  not\n    /* \"#utility.yul\":5145:5149   */\n  dup1\n    /* \"#utility.yul\":5139:5143   */\n  dup4\n    /* \"#utility.yul\":5135:5150   */\n  and\n    /* \"#utility.yul\":5125:5150   */\n  swap2\n  pop\n    /* \"#utility.yul\":5038:5156   */\n  pop\n    /* \"#utility.yul\":4987:5156   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5161:5456   */\ntag_88:\n    /* \"#utility.yul\":5237:5241   */\n  0x00\n    /* \"#utility.yul\":5383:5412   */\n  tag_158\n    /* \"#utility.yul\":5408:5411   */\n  dup4\n    /* \"#utility.yul\":5402:5406   */\n  dup4\n    /* \"#utility.yul\":5383:5412   */\n  tag_87\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":5375:5412   */\n  swap2\n  pop\n    /* \"#utility.yul\":5445:5448   */\n  dup3\n    /* \"#utility.yul\":5442:5443   */\n  0x02\n    /* \"#utility.yul\":5438:5449   */\n  mul\n    /* \"#utility.yul\":5432:5436   */\n  dup3\n    /* \"#utility.yul\":5429:5450   */\n  or\n    /* \"#utility.yul\":5421:5450   */\n  swap1\n  pop\n    /* \"#utility.yul\":5161:5456   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5461:6856   */\ntag_9:\n    /* \"#utility.yul\":5578:5615   */\n  tag_160\n    /* \"#utility.yul\":5611:5614   */\n  dup3\n    /* \"#utility.yul\":5578:5615   */\n  tag_70\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":5680:5698   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5672:5678   */\n  dup2\n    /* \"#utility.yul\":5669:5699   */\n  gt\n    /* \"#utility.yul\":5666:5722   */\n  iszero\n  tag_161\n  jumpi\n    /* \"#utility.yul\":5702:5720   */\n  tag_162\n  tag_71\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":5666:5722   */\ntag_161:\n    /* \"#utility.yul\":5746:5784   */\n  tag_163\n    /* \"#utility.yul\":5778:5782   */\n  dup3\n    /* \"#utility.yul\":5772:5783   */\n  sload\n    /* \"#utility.yul\":5746:5784   */\n  tag_73\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":5831:5898   */\n  tag_164\n    /* \"#utility.yul\":5891:5897   */\n  dup3\n    /* \"#utility.yul\":5883:5889   */\n  dup3\n    /* \"#utility.yul\":5877:5881   */\n  dup6\n    /* \"#utility.yul\":5831:5898   */\n  tag_85\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":5925:5926   */\n  0x00\n    /* \"#utility.yul\":5949:5953   */\n  0x20\n    /* \"#utility.yul\":5936:5953   */\n  swap1\n  pop\n    /* \"#utility.yul\":5981:5983   */\n  0x1f\n    /* \"#utility.yul\":5973:5979   */\n  dup4\n    /* \"#utility.yul\":5970:5984   */\n  gt\n    /* \"#utility.yul\":5998:5999   */\n  0x01\n    /* \"#utility.yul\":5993:6611   */\n  dup2\n  eq\n  tag_166\n  jumpi\n    /* \"#utility.yul\":6655:6656   */\n  0x00\n    /* \"#utility.yul\":6672:6678   */\n  dup5\n    /* \"#utility.yul\":6669:6746   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":6721:6730   */\n  dup3\n    /* \"#utility.yul\":6716:6719   */\n  dup8\n    /* \"#utility.yul\":6712:6731   */\n  add\n    /* \"#utility.yul\":6706:6732   */\n  mload\n    /* \"#utility.yul\":6697:6732   */\n  swap1\n  pop\n    /* \"#utility.yul\":6669:6746   */\ntag_167:\n    /* \"#utility.yul\":6772:6839   */\n  tag_168\n    /* \"#utility.yul\":6832:6838   */\n  dup6\n    /* \"#utility.yul\":6825:6830   */\n  dup3\n    /* \"#utility.yul\":6772:6839   */\n  tag_88\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6766:6770   */\n  dup7\n    /* \"#utility.yul\":6759:6840   */\n  sstore\n    /* \"#utility.yul\":6628:6850   */\n  pop\n    /* \"#utility.yul\":5963:6850   */\n  jump(tag_165)\n    /* \"#utility.yul\":5993:6611   */\ntag_166:\n    /* \"#utility.yul\":6045:6049   */\n  0x1f\n    /* \"#utility.yul\":6041:6050   */\n  not\n    /* \"#utility.yul\":6033:6039   */\n  dup5\n    /* \"#utility.yul\":6029:6051   */\n  and\n    /* \"#utility.yul\":6079:6116   */\n  tag_169\n    /* \"#utility.yul\":6111:6115   */\n  dup7\n    /* \"#utility.yul\":6079:6116   */\n  tag_74\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":6138:6139   */\n  0x00\n    /* \"#utility.yul\":6152:6360   */\ntag_170:\n    /* \"#utility.yul\":6166:6173   */\n  dup3\n    /* \"#utility.yul\":6163:6164   */\n  dup2\n    /* \"#utility.yul\":6160:6174   */\n  lt\n    /* \"#utility.yul\":6152:6360   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":6245:6254   */\n  dup5\n    /* \"#utility.yul\":6240:6243   */\n  dup10\n    /* \"#utility.yul\":6236:6255   */\n  add\n    /* \"#utility.yul\":6230:6256   */\n  mload\n    /* \"#utility.yul\":6222:6228   */\n  dup3\n    /* \"#utility.yul\":6215:6257   */\n  sstore\n    /* \"#utility.yul\":6296:6297   */\n  0x01\n    /* \"#utility.yul\":6288:6294   */\n  dup3\n    /* \"#utility.yul\":6284:6298   */\n  add\n    /* \"#utility.yul\":6274:6298   */\n  swap2\n  pop\n    /* \"#utility.yul\":6343:6345   */\n  0x20\n    /* \"#utility.yul\":6332:6341   */\n  dup6\n    /* \"#utility.yul\":6328:6346   */\n  add\n    /* \"#utility.yul\":6315:6346   */\n  swap5\n  pop\n    /* \"#utility.yul\":6189:6193   */\n  0x20\n    /* \"#utility.yul\":6186:6187   */\n  dup2\n    /* \"#utility.yul\":6182:6194   */\n  add\n    /* \"#utility.yul\":6177:6194   */\n  swap1\n  pop\n    /* \"#utility.yul\":6152:6360   */\n  jump(tag_170)\ntag_172:\n    /* \"#utility.yul\":6388:6394   */\n  dup7\n    /* \"#utility.yul\":6379:6386   */\n  dup4\n    /* \"#utility.yul\":6376:6395   */\n  lt\n    /* \"#utility.yul\":6373:6552   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":6446:6455   */\n  dup5\n    /* \"#utility.yul\":6441:6444   */\n  dup10\n    /* \"#utility.yul\":6437:6456   */\n  add\n    /* \"#utility.yul\":6431:6457   */\n  mload\n    /* \"#utility.yul\":6489:6537   */\n  tag_174\n    /* \"#utility.yul\":6531:6535   */\n  0x1f\n    /* \"#utility.yul\":6523:6529   */\n  dup10\n    /* \"#utility.yul\":6519:6536   */\n  and\n    /* \"#utility.yul\":6508:6517   */\n  dup3\n    /* \"#utility.yul\":6489:6537   */\n  tag_87\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6481:6487   */\n  dup4\n    /* \"#utility.yul\":6474:6538   */\n  sstore\n    /* \"#utility.yul\":6396:6552   */\n  pop\n    /* \"#utility.yul\":6373:6552   */\ntag_173:\n    /* \"#utility.yul\":6598:6599   */\n  0x01\n    /* \"#utility.yul\":6594:6595   */\n  0x02\n    /* \"#utility.yul\":6586:6592   */\n  dup9\n    /* \"#utility.yul\":6582:6596   */\n  mul\n    /* \"#utility.yul\":6578:6600   */\n  add\n    /* \"#utility.yul\":6572:6576   */\n  dup9\n    /* \"#utility.yul\":6565:6601   */\n  sstore\n    /* \"#utility.yul\":6000:6611   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5963:6850   */\ntag_165:\n  pop\n    /* \"#utility.yul\":5553:6856   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5461:6856   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6862:6980   */\ntag_89:\n    /* \"#utility.yul\":6949:6973   */\n  tag_176\n    /* \"#utility.yul\":6967:6972   */\n  dup2\n    /* \"#utility.yul\":6949:6973   */\n  tag_64\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6944:6947   */\n  dup3\n    /* \"#utility.yul\":6937:6974   */\n  mstore\n    /* \"#utility.yul\":6862:6980   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6986:7208   */\ntag_14:\n    /* \"#utility.yul\":7079:7083   */\n  0x00\n    /* \"#utility.yul\":7117:7119   */\n  0x20\n    /* \"#utility.yul\":7106:7115   */\n  dup3\n    /* \"#utility.yul\":7102:7120   */\n  add\n    /* \"#utility.yul\":7094:7120   */\n  swap1\n  pop\n    /* \"#utility.yul\":7130:7201   */\n  tag_178\n    /* \"#utility.yul\":7198:7199   */\n  0x00\n    /* \"#utility.yul\":7187:7196   */\n  dup4\n    /* \"#utility.yul\":7183:7200   */\n  add\n    /* \"#utility.yul\":7174:7180   */\n  dup5\n    /* \"#utility.yul\":7130:7201   */\n  tag_89\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":6986:7208   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7214:7394   */\ntag_90:\n    /* \"#utility.yul\":7262:7339   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7259:7260   */\n  0x00\n    /* \"#utility.yul\":7252:7340   */\n  mstore\n    /* \"#utility.yul\":7359:7363   */\n  0x11\n    /* \"#utility.yul\":7356:7357   */\n  0x04\n    /* \"#utility.yul\":7349:7364   */\n  mstore\n    /* \"#utility.yul\":7383:7387   */\n  0x24\n    /* \"#utility.yul\":7380:7381   */\n  0x00\n    /* \"#utility.yul\":7373:7388   */\n  revert\n    /* \"#utility.yul\":7400:7591   */\ntag_51:\n    /* \"#utility.yul\":7440:7443   */\n  0x00\n    /* \"#utility.yul\":7459:7479   */\n  tag_181\n    /* \"#utility.yul\":7477:7478   */\n  dup3\n    /* \"#utility.yul\":7459:7479   */\n  tag_67\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":7454:7479   */\n  swap2\n  pop\n    /* \"#utility.yul\":7493:7513   */\n  tag_182\n    /* \"#utility.yul\":7511:7512   */\n  dup4\n    /* \"#utility.yul\":7493:7513   */\n  tag_67\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7488:7513   */\n  swap3\n  pop\n    /* \"#utility.yul\":7536:7537   */\n  dup3\n    /* \"#utility.yul\":7533:7534   */\n  dup3\n    /* \"#utility.yul\":7529:7538   */\n  add\n    /* \"#utility.yul\":7522:7538   */\n  swap1\n  pop\n    /* \"#utility.yul\":7557:7560   */\n  dup1\n    /* \"#utility.yul\":7554:7555   */\n  dup3\n    /* \"#utility.yul\":7551:7561   */\n  gt\n    /* \"#utility.yul\":7548:7584   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":7564:7582   */\n  tag_184\n  tag_90\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":7548:7584   */\ntag_183:\n    /* \"#utility.yul\":7400:7591   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7597:7715   */\ntag_91:\n    /* \"#utility.yul\":7684:7708   */\n  tag_186\n    /* \"#utility.yul\":7702:7707   */\n  dup2\n    /* \"#utility.yul\":7684:7708   */\n  tag_67\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7679:7682   */\n  dup3\n    /* \"#utility.yul\":7672:7709   */\n  mstore\n    /* \"#utility.yul\":7597:7715   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7721:8163   */\ntag_55:\n    /* \"#utility.yul\":7870:7874   */\n  0x00\n    /* \"#utility.yul\":7908:7910   */\n  0x60\n    /* \"#utility.yul\":7897:7906   */\n  dup3\n    /* \"#utility.yul\":7893:7911   */\n  add\n    /* \"#utility.yul\":7885:7911   */\n  swap1\n  pop\n    /* \"#utility.yul\":7921:7992   */\n  tag_188\n    /* \"#utility.yul\":7989:7990   */\n  0x00\n    /* \"#utility.yul\":7978:7987   */\n  dup4\n    /* \"#utility.yul\":7974:7991   */\n  add\n    /* \"#utility.yul\":7965:7971   */\n  dup7\n    /* \"#utility.yul\":7921:7992   */\n  tag_89\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":8002:8074   */\n  tag_189\n    /* \"#utility.yul\":8070:8072   */\n  0x20\n    /* \"#utility.yul\":8059:8068   */\n  dup4\n    /* \"#utility.yul\":8055:8073   */\n  add\n    /* \"#utility.yul\":8046:8052   */\n  dup6\n    /* \"#utility.yul\":8002:8074   */\n  tag_91\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8084:8156   */\n  tag_190\n    /* \"#utility.yul\":8152:8154   */\n  0x40\n    /* \"#utility.yul\":8141:8150   */\n  dup4\n    /* \"#utility.yul\":8137:8155   */\n  add\n    /* \"#utility.yul\":8128:8134   */\n  dup5\n    /* \"#utility.yul\":8084:8156   */\n  tag_91\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7721:8163   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8169:8391   */\ntag_59:\n    /* \"#utility.yul\":8262:8266   */\n  0x00\n    /* \"#utility.yul\":8300:8302   */\n  0x20\n    /* \"#utility.yul\":8289:8298   */\n  dup3\n    /* \"#utility.yul\":8285:8303   */\n  add\n    /* \"#utility.yul\":8277:8303   */\n  swap1\n  pop\n    /* \"#utility.yul\":8313:8384   */\n  tag_192\n    /* \"#utility.yul\":8381:8382   */\n  0x00\n    /* \"#utility.yul\":8370:8379   */\n  dup4\n    /* \"#utility.yul\":8366:8383   */\n  add\n    /* \"#utility.yul\":8357:8363   */\n  dup5\n    /* \"#utility.yul\":8313:8384   */\n  tag_91\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":8169:8391   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/DegenToken.sol\":785:3600  contract DegenToken is ERC20, Ownable, ERC20Burnable {... */\ntag_25:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DegenToken.sol\":785:3600  contract DegenToken is ERC20, Ownable, ERC20Burnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xaf3bcb7d\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xaf3bcb7d\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xea5e65e0\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf5112f87\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xfbd1a97b\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7b47ec1a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x23b872dd\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x62d6bbdf\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1072cbea\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x12065fe0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x17d70f7c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":1893:2081  function transferToken(address _recipient, uint _amount) external {... */\n    tag_5:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/DegenToken.sol\":3316:3415  function getBalance() external view returns(uint256){... */\n    tag_6:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":983:1003  uint8 public tokenId */\n    tag_7:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":1644:1727  function decimals() override public pure returns (uint8){... */\n    tag_10:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":1760:1855  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_11:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/DegenToken.sol\":2286:2440  function addItem(string memory _name, uint256 _price) public onlyOwner {... */\n    tag_13:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_16:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/DegenToken.sol\":3448:3595  function burnToken(uint _amount) external {... */\n    tag_17:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":2935:3275  function purchaseItem(uint8 _itemId) external {... */\n    tag_21:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n    tag_97:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":2449:2923  function isLessThanFive(bool _prediction, uint256 _betAmount) public {... */\n    tag_23:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n    tag_106:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      stop\n        /* \"contracts/DegenToken.sol\":2116:2278  function welcomeBonus() public {... */\n    tag_25:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      stop\n        /* \"contracts/DegenToken.sol\":942:976  mapping (uint8=>Item) public items */\n    tag_26:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_118\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_122\n      jump\t// in\n    tag_123:\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_125\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_124)\n    tag_125:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_126:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_126\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":1893:2081  function transferToken(address _recipient, uint _amount) external {... */\n    tag_42:\n        /* \"contracts/DegenToken.sol\":2001:2008  _amount */\n      dup1\n        /* \"contracts/DegenToken.sol\":1978:1999  balanceOf(msg.sender) */\n      tag_133\n        /* \"contracts/DegenToken.sol\":1988:1998  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":1978:1987  balanceOf */\n      tag_76\n        /* \"contracts/DegenToken.sol\":1978:1999  balanceOf(msg.sender) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/DegenToken.sol\":1978:2008  balanceOf(msg.sender)>=_amount */\n      lt\n      iszero\n        /* \"contracts/DegenToken.sol\":1970:2033  require(balanceOf(msg.sender)>=_amount, \"Insufficient balance\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"contracts/DegenToken.sol\":2044:2073  transfer(_recipient, _amount) */\n      tag_137\n        /* \"contracts/DegenToken.sol\":2053:2063  _recipient */\n      dup3\n        /* \"contracts/DegenToken.sol\":2065:2072  _amount */\n      dup3\n        /* \"contracts/DegenToken.sol\":2044:2052  transfer */\n      tag_95\n        /* \"contracts/DegenToken.sol\":2044:2073  transfer(_recipient, _amount) */\n      jump\t// in\n    tag_137:\n      pop\n        /* \"contracts/DegenToken.sol\":1893:2081  function transferToken(address _recipient, uint _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":3316:3415  function getBalance() external view returns(uint256){... */\n    tag_44:\n        /* \"contracts/DegenToken.sol\":3360:3367  uint256 */\n      0x00\n        /* \"contracts/DegenToken.sol\":3386:3407  balanceOf(msg.sender) */\n      tag_139\n        /* \"contracts/DegenToken.sol\":3396:3406  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":3386:3395  balanceOf */\n      tag_76\n        /* \"contracts/DegenToken.sol\":3386:3407  balanceOf(msg.sender) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/DegenToken.sol\":3379:3407  return balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/DegenToken.sol\":3316:3415  function getBalance() external view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":983:1003  uint8 public tokenId */\n    tag_48:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":1644:1727  function decimals() override public pure returns (uint8){... */\n    tag_60:\n        /* \"contracts/DegenToken.sol\":1694:1699  uint8 */\n      0x00\n        /* \"contracts/DegenToken.sol\":1644:1727  function decimals() override public pure returns (uint8){... */\n      swap1\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":1760:1855  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/DegenToken.sol\":1830:1847  _mint(to, amount) */\n      tag_152\n        /* \"contracts/DegenToken.sol\":1836:1838  to */\n      dup3\n        /* \"contracts/DegenToken.sol\":1840:1846  amount */\n      dup3\n        /* \"contracts/DegenToken.sol\":1830:1835  _mint */\n      tag_153\n        /* \"contracts/DegenToken.sol\":1830:1847  _mint(to, amount) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/DegenToken.sol\":1760:1855  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":2286:2440  function addItem(string memory _name, uint256 _price) public onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_159:\n        /* \"contracts/DegenToken.sol\":2385:2412  Item(_name, tokenId,_price) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/DegenToken.sol\":2390:2395  _name */\n      dup4\n        /* \"contracts/DegenToken.sol\":2385:2412  Item(_name, tokenId,_price) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DegenToken.sol\":2397:2404  tokenId */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DegenToken.sol\":2385:2412  Item(_name, tokenId,_price) */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DegenToken.sol\":2405:2411  _price */\n      dup3\n        /* \"contracts/DegenToken.sol\":2385:2412  Item(_name, tokenId,_price) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/DegenToken.sol\":2368:2373  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":2368:2382  items[tokenId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":2374:2381  tokenId */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DegenToken.sol\":2368:2382  items[tokenId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":2368:2412  items[tokenId] = Item(_name, tokenId,_price) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/DegenToken.sol\":2423:2430  tokenId */\n      0x07\n      0x00\n        /* \"contracts/DegenToken.sol\":2423:2432  tokenId++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/DegenToken.sol\":2286:2440  function addItem(string memory _name, uint256 _price) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":3448:3595  function burnToken(uint _amount) external {... */\n    tag_85:\n        /* \"contracts/DegenToken.sol\":3532:3539  _amount */\n      dup1\n        /* \"contracts/DegenToken.sol\":3509:3530  balanceOf(msg.sender) */\n      tag_176\n        /* \"contracts/DegenToken.sol\":3519:3529  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":3509:3518  balanceOf */\n      tag_76\n        /* \"contracts/DegenToken.sol\":3509:3530  balanceOf(msg.sender) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/DegenToken.sol\":3509:3539  balanceOf(msg.sender)>=_amount */\n      lt\n      iszero\n        /* \"contracts/DegenToken.sol\":3501:3563  require(balanceOf(msg.sender)>=_amount, \"Insufficient amount\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/DegenToken.sol\":3574:3587  burn(_amount) */\n      tag_180\n        /* \"contracts/DegenToken.sol\":3579:3586  _amount */\n      dup2\n        /* \"contracts/DegenToken.sol\":3574:3578  burn */\n      tag_68\n        /* \"contracts/DegenToken.sol\":3574:3587  burn(_amount) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/DegenToken.sol\":3448:3595  function burnToken(uint _amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_183\n      swap1\n      tag_122\n      jump\t// in\n    tag_183:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_184\n      swap1\n      tag_122\n      jump\t// in\n    tag_184:\n      dup1\n      iszero\n      tag_185\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_186\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_185)\n    tag_186:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_187:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_187\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":2935:3275  function purchaseItem(uint8 _itemId) external {... */\n    tag_100:\n        /* \"contracts/DegenToken.sol\":3024:3025  0 */\n      0x00\n        /* \"contracts/DegenToken.sol\":3000:3005  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3000:3014  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3006:3013  _itemId */\n      dup4\n        /* \"contracts/DegenToken.sol\":3000:3014  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3000:3020  items[_itemId].price */\n      0x02\n      add\n      sload\n        /* \"contracts/DegenToken.sol\":3000:3025  items[_itemId].price != 0 */\n      sub\n        /* \"contracts/DegenToken.sol\":2992:3044  require(items[_itemId].price != 0, \"Item not found\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/DegenToken.sol\":3088:3093  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3088:3102  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3094:3101  _itemId */\n      dup3\n        /* \"contracts/DegenToken.sol\":3088:3102  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3088:3108  items[_itemId].price */\n      0x02\n      add\n      sload\n        /* \"contracts/DegenToken.sol\":3063:3084  balanceOf(msg.sender) */\n      tag_195\n        /* \"contracts/DegenToken.sol\":3073:3083  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":3063:3072  balanceOf */\n      tag_76\n        /* \"contracts/DegenToken.sol\":3063:3084  balanceOf(msg.sender) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/DegenToken.sol\":3063:3108  balanceOf(msg.sender) >= items[_itemId].price */\n      lt\n      iszero\n        /* \"contracts/DegenToken.sol\":3055:3133  require(balanceOf(msg.sender) >= items[_itemId].price, \"Insufficient balance\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_136\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"contracts/DegenToken.sol\":3146:3172  burn(items[_itemId].price) */\n      tag_198\n        /* \"contracts/DegenToken.sol\":3151:3156  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3151:3165  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3157:3164  _itemId */\n      dup4\n        /* \"contracts/DegenToken.sol\":3151:3165  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3151:3171  items[_itemId].price */\n      0x02\n      add\n      sload\n        /* \"contracts/DegenToken.sol\":3146:3150  burn */\n      tag_68\n        /* \"contracts/DegenToken.sol\":3146:3172  burn(items[_itemId].price) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/DegenToken.sol\":3204:3214  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":3190:3267  ItemPurchased(msg.sender, _itemId, items[_itemId].name, items[_itemId].price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8bedd141782c49139782bd92bd7a760a0bcb544ffecfd2b25f00366fae06598e\n        /* \"contracts/DegenToken.sol\":3216:3223  _itemId */\n      dup3\n        /* \"contracts/DegenToken.sol\":3225:3230  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3225:3239  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3231:3238  _itemId */\n      dup6\n        /* \"contracts/DegenToken.sol\":3225:3239  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3225:3244  items[_itemId].name */\n      0x00\n      add\n        /* \"contracts/DegenToken.sol\":3246:3251  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3246:3260  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3252:3259  _itemId */\n      dup7\n        /* \"contracts/DegenToken.sol\":3246:3260  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3246:3266  items[_itemId].price */\n      0x02\n      add\n      sload\n        /* \"contracts/DegenToken.sol\":3190:3267  ItemPurchased(msg.sender, _itemId, items[_itemId].name, items[_itemId].price) */\n      mload(0x40)\n      tag_199\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DegenToken.sol\":2935:3275  function purchaseItem(uint8 _itemId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":2449:2923  function isLessThanFive(bool _prediction, uint256 _betAmount) public {... */\n    tag_109:\n        /* \"contracts/DegenToken.sol\":2529:2546  uint randomNumber */\n      0x00\n        /* \"contracts/DegenToken.sol\":2614:2616  10 */\n      0x0a\n        /* \"contracts/DegenToken.sol\":2581:2596  block.timestamp */\n      timestamp\n        /* \"contracts/DegenToken.sol\":2598:2608  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2564:2609  abi.encodePacked(block.timestamp, msg.sender) */\n      add(0x20, mload(0x40))\n      tag_203\n      swap3\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/DegenToken.sol\":2554:2610  keccak256(abi.encodePacked(block.timestamp, msg.sender)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/DegenToken.sol\":2549:2611  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) */\n      0x00\n      shr\n        /* \"contracts/DegenToken.sol\":2549:2616  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 10 */\n      tag_205\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n        /* \"contracts/DegenToken.sol\":2529:2616  uint randomNumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 10 */\n      swap1\n      pop\n        /* \"contracts/DegenToken.sol\":2661:2662  5 */\n      0x05\n        /* \"contracts/DegenToken.sol\":2648:2660  randomNumber */\n      dup2\n        /* \"contracts/DegenToken.sol\":2648:2662  randomNumber<5 */\n      lt\n        /* \"contracts/DegenToken.sol\":2633:2663  _prediction ==(randomNumber<5) */\n      iszero\n      iszero\n        /* \"contracts/DegenToken.sol\":2633:2644  _prediction */\n      dup4\n        /* \"contracts/DegenToken.sol\":2633:2663  _prediction ==(randomNumber<5) */\n      iszero\n      iszero\n      sub\n        /* \"contracts/DegenToken.sol\":2629:2916  if (_prediction ==(randomNumber<5)) {... */\n      tag_207\n      jumpi\n        /* \"contracts/DegenToken.sol\":2680:2711  _mint(msg.sender, _betAmount*2) */\n      tag_208\n        /* \"contracts/DegenToken.sol\":2686:2696  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2709:2710  2 */\n      0x02\n        /* \"contracts/DegenToken.sol\":2698:2708  _betAmount */\n      dup5\n        /* \"contracts/DegenToken.sol\":2698:2710  _betAmount*2 */\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"contracts/DegenToken.sol\":2680:2685  _mint */\n      tag_153\n        /* \"contracts/DegenToken.sol\":2680:2711  _mint(msg.sender, _betAmount*2) */\n      jump\t// in\n    tag_208:\n        /* \"contracts/DegenToken.sol\":2743:2753  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2731:2781  GameOutcome(msg.sender, randomNumber, true, \"won\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587\n        /* \"contracts/DegenToken.sol\":2755:2767  randomNumber */\n      dup3\n        /* \"contracts/DegenToken.sol\":2769:2773  true */\n      0x01\n        /* \"contracts/DegenToken.sol\":2731:2781  GameOutcome(msg.sender, randomNumber, true, \"won\") */\n      mload(0x40)\n      tag_211\n      swap3\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DegenToken.sol\":2629:2916  if (_prediction ==(randomNumber<5)) {... */\n      jump(tag_213)\n    tag_207:\n        /* \"contracts/DegenToken.sol\":2816:2832  burn(_betAmount) */\n      tag_214\n        /* \"contracts/DegenToken.sol\":2821:2831  _betAmount */\n      dup3\n        /* \"contracts/DegenToken.sol\":2816:2820  burn */\n      tag_68\n        /* \"contracts/DegenToken.sol\":2816:2832  burn(_betAmount) */\n      jump\t// in\n    tag_214:\n        /* \"contracts/DegenToken.sol\":2864:2874  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2852:2904  GameOutcome(msg.sender, randomNumber, false, \"lost\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587\n        /* \"contracts/DegenToken.sol\":2876:2888  randomNumber */\n      dup3\n        /* \"contracts/DegenToken.sol\":2890:2895  false */\n      0x00\n        /* \"contracts/DegenToken.sol\":2852:2904  GameOutcome(msg.sender, randomNumber, false, \"lost\") */\n      mload(0x40)\n      tag_215\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DegenToken.sol\":2629:2916  if (_prediction ==(randomNumber<5)) {... */\n    tag_213:\n        /* \"contracts/DegenToken.sol\":2518:2923  {... */\n      pop\n        /* \"contracts/DegenToken.sol\":2449:2923  function isLessThanFive(bool _prediction, uint256 _betAmount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":2116:2278  function welcomeBonus() public {... */\n    tag_114:\n        /* \"contracts/DegenToken.sol\":2191:2192  0 */\n      0x00\n        /* \"contracts/DegenToken.sol\":2166:2187  balanceOf(msg.sender) */\n      tag_224\n        /* \"contracts/DegenToken.sol\":2176:2186  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2166:2175  balanceOf */\n      tag_76\n        /* \"contracts/DegenToken.sol\":2166:2187  balanceOf(msg.sender) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/DegenToken.sol\":2166:2192  balanceOf(msg.sender) == 0 */\n      eq\n        /* \"contracts/DegenToken.sol\":2158:2238  require(balanceOf(msg.sender) == 0, \"You've already claimed your welcome bonus\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"contracts/DegenToken.sol\":2249:2270  _mint(msg.sender, 50) */\n      tag_228\n        /* \"contracts/DegenToken.sol\":2255:2265  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2267:2269  50 */\n      0x32\n        /* \"contracts/DegenToken.sol\":2249:2254  _mint */\n      tag_153\n        /* \"contracts/DegenToken.sol\":2249:2270  _mint(msg.sender, 50) */\n      jump\t// in\n    tag_228:\n        /* \"contracts/DegenToken.sol\":2116:2278  function welcomeBonus() public {... */\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":942:976  mapping (uint8=>Item) public items */\n    tag_117:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      tag_229\n      swap1\n      tag_122\n      jump\t// in\n    tag_229:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_230\n      swap1\n      tag_122\n      jump\t// in\n    tag_230:\n      dup1\n      iszero\n      tag_231\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_232\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_231)\n    tag_232:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_233:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_233\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_231:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_273\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_276\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_278)\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_282)\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_283\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_284:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_285:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_286:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_287:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_288:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_361\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_284\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":711:782   */\n      tag_362\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_285\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_363\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_286\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":881:910   */\n      tag_364\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_287\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_33:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_366\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_288\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_289:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_290:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_291:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_292:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_293:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_372\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_292\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_294:\n        /* \"#utility.yul\":1876:1900   */\n      tag_374\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_293\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_375:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_295:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_377\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_294\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_296:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_297:\n        /* \"#utility.yul\":2232:2256   */\n      tag_380\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_296\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_381:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_298:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_383\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_297\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_36:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_386\n      tag_290\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2525:2644   */\n    tag_385:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_387\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_295\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_388\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_298\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_299:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_300:\n        /* \"#utility.yul\":3089:3110   */\n      tag_391\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_299\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_39:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_393\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_300\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_301:\n        /* \"#utility.yul\":3426:3450   */\n      tag_395\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_296\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_46:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_397\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_301\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:3777   */\n    tag_302:\n        /* \"#utility.yul\":3726:3733   */\n      0x00\n        /* \"#utility.yul\":3766:3770   */\n      0xff\n        /* \"#utility.yul\":3759:3764   */\n      dup3\n        /* \"#utility.yul\":3755:3771   */\n      and\n        /* \"#utility.yul\":3744:3771   */\n      swap1\n      pop\n        /* \"#utility.yul\":3691:3777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3783:3895   */\n    tag_303:\n        /* \"#utility.yul\":3866:3888   */\n      tag_400\n        /* \"#utility.yul\":3882:3887   */\n      dup2\n        /* \"#utility.yul\":3866:3888   */\n      tag_302\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":3861:3864   */\n      dup3\n        /* \"#utility.yul\":3854:3889   */\n      mstore\n        /* \"#utility.yul\":3783:3895   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3901:4115   */\n    tag_50:\n        /* \"#utility.yul\":3990:3994   */\n      0x00\n        /* \"#utility.yul\":4028:4030   */\n      0x20\n        /* \"#utility.yul\":4017:4026   */\n      dup3\n        /* \"#utility.yul\":4013:4031   */\n      add\n        /* \"#utility.yul\":4005:4031   */\n      swap1\n      pop\n        /* \"#utility.yul\":4041:4108   */\n      tag_402\n        /* \"#utility.yul\":4105:4106   */\n      0x00\n        /* \"#utility.yul\":4094:4103   */\n      dup4\n        /* \"#utility.yul\":4090:4107   */\n      add\n        /* \"#utility.yul\":4081:4087   */\n      dup5\n        /* \"#utility.yul\":4041:4108   */\n      tag_303\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3901:4115   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4121:4740   */\n    tag_56:\n        /* \"#utility.yul\":4198:4204   */\n      0x00\n        /* \"#utility.yul\":4206:4212   */\n      dup1\n        /* \"#utility.yul\":4214:4220   */\n      0x00\n        /* \"#utility.yul\":4263:4265   */\n      0x60\n        /* \"#utility.yul\":4251:4260   */\n      dup5\n        /* \"#utility.yul\":4242:4249   */\n      dup7\n        /* \"#utility.yul\":4238:4261   */\n      sub\n        /* \"#utility.yul\":4234:4266   */\n      slt\n        /* \"#utility.yul\":4231:4350   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":4269:4348   */\n      tag_405\n      tag_290\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4231:4350   */\n    tag_404:\n        /* \"#utility.yul\":4389:4390   */\n      0x00\n        /* \"#utility.yul\":4414:4467   */\n      tag_406\n        /* \"#utility.yul\":4459:4466   */\n      dup7\n        /* \"#utility.yul\":4450:4456   */\n      dup3\n        /* \"#utility.yul\":4439:4448   */\n      dup8\n        /* \"#utility.yul\":4435:4457   */\n      add\n        /* \"#utility.yul\":4414:4467   */\n      tag_295\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":4404:4467   */\n      swap4\n      pop\n        /* \"#utility.yul\":4360:4477   */\n      pop\n        /* \"#utility.yul\":4516:4518   */\n      0x20\n        /* \"#utility.yul\":4542:4595   */\n      tag_407\n        /* \"#utility.yul\":4587:4594   */\n      dup7\n        /* \"#utility.yul\":4578:4584   */\n      dup3\n        /* \"#utility.yul\":4567:4576   */\n      dup8\n        /* \"#utility.yul\":4563:4585   */\n      add\n        /* \"#utility.yul\":4542:4595   */\n      tag_295\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":4532:4595   */\n      swap3\n      pop\n        /* \"#utility.yul\":4487:4605   */\n      pop\n        /* \"#utility.yul\":4644:4646   */\n      0x40\n        /* \"#utility.yul\":4670:4723   */\n      tag_408\n        /* \"#utility.yul\":4715:4722   */\n      dup7\n        /* \"#utility.yul\":4706:4712   */\n      dup3\n        /* \"#utility.yul\":4695:4704   */\n      dup8\n        /* \"#utility.yul\":4691:4713   */\n      add\n        /* \"#utility.yul\":4670:4723   */\n      tag_298\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":4660:4723   */\n      swap2\n      pop\n        /* \"#utility.yul\":4615:4733   */\n      pop\n        /* \"#utility.yul\":4121:4740   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_67:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_411\n      tag_290\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":4822:4941   */\n    tag_410:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_412\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_298\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5198   */\n    tag_304:\n        /* \"#utility.yul\":5190:5191   */\n      0x00\n        /* \"#utility.yul\":5187:5188   */\n      dup1\n        /* \"#utility.yul\":5180:5192   */\n      revert\n        /* \"#utility.yul\":5204:5321   */\n    tag_305:\n        /* \"#utility.yul\":5313:5314   */\n      0x00\n        /* \"#utility.yul\":5310:5311   */\n      dup1\n        /* \"#utility.yul\":5303:5315   */\n      revert\n        /* \"#utility.yul\":5327:5507   */\n    tag_306:\n        /* \"#utility.yul\":5375:5452   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5372:5373   */\n      0x00\n        /* \"#utility.yul\":5365:5453   */\n      mstore\n        /* \"#utility.yul\":5472:5476   */\n      0x41\n        /* \"#utility.yul\":5469:5470   */\n      0x04\n        /* \"#utility.yul\":5462:5477   */\n      mstore\n        /* \"#utility.yul\":5496:5500   */\n      0x24\n        /* \"#utility.yul\":5493:5494   */\n      0x00\n        /* \"#utility.yul\":5486:5501   */\n      revert\n        /* \"#utility.yul\":5513:5794   */\n    tag_307:\n        /* \"#utility.yul\":5596:5623   */\n      tag_417\n        /* \"#utility.yul\":5618:5622   */\n      dup3\n        /* \"#utility.yul\":5596:5623   */\n      tag_287\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":5588:5594   */\n      dup2\n        /* \"#utility.yul\":5584:5624   */\n      add\n        /* \"#utility.yul\":5726:5732   */\n      dup2\n        /* \"#utility.yul\":5714:5724   */\n      dup2\n        /* \"#utility.yul\":5711:5733   */\n      lt\n        /* \"#utility.yul\":5690:5708   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5678:5688   */\n      dup3\n        /* \"#utility.yul\":5675:5709   */\n      gt\n        /* \"#utility.yul\":5672:5734   */\n      or\n        /* \"#utility.yul\":5669:5757   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":5737:5755   */\n      tag_419\n      tag_306\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5669:5757   */\n    tag_418:\n        /* \"#utility.yul\":5777:5787   */\n      dup1\n        /* \"#utility.yul\":5773:5775   */\n      0x40\n        /* \"#utility.yul\":5766:5788   */\n      mstore\n        /* \"#utility.yul\":5556:5794   */\n      pop\n        /* \"#utility.yul\":5513:5794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5800:5929   */\n    tag_308:\n        /* \"#utility.yul\":5834:5840   */\n      0x00\n        /* \"#utility.yul\":5861:5881   */\n      tag_421\n      tag_289\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5851:5881   */\n      swap1\n      pop\n        /* \"#utility.yul\":5890:5923   */\n      tag_422\n        /* \"#utility.yul\":5918:5922   */\n      dup3\n        /* \"#utility.yul\":5910:5916   */\n      dup3\n        /* \"#utility.yul\":5890:5923   */\n      tag_307\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":5800:5929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5935:6243   */\n    tag_309:\n        /* \"#utility.yul\":5997:6001   */\n      0x00\n        /* \"#utility.yul\":6087:6105   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6079:6085   */\n      dup3\n        /* \"#utility.yul\":6076:6106   */\n      gt\n        /* \"#utility.yul\":6073:6129   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":6109:6127   */\n      tag_425\n      tag_306\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":6073:6129   */\n    tag_424:\n        /* \"#utility.yul\":6147:6176   */\n      tag_426\n        /* \"#utility.yul\":6169:6175   */\n      dup3\n        /* \"#utility.yul\":6147:6176   */\n      tag_287\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":6139:6176   */\n      swap1\n      pop\n        /* \"#utility.yul\":6231:6235   */\n      0x20\n        /* \"#utility.yul\":6225:6229   */\n      dup2\n        /* \"#utility.yul\":6221:6236   */\n      add\n        /* \"#utility.yul\":6213:6236   */\n      swap1\n      pop\n        /* \"#utility.yul\":5935:6243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6249:6397   */\n    tag_310:\n        /* \"#utility.yul\":6347:6353   */\n      dup3\n        /* \"#utility.yul\":6342:6345   */\n      dup2\n        /* \"#utility.yul\":6337:6340   */\n      dup4\n        /* \"#utility.yul\":6324:6354   */\n      calldatacopy\n        /* \"#utility.yul\":6388:6389   */\n      0x00\n        /* \"#utility.yul\":6379:6385   */\n      dup4\n        /* \"#utility.yul\":6374:6377   */\n      dup4\n        /* \"#utility.yul\":6370:6386   */\n      add\n        /* \"#utility.yul\":6363:6390   */\n      mstore\n        /* \"#utility.yul\":6249:6397   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6403:6828   */\n    tag_311:\n        /* \"#utility.yul\":6481:6486   */\n      0x00\n        /* \"#utility.yul\":6506:6572   */\n      tag_429\n        /* \"#utility.yul\":6522:6571   */\n      tag_430\n        /* \"#utility.yul\":6564:6570   */\n      dup5\n        /* \"#utility.yul\":6522:6571   */\n      tag_309\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6506:6572   */\n      tag_308\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":6497:6572   */\n      swap1\n      pop\n        /* \"#utility.yul\":6595:6601   */\n      dup3\n        /* \"#utility.yul\":6588:6593   */\n      dup2\n        /* \"#utility.yul\":6581:6602   */\n      mstore\n        /* \"#utility.yul\":6633:6637   */\n      0x20\n        /* \"#utility.yul\":6626:6631   */\n      dup2\n        /* \"#utility.yul\":6622:6638   */\n      add\n        /* \"#utility.yul\":6671:6674   */\n      dup5\n        /* \"#utility.yul\":6662:6668   */\n      dup5\n        /* \"#utility.yul\":6657:6660   */\n      dup5\n        /* \"#utility.yul\":6653:6669   */\n      add\n        /* \"#utility.yul\":6650:6675   */\n      gt\n        /* \"#utility.yul\":6647:6759   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":6678:6757   */\n      tag_432\n      tag_305\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":6647:6759   */\n    tag_431:\n        /* \"#utility.yul\":6768:6822   */\n      tag_433\n        /* \"#utility.yul\":6815:6821   */\n      dup5\n        /* \"#utility.yul\":6810:6813   */\n      dup3\n        /* \"#utility.yul\":6805:6808   */\n      dup6\n        /* \"#utility.yul\":6768:6822   */\n      tag_310\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":6487:6828   */\n      pop\n        /* \"#utility.yul\":6403:6828   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6848:7188   */\n    tag_312:\n        /* \"#utility.yul\":6904:6909   */\n      0x00\n        /* \"#utility.yul\":6953:6956   */\n      dup3\n        /* \"#utility.yul\":6946:6950   */\n      0x1f\n        /* \"#utility.yul\":6938:6944   */\n      dup4\n        /* \"#utility.yul\":6934:6951   */\n      add\n        /* \"#utility.yul\":6930:6957   */\n      slt\n        /* \"#utility.yul\":6920:7042   */\n      tag_435\n      jumpi\n        /* \"#utility.yul\":6961:7040   */\n      tag_436\n      tag_304\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6920:7042   */\n    tag_435:\n        /* \"#utility.yul\":7078:7084   */\n      dup2\n        /* \"#utility.yul\":7065:7085   */\n      calldataload\n        /* \"#utility.yul\":7103:7182   */\n      tag_437\n        /* \"#utility.yul\":7178:7181   */\n      dup5\n        /* \"#utility.yul\":7170:7176   */\n      dup3\n        /* \"#utility.yul\":7163:7167   */\n      0x20\n        /* \"#utility.yul\":7155:7161   */\n      dup7\n        /* \"#utility.yul\":7151:7168   */\n      add\n        /* \"#utility.yul\":7103:7182   */\n      tag_311\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":7094:7182   */\n      swap2\n      pop\n        /* \"#utility.yul\":6910:7188   */\n      pop\n        /* \"#utility.yul\":6848:7188   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7194:7848   */\n    tag_71:\n        /* \"#utility.yul\":7272:7278   */\n      0x00\n        /* \"#utility.yul\":7280:7286   */\n      dup1\n        /* \"#utility.yul\":7329:7331   */\n      0x40\n        /* \"#utility.yul\":7317:7326   */\n      dup4\n        /* \"#utility.yul\":7308:7315   */\n      dup6\n        /* \"#utility.yul\":7304:7327   */\n      sub\n        /* \"#utility.yul\":7300:7332   */\n      slt\n        /* \"#utility.yul\":7297:7416   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":7335:7414   */\n      tag_440\n      tag_290\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7297:7416   */\n    tag_439:\n        /* \"#utility.yul\":7483:7484   */\n      0x00\n        /* \"#utility.yul\":7472:7481   */\n      dup4\n        /* \"#utility.yul\":7468:7485   */\n      add\n        /* \"#utility.yul\":7455:7486   */\n      calldataload\n        /* \"#utility.yul\":7513:7531   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7505:7511   */\n      dup2\n        /* \"#utility.yul\":7502:7532   */\n      gt\n        /* \"#utility.yul\":7499:7616   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":7535:7614   */\n      tag_442\n      tag_291\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":7499:7616   */\n    tag_441:\n        /* \"#utility.yul\":7640:7703   */\n      tag_443\n        /* \"#utility.yul\":7695:7702   */\n      dup6\n        /* \"#utility.yul\":7686:7692   */\n      dup3\n        /* \"#utility.yul\":7675:7684   */\n      dup7\n        /* \"#utility.yul\":7671:7693   */\n      add\n        /* \"#utility.yul\":7640:7703   */\n      tag_312\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":7630:7703   */\n      swap3\n      pop\n        /* \"#utility.yul\":7426:7713   */\n      pop\n        /* \"#utility.yul\":7752:7754   */\n      0x20\n        /* \"#utility.yul\":7778:7831   */\n      tag_444\n        /* \"#utility.yul\":7823:7830   */\n      dup6\n        /* \"#utility.yul\":7814:7820   */\n      dup3\n        /* \"#utility.yul\":7803:7812   */\n      dup7\n        /* \"#utility.yul\":7799:7821   */\n      add\n        /* \"#utility.yul\":7778:7831   */\n      tag_298\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":7768:7831   */\n      swap2\n      pop\n        /* \"#utility.yul\":7723:7841   */\n      pop\n        /* \"#utility.yul\":7194:7848   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7854:8183   */\n    tag_75:\n        /* \"#utility.yul\":7913:7919   */\n      0x00\n        /* \"#utility.yul\":7962:7964   */\n      0x20\n        /* \"#utility.yul\":7950:7959   */\n      dup3\n        /* \"#utility.yul\":7941:7948   */\n      dup5\n        /* \"#utility.yul\":7937:7960   */\n      sub\n        /* \"#utility.yul\":7933:7965   */\n      slt\n        /* \"#utility.yul\":7930:8049   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":7968:8047   */\n      tag_447\n      tag_290\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7930:8049   */\n    tag_446:\n        /* \"#utility.yul\":8088:8089   */\n      0x00\n        /* \"#utility.yul\":8113:8166   */\n      tag_448\n        /* \"#utility.yul\":8158:8165   */\n      dup5\n        /* \"#utility.yul\":8149:8155   */\n      dup3\n        /* \"#utility.yul\":8138:8147   */\n      dup6\n        /* \"#utility.yul\":8134:8156   */\n      add\n        /* \"#utility.yul\":8113:8166   */\n      tag_295\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":8103:8166   */\n      swap2\n      pop\n        /* \"#utility.yul\":8059:8176   */\n      pop\n        /* \"#utility.yul\":7854:8183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8189:8307   */\n    tag_313:\n        /* \"#utility.yul\":8276:8300   */\n      tag_450\n        /* \"#utility.yul\":8294:8299   */\n      dup2\n        /* \"#utility.yul\":8276:8300   */\n      tag_293\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":8271:8274   */\n      dup3\n        /* \"#utility.yul\":8264:8301   */\n      mstore\n        /* \"#utility.yul\":8189:8307   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8313:8535   */\n    tag_89:\n        /* \"#utility.yul\":8406:8410   */\n      0x00\n        /* \"#utility.yul\":8444:8446   */\n      0x20\n        /* \"#utility.yul\":8433:8442   */\n      dup3\n        /* \"#utility.yul\":8429:8447   */\n      add\n        /* \"#utility.yul\":8421:8447   */\n      swap1\n      pop\n        /* \"#utility.yul\":8457:8528   */\n      tag_452\n        /* \"#utility.yul\":8525:8526   */\n      0x00\n        /* \"#utility.yul\":8514:8523   */\n      dup4\n        /* \"#utility.yul\":8510:8527   */\n      add\n        /* \"#utility.yul\":8501:8507   */\n      dup5\n        /* \"#utility.yul\":8457:8528   */\n      tag_313\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":8313:8535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8541:8659   */\n    tag_314:\n        /* \"#utility.yul\":8612:8634   */\n      tag_454\n        /* \"#utility.yul\":8628:8633   */\n      dup2\n        /* \"#utility.yul\":8612:8634   */\n      tag_302\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":8605:8610   */\n      dup2\n        /* \"#utility.yul\":8602:8635   */\n      eq\n        /* \"#utility.yul\":8592:8653   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":8649:8650   */\n      0x00\n        /* \"#utility.yul\":8646:8647   */\n      dup1\n        /* \"#utility.yul\":8639:8651   */\n      revert\n        /* \"#utility.yul\":8592:8653   */\n    tag_455:\n        /* \"#utility.yul\":8541:8659   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8665:8800   */\n    tag_315:\n        /* \"#utility.yul\":8709:8714   */\n      0x00\n        /* \"#utility.yul\":8747:8753   */\n      dup2\n        /* \"#utility.yul\":8734:8754   */\n      calldataload\n        /* \"#utility.yul\":8725:8754   */\n      swap1\n      pop\n        /* \"#utility.yul\":8763:8794   */\n      tag_457\n        /* \"#utility.yul\":8788:8793   */\n      dup2\n        /* \"#utility.yul\":8763:8794   */\n      tag_314\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":8665:8800   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8806:9131   */\n    tag_99:\n        /* \"#utility.yul\":8863:8869   */\n      0x00\n        /* \"#utility.yul\":8912:8914   */\n      0x20\n        /* \"#utility.yul\":8900:8909   */\n      dup3\n        /* \"#utility.yul\":8891:8898   */\n      dup5\n        /* \"#utility.yul\":8887:8910   */\n      sub\n        /* \"#utility.yul\":8883:8915   */\n      slt\n        /* \"#utility.yul\":8880:8999   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":8918:8997   */\n      tag_460\n      tag_290\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":8880:8999   */\n    tag_459:\n        /* \"#utility.yul\":9038:9039   */\n      0x00\n        /* \"#utility.yul\":9063:9114   */\n      tag_461\n        /* \"#utility.yul\":9106:9113   */\n      dup5\n        /* \"#utility.yul\":9097:9103   */\n      dup3\n        /* \"#utility.yul\":9086:9095   */\n      dup6\n        /* \"#utility.yul\":9082:9104   */\n      add\n        /* \"#utility.yul\":9063:9114   */\n      tag_315\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":9053:9114   */\n      swap2\n      pop\n        /* \"#utility.yul\":9009:9124   */\n      pop\n        /* \"#utility.yul\":8806:9131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9137:9611   */\n    tag_103:\n        /* \"#utility.yul\":9205:9211   */\n      0x00\n        /* \"#utility.yul\":9213:9219   */\n      dup1\n        /* \"#utility.yul\":9262:9264   */\n      0x40\n        /* \"#utility.yul\":9250:9259   */\n      dup4\n        /* \"#utility.yul\":9241:9248   */\n      dup6\n        /* \"#utility.yul\":9237:9260   */\n      sub\n        /* \"#utility.yul\":9233:9265   */\n      slt\n        /* \"#utility.yul\":9230:9349   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":9268:9347   */\n      tag_464\n      tag_290\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":9230:9349   */\n    tag_463:\n        /* \"#utility.yul\":9388:9389   */\n      0x00\n        /* \"#utility.yul\":9413:9466   */\n      tag_465\n        /* \"#utility.yul\":9458:9465   */\n      dup6\n        /* \"#utility.yul\":9449:9455   */\n      dup3\n        /* \"#utility.yul\":9438:9447   */\n      dup7\n        /* \"#utility.yul\":9434:9456   */\n      add\n        /* \"#utility.yul\":9413:9466   */\n      tag_295\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":9403:9466   */\n      swap3\n      pop\n        /* \"#utility.yul\":9359:9476   */\n      pop\n        /* \"#utility.yul\":9515:9517   */\n      0x20\n        /* \"#utility.yul\":9541:9594   */\n      tag_466\n        /* \"#utility.yul\":9586:9593   */\n      dup6\n        /* \"#utility.yul\":9577:9583   */\n      dup3\n        /* \"#utility.yul\":9566:9575   */\n      dup7\n        /* \"#utility.yul\":9562:9584   */\n      add\n        /* \"#utility.yul\":9541:9594   */\n      tag_295\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":9531:9594   */\n      swap2\n      pop\n        /* \"#utility.yul\":9486:9604   */\n      pop\n        /* \"#utility.yul\":9137:9611   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9617:9733   */\n    tag_316:\n        /* \"#utility.yul\":9687:9708   */\n      tag_468\n        /* \"#utility.yul\":9702:9707   */\n      dup2\n        /* \"#utility.yul\":9687:9708   */\n      tag_299\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":9680:9685   */\n      dup2\n        /* \"#utility.yul\":9677:9709   */\n      eq\n        /* \"#utility.yul\":9667:9727   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":9723:9724   */\n      0x00\n        /* \"#utility.yul\":9720:9721   */\n      dup1\n        /* \"#utility.yul\":9713:9725   */\n      revert\n        /* \"#utility.yul\":9667:9727   */\n    tag_469:\n        /* \"#utility.yul\":9617:9733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9739:9872   */\n    tag_317:\n        /* \"#utility.yul\":9782:9787   */\n      0x00\n        /* \"#utility.yul\":9820:9826   */\n      dup2\n        /* \"#utility.yul\":9807:9827   */\n      calldataload\n        /* \"#utility.yul\":9798:9827   */\n      swap1\n      pop\n        /* \"#utility.yul\":9836:9866   */\n      tag_471\n        /* \"#utility.yul\":9860:9865   */\n      dup2\n        /* \"#utility.yul\":9836:9866   */\n      tag_316\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":9739:9872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9878:10346   */\n    tag_108:\n        /* \"#utility.yul\":9943:9949   */\n      0x00\n        /* \"#utility.yul\":9951:9957   */\n      dup1\n        /* \"#utility.yul\":10000:10002   */\n      0x40\n        /* \"#utility.yul\":9988:9997   */\n      dup4\n        /* \"#utility.yul\":9979:9986   */\n      dup6\n        /* \"#utility.yul\":9975:9998   */\n      sub\n        /* \"#utility.yul\":9971:10003   */\n      slt\n        /* \"#utility.yul\":9968:10087   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":10006:10085   */\n      tag_474\n      tag_290\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":9968:10087   */\n    tag_473:\n        /* \"#utility.yul\":10126:10127   */\n      0x00\n        /* \"#utility.yul\":10151:10201   */\n      tag_475\n        /* \"#utility.yul\":10193:10200   */\n      dup6\n        /* \"#utility.yul\":10184:10190   */\n      dup3\n        /* \"#utility.yul\":10173:10182   */\n      dup7\n        /* \"#utility.yul\":10169:10191   */\n      add\n        /* \"#utility.yul\":10151:10201   */\n      tag_317\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":10141:10201   */\n      swap3\n      pop\n        /* \"#utility.yul\":10097:10211   */\n      pop\n        /* \"#utility.yul\":10250:10252   */\n      0x20\n        /* \"#utility.yul\":10276:10329   */\n      tag_476\n        /* \"#utility.yul\":10321:10328   */\n      dup6\n        /* \"#utility.yul\":10312:10318   */\n      dup3\n        /* \"#utility.yul\":10301:10310   */\n      dup7\n        /* \"#utility.yul\":10297:10319   */\n      add\n        /* \"#utility.yul\":10276:10329   */\n      tag_298\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":10266:10329   */\n      swap2\n      pop\n        /* \"#utility.yul\":10221:10339   */\n      pop\n        /* \"#utility.yul\":9878:10346   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10352:10877   */\n    tag_119:\n        /* \"#utility.yul\":10517:10521   */\n      0x00\n        /* \"#utility.yul\":10555:10557   */\n      0x60\n        /* \"#utility.yul\":10544:10553   */\n      dup3\n        /* \"#utility.yul\":10540:10558   */\n      add\n        /* \"#utility.yul\":10532:10558   */\n      swap1\n      pop\n        /* \"#utility.yul\":10604:10613   */\n      dup2\n        /* \"#utility.yul\":10598:10602   */\n      dup2\n        /* \"#utility.yul\":10594:10614   */\n      sub\n        /* \"#utility.yul\":10590:10591   */\n      0x00\n        /* \"#utility.yul\":10579:10588   */\n      dup4\n        /* \"#utility.yul\":10575:10592   */\n      add\n        /* \"#utility.yul\":10568:10615   */\n      mstore\n        /* \"#utility.yul\":10632:10710   */\n      tag_478\n        /* \"#utility.yul\":10705:10709   */\n      dup2\n        /* \"#utility.yul\":10696:10702   */\n      dup7\n        /* \"#utility.yul\":10632:10710   */\n      tag_288\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":10624:10710   */\n      swap1\n      pop\n        /* \"#utility.yul\":10720:10788   */\n      tag_479\n        /* \"#utility.yul\":10784:10786   */\n      0x20\n        /* \"#utility.yul\":10773:10782   */\n      dup4\n        /* \"#utility.yul\":10769:10787   */\n      add\n        /* \"#utility.yul\":10760:10766   */\n      dup6\n        /* \"#utility.yul\":10720:10788   */\n      tag_303\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":10798:10870   */\n      tag_480\n        /* \"#utility.yul\":10866:10868   */\n      0x40\n        /* \"#utility.yul\":10855:10864   */\n      dup4\n        /* \"#utility.yul\":10851:10869   */\n      add\n        /* \"#utility.yul\":10842:10848   */\n      dup5\n        /* \"#utility.yul\":10798:10870   */\n      tag_301\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":10352:10877   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10883:11063   */\n    tag_318:\n        /* \"#utility.yul\":10931:11008   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10928:10929   */\n      0x00\n        /* \"#utility.yul\":10921:11009   */\n      mstore\n        /* \"#utility.yul\":11028:11032   */\n      0x22\n        /* \"#utility.yul\":11025:11026   */\n      0x04\n        /* \"#utility.yul\":11018:11033   */\n      mstore\n        /* \"#utility.yul\":11052:11056   */\n      0x24\n        /* \"#utility.yul\":11049:11050   */\n      0x00\n        /* \"#utility.yul\":11042:11057   */\n      revert\n        /* \"#utility.yul\":11069:11389   */\n    tag_122:\n        /* \"#utility.yul\":11113:11119   */\n      0x00\n        /* \"#utility.yul\":11150:11151   */\n      0x02\n        /* \"#utility.yul\":11144:11148   */\n      dup3\n        /* \"#utility.yul\":11140:11152   */\n      div\n        /* \"#utility.yul\":11130:11152   */\n      swap1\n      pop\n        /* \"#utility.yul\":11197:11198   */\n      0x01\n        /* \"#utility.yul\":11191:11195   */\n      dup3\n        /* \"#utility.yul\":11187:11199   */\n      and\n        /* \"#utility.yul\":11218:11236   */\n      dup1\n        /* \"#utility.yul\":11208:11289   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":11274:11278   */\n      0x7f\n        /* \"#utility.yul\":11266:11272   */\n      dup3\n        /* \"#utility.yul\":11262:11279   */\n      and\n        /* \"#utility.yul\":11252:11279   */\n      swap2\n      pop\n        /* \"#utility.yul\":11208:11289   */\n    tag_483:\n        /* \"#utility.yul\":11336:11338   */\n      0x20\n        /* \"#utility.yul\":11328:11334   */\n      dup3\n        /* \"#utility.yul\":11325:11339   */\n      lt\n        /* \"#utility.yul\":11305:11323   */\n      dup2\n        /* \"#utility.yul\":11302:11340   */\n      sub\n        /* \"#utility.yul\":11299:11383   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":11355:11373   */\n      tag_485\n      tag_318\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":11299:11383   */\n    tag_484:\n        /* \"#utility.yul\":11120:11389   */\n      pop\n        /* \"#utility.yul\":11069:11389   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11395:11565   */\n    tag_319:\n        /* \"#utility.yul\":11535:11557   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":11531:11532   */\n      0x00\n        /* \"#utility.yul\":11523:11529   */\n      dup3\n        /* \"#utility.yul\":11519:11533   */\n      add\n        /* \"#utility.yul\":11512:11558   */\n      mstore\n        /* \"#utility.yul\":11395:11565   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11571:11937   */\n    tag_320:\n        /* \"#utility.yul\":11713:11716   */\n      0x00\n        /* \"#utility.yul\":11734:11801   */\n      tag_488\n        /* \"#utility.yul\":11798:11800   */\n      0x14\n        /* \"#utility.yul\":11793:11796   */\n      dup4\n        /* \"#utility.yul\":11734:11801   */\n      tag_285\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":11727:11801   */\n      swap2\n      pop\n        /* \"#utility.yul\":11810:11903   */\n      tag_489\n        /* \"#utility.yul\":11899:11902   */\n      dup3\n        /* \"#utility.yul\":11810:11903   */\n      tag_319\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":11928:11930   */\n      0x20\n        /* \"#utility.yul\":11923:11926   */\n      dup3\n        /* \"#utility.yul\":11919:11931   */\n      add\n        /* \"#utility.yul\":11912:11931   */\n      swap1\n      pop\n        /* \"#utility.yul\":11571:11937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11943:12362   */\n    tag_136:\n        /* \"#utility.yul\":12109:12113   */\n      0x00\n        /* \"#utility.yul\":12147:12149   */\n      0x20\n        /* \"#utility.yul\":12136:12145   */\n      dup3\n        /* \"#utility.yul\":12132:12150   */\n      add\n        /* \"#utility.yul\":12124:12150   */\n      swap1\n      pop\n        /* \"#utility.yul\":12196:12205   */\n      dup2\n        /* \"#utility.yul\":12190:12194   */\n      dup2\n        /* \"#utility.yul\":12186:12206   */\n      sub\n        /* \"#utility.yul\":12182:12183   */\n      0x00\n        /* \"#utility.yul\":12171:12180   */\n      dup4\n        /* \"#utility.yul\":12167:12184   */\n      add\n        /* \"#utility.yul\":12160:12207   */\n      mstore\n        /* \"#utility.yul\":12224:12355   */\n      tag_491\n        /* \"#utility.yul\":12350:12354   */\n      dup2\n        /* \"#utility.yul\":12224:12355   */\n      tag_320\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":12216:12355   */\n      swap1\n      pop\n        /* \"#utility.yul\":11943:12362   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12368:12509   */\n    tag_321:\n        /* \"#utility.yul\":12417:12421   */\n      0x00\n        /* \"#utility.yul\":12440:12443   */\n      dup2\n        /* \"#utility.yul\":12432:12443   */\n      swap1\n      pop\n        /* \"#utility.yul\":12463:12466   */\n      dup2\n        /* \"#utility.yul\":12460:12461   */\n      0x00\n        /* \"#utility.yul\":12453:12467   */\n      mstore\n        /* \"#utility.yul\":12497:12501   */\n      0x20\n        /* \"#utility.yul\":12494:12495   */\n      0x00\n        /* \"#utility.yul\":12484:12502   */\n      keccak256\n        /* \"#utility.yul\":12476:12502   */\n      swap1\n      pop\n        /* \"#utility.yul\":12368:12509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12515:12608   */\n    tag_322:\n        /* \"#utility.yul\":12552:12558   */\n      0x00\n        /* \"#utility.yul\":12599:12601   */\n      0x20\n        /* \"#utility.yul\":12594:12596   */\n      0x1f\n        /* \"#utility.yul\":12587:12592   */\n      dup4\n        /* \"#utility.yul\":12583:12597   */\n      add\n        /* \"#utility.yul\":12579:12602   */\n      div\n        /* \"#utility.yul\":12569:12602   */\n      swap1\n      pop\n        /* \"#utility.yul\":12515:12608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12614:12721   */\n    tag_323:\n        /* \"#utility.yul\":12658:12666   */\n      0x00\n        /* \"#utility.yul\":12708:12713   */\n      dup3\n        /* \"#utility.yul\":12702:12706   */\n      dup3\n        /* \"#utility.yul\":12698:12714   */\n      shl\n        /* \"#utility.yul\":12677:12714   */\n      swap1\n      pop\n        /* \"#utility.yul\":12614:12721   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12727:13120   */\n    tag_324:\n        /* \"#utility.yul\":12796:12802   */\n      0x00\n        /* \"#utility.yul\":12846:12847   */\n      0x08\n        /* \"#utility.yul\":12834:12844   */\n      dup4\n        /* \"#utility.yul\":12830:12848   */\n      mul\n        /* \"#utility.yul\":12869:12966   */\n      tag_496\n        /* \"#utility.yul\":12899:12965   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12888:12897   */\n      dup3\n        /* \"#utility.yul\":12869:12966   */\n      tag_323\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":12987:13026   */\n      tag_497\n        /* \"#utility.yul\":13017:13025   */\n      dup7\n        /* \"#utility.yul\":13006:13015   */\n      dup4\n        /* \"#utility.yul\":12987:13026   */\n      tag_323\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":12975:13026   */\n      swap6\n      pop\n        /* \"#utility.yul\":13059:13063   */\n      dup1\n        /* \"#utility.yul\":13055:13064   */\n      not\n        /* \"#utility.yul\":13048:13053   */\n      dup5\n        /* \"#utility.yul\":13044:13065   */\n      and\n        /* \"#utility.yul\":13035:13065   */\n      swap4\n      pop\n        /* \"#utility.yul\":13108:13112   */\n      dup1\n        /* \"#utility.yul\":13098:13106   */\n      dup7\n        /* \"#utility.yul\":13094:13113   */\n      and\n        /* \"#utility.yul\":13087:13092   */\n      dup5\n        /* \"#utility.yul\":13084:13114   */\n      or\n        /* \"#utility.yul\":13074:13114   */\n      swap3\n      pop\n        /* \"#utility.yul\":12803:13120   */\n      pop\n      pop\n        /* \"#utility.yul\":12727:13120   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13126:13186   */\n    tag_325:\n        /* \"#utility.yul\":13154:13157   */\n      0x00\n        /* \"#utility.yul\":13175:13180   */\n      dup2\n        /* \"#utility.yul\":13168:13180   */\n      swap1\n      pop\n        /* \"#utility.yul\":13126:13186   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13192:13334   */\n    tag_326:\n        /* \"#utility.yul\":13242:13251   */\n      0x00\n        /* \"#utility.yul\":13275:13328   */\n      tag_500\n        /* \"#utility.yul\":13293:13327   */\n      tag_501\n        /* \"#utility.yul\":13302:13326   */\n      tag_502\n        /* \"#utility.yul\":13320:13325   */\n      dup5\n        /* \"#utility.yul\":13302:13326   */\n      tag_296\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":13293:13327   */\n      tag_325\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":13275:13328   */\n      tag_296\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":13262:13328   */\n      swap1\n      pop\n        /* \"#utility.yul\":13192:13334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13340:13415   */\n    tag_327:\n        /* \"#utility.yul\":13383:13386   */\n      0x00\n        /* \"#utility.yul\":13404:13409   */\n      dup2\n        /* \"#utility.yul\":13397:13409   */\n      swap1\n      pop\n        /* \"#utility.yul\":13340:13415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13421:13690   */\n    tag_328:\n        /* \"#utility.yul\":13531:13570   */\n      tag_505\n        /* \"#utility.yul\":13562:13569   */\n      dup4\n        /* \"#utility.yul\":13531:13570   */\n      tag_326\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":13592:13683   */\n      tag_506\n        /* \"#utility.yul\":13641:13682   */\n      tag_507\n        /* \"#utility.yul\":13665:13681   */\n      dup3\n        /* \"#utility.yul\":13641:13682   */\n      tag_327\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":13633:13639   */\n      dup5\n        /* \"#utility.yul\":13626:13630   */\n      dup5\n        /* \"#utility.yul\":13620:13631   */\n      sload\n        /* \"#utility.yul\":13592:13683   */\n      tag_324\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":13586:13590   */\n      dup3\n        /* \"#utility.yul\":13579:13684   */\n      sstore\n        /* \"#utility.yul\":13497:13690   */\n      pop\n        /* \"#utility.yul\":13421:13690   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13696:13769   */\n    tag_329:\n        /* \"#utility.yul\":13741:13744   */\n      0x00\n        /* \"#utility.yul\":13696:13769   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":13775:13964   */\n    tag_330:\n        /* \"#utility.yul\":13852:13884   */\n      tag_510\n      tag_329\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":13893:13958   */\n      tag_511\n        /* \"#utility.yul\":13951:13957   */\n      dup2\n        /* \"#utility.yul\":13943:13949   */\n      dup5\n        /* \"#utility.yul\":13937:13941   */\n      dup5\n        /* \"#utility.yul\":13893:13958   */\n      tag_328\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":13828:13964   */\n      pop\n        /* \"#utility.yul\":13775:13964   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13970:14156   */\n    tag_331:\n        /* \"#utility.yul\":14030:14150   */\n    tag_513:\n        /* \"#utility.yul\":14047:14050   */\n      dup2\n        /* \"#utility.yul\":14040:14045   */\n      dup2\n        /* \"#utility.yul\":14037:14051   */\n      lt\n        /* \"#utility.yul\":14030:14150   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":14101:14140   */\n      tag_516\n        /* \"#utility.yul\":14138:14139   */\n      0x00\n        /* \"#utility.yul\":14131:14136   */\n      dup3\n        /* \"#utility.yul\":14101:14140   */\n      tag_330\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":14074:14075   */\n      0x01\n        /* \"#utility.yul\":14067:14072   */\n      dup2\n        /* \"#utility.yul\":14063:14076   */\n      add\n        /* \"#utility.yul\":14054:14076   */\n      swap1\n      pop\n        /* \"#utility.yul\":14030:14150   */\n      jump(tag_513)\n    tag_515:\n        /* \"#utility.yul\":13970:14156   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14162:14705   */\n    tag_332:\n        /* \"#utility.yul\":14263:14265   */\n      0x1f\n        /* \"#utility.yul\":14258:14261   */\n      dup3\n        /* \"#utility.yul\":14255:14266   */\n      gt\n        /* \"#utility.yul\":14252:14698   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":14297:14335   */\n      tag_519\n        /* \"#utility.yul\":14329:14334   */\n      dup2\n        /* \"#utility.yul\":14297:14335   */\n      tag_321\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":14381:14410   */\n      tag_520\n        /* \"#utility.yul\":14399:14409   */\n      dup5\n        /* \"#utility.yul\":14381:14410   */\n      tag_322\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":14371:14379   */\n      dup2\n        /* \"#utility.yul\":14367:14411   */\n      add\n        /* \"#utility.yul\":14564:14566   */\n      0x20\n        /* \"#utility.yul\":14552:14562   */\n      dup6\n        /* \"#utility.yul\":14549:14567   */\n      lt\n        /* \"#utility.yul\":14546:14595   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":14585:14593   */\n      dup2\n        /* \"#utility.yul\":14570:14593   */\n      swap1\n      pop\n        /* \"#utility.yul\":14546:14595   */\n    tag_521:\n        /* \"#utility.yul\":14608:14688   */\n      tag_522\n        /* \"#utility.yul\":14664:14686   */\n      tag_523\n        /* \"#utility.yul\":14682:14685   */\n      dup6\n        /* \"#utility.yul\":14664:14686   */\n      tag_322\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":14654:14662   */\n      dup4\n        /* \"#utility.yul\":14650:14687   */\n      add\n        /* \"#utility.yul\":14637:14648   */\n      dup3\n        /* \"#utility.yul\":14608:14688   */\n      tag_331\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":14267:14698   */\n      pop\n      pop\n        /* \"#utility.yul\":14252:14698   */\n    tag_518:\n        /* \"#utility.yul\":14162:14705   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14711:14828   */\n    tag_333:\n        /* \"#utility.yul\":14765:14773   */\n      0x00\n        /* \"#utility.yul\":14815:14820   */\n      dup3\n        /* \"#utility.yul\":14809:14813   */\n      dup3\n        /* \"#utility.yul\":14805:14821   */\n      shr\n        /* \"#utility.yul\":14784:14821   */\n      swap1\n      pop\n        /* \"#utility.yul\":14711:14828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14834:15003   */\n    tag_334:\n        /* \"#utility.yul\":14878:14884   */\n      0x00\n        /* \"#utility.yul\":14911:14962   */\n      tag_526\n        /* \"#utility.yul\":14959:14960   */\n      0x00\n        /* \"#utility.yul\":14955:14961   */\n      not\n        /* \"#utility.yul\":14947:14952   */\n      dup5\n        /* \"#utility.yul\":14944:14945   */\n      0x08\n        /* \"#utility.yul\":14940:14953   */\n      mul\n        /* \"#utility.yul\":14911:14962   */\n      tag_333\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":14907:14963   */\n      not\n        /* \"#utility.yul\":14992:14996   */\n      dup1\n        /* \"#utility.yul\":14986:14990   */\n      dup4\n        /* \"#utility.yul\":14982:14997   */\n      and\n        /* \"#utility.yul\":14972:14997   */\n      swap2\n      pop\n        /* \"#utility.yul\":14885:15003   */\n      pop\n        /* \"#utility.yul\":14834:15003   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15008:15303   */\n    tag_335:\n        /* \"#utility.yul\":15084:15088   */\n      0x00\n        /* \"#utility.yul\":15230:15259   */\n      tag_528\n        /* \"#utility.yul\":15255:15258   */\n      dup4\n        /* \"#utility.yul\":15249:15253   */\n      dup4\n        /* \"#utility.yul\":15230:15259   */\n      tag_334\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":15222:15259   */\n      swap2\n      pop\n        /* \"#utility.yul\":15292:15295   */\n      dup3\n        /* \"#utility.yul\":15289:15290   */\n      0x02\n        /* \"#utility.yul\":15285:15296   */\n      mul\n        /* \"#utility.yul\":15279:15283   */\n      dup3\n        /* \"#utility.yul\":15276:15297   */\n      or\n        /* \"#utility.yul\":15268:15297   */\n      swap1\n      pop\n        /* \"#utility.yul\":15008:15303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15308:16703   */\n    tag_162:\n        /* \"#utility.yul\":15425:15462   */\n      tag_530\n        /* \"#utility.yul\":15458:15461   */\n      dup3\n        /* \"#utility.yul\":15425:15462   */\n      tag_284\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":15527:15545   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15519:15525   */\n      dup2\n        /* \"#utility.yul\":15516:15546   */\n      gt\n        /* \"#utility.yul\":15513:15569   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":15549:15567   */\n      tag_532\n      tag_306\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":15513:15569   */\n    tag_531:\n        /* \"#utility.yul\":15593:15631   */\n      tag_533\n        /* \"#utility.yul\":15625:15629   */\n      dup3\n        /* \"#utility.yul\":15619:15630   */\n      sload\n        /* \"#utility.yul\":15593:15631   */\n      tag_122\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":15678:15745   */\n      tag_534\n        /* \"#utility.yul\":15738:15744   */\n      dup3\n        /* \"#utility.yul\":15730:15736   */\n      dup3\n        /* \"#utility.yul\":15724:15728   */\n      dup6\n        /* \"#utility.yul\":15678:15745   */\n      tag_332\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":15772:15773   */\n      0x00\n        /* \"#utility.yul\":15796:15800   */\n      0x20\n        /* \"#utility.yul\":15783:15800   */\n      swap1\n      pop\n        /* \"#utility.yul\":15828:15830   */\n      0x1f\n        /* \"#utility.yul\":15820:15826   */\n      dup4\n        /* \"#utility.yul\":15817:15831   */\n      gt\n        /* \"#utility.yul\":15845:15846   */\n      0x01\n        /* \"#utility.yul\":15840:16458   */\n      dup2\n      eq\n      tag_536\n      jumpi\n        /* \"#utility.yul\":16502:16503   */\n      0x00\n        /* \"#utility.yul\":16519:16525   */\n      dup5\n        /* \"#utility.yul\":16516:16593   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":16568:16577   */\n      dup3\n        /* \"#utility.yul\":16563:16566   */\n      dup8\n        /* \"#utility.yul\":16559:16578   */\n      add\n        /* \"#utility.yul\":16553:16579   */\n      mload\n        /* \"#utility.yul\":16544:16579   */\n      swap1\n      pop\n        /* \"#utility.yul\":16516:16593   */\n    tag_537:\n        /* \"#utility.yul\":16619:16686   */\n      tag_538\n        /* \"#utility.yul\":16679:16685   */\n      dup6\n        /* \"#utility.yul\":16672:16677   */\n      dup3\n        /* \"#utility.yul\":16619:16686   */\n      tag_335\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":16613:16617   */\n      dup7\n        /* \"#utility.yul\":16606:16687   */\n      sstore\n        /* \"#utility.yul\":16475:16697   */\n      pop\n        /* \"#utility.yul\":15810:16697   */\n      jump(tag_535)\n        /* \"#utility.yul\":15840:16458   */\n    tag_536:\n        /* \"#utility.yul\":15892:15896   */\n      0x1f\n        /* \"#utility.yul\":15888:15897   */\n      not\n        /* \"#utility.yul\":15880:15886   */\n      dup5\n        /* \"#utility.yul\":15876:15898   */\n      and\n        /* \"#utility.yul\":15926:15963   */\n      tag_539\n        /* \"#utility.yul\":15958:15962   */\n      dup7\n        /* \"#utility.yul\":15926:15963   */\n      tag_321\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":15985:15986   */\n      0x00\n        /* \"#utility.yul\":15999:16207   */\n    tag_540:\n        /* \"#utility.yul\":16013:16020   */\n      dup3\n        /* \"#utility.yul\":16010:16011   */\n      dup2\n        /* \"#utility.yul\":16007:16021   */\n      lt\n        /* \"#utility.yul\":15999:16207   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":16092:16101   */\n      dup5\n        /* \"#utility.yul\":16087:16090   */\n      dup10\n        /* \"#utility.yul\":16083:16102   */\n      add\n        /* \"#utility.yul\":16077:16103   */\n      mload\n        /* \"#utility.yul\":16069:16075   */\n      dup3\n        /* \"#utility.yul\":16062:16104   */\n      sstore\n        /* \"#utility.yul\":16143:16144   */\n      0x01\n        /* \"#utility.yul\":16135:16141   */\n      dup3\n        /* \"#utility.yul\":16131:16145   */\n      add\n        /* \"#utility.yul\":16121:16145   */\n      swap2\n      pop\n        /* \"#utility.yul\":16190:16192   */\n      0x20\n        /* \"#utility.yul\":16179:16188   */\n      dup6\n        /* \"#utility.yul\":16175:16193   */\n      add\n        /* \"#utility.yul\":16162:16193   */\n      swap5\n      pop\n        /* \"#utility.yul\":16036:16040   */\n      0x20\n        /* \"#utility.yul\":16033:16034   */\n      dup2\n        /* \"#utility.yul\":16029:16041   */\n      add\n        /* \"#utility.yul\":16024:16041   */\n      swap1\n      pop\n        /* \"#utility.yul\":15999:16207   */\n      jump(tag_540)\n    tag_542:\n        /* \"#utility.yul\":16235:16241   */\n      dup7\n        /* \"#utility.yul\":16226:16233   */\n      dup4\n        /* \"#utility.yul\":16223:16242   */\n      lt\n        /* \"#utility.yul\":16220:16399   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":16293:16302   */\n      dup5\n        /* \"#utility.yul\":16288:16291   */\n      dup10\n        /* \"#utility.yul\":16284:16303   */\n      add\n        /* \"#utility.yul\":16278:16304   */\n      mload\n        /* \"#utility.yul\":16336:16384   */\n      tag_544\n        /* \"#utility.yul\":16378:16382   */\n      0x1f\n        /* \"#utility.yul\":16370:16376   */\n      dup10\n        /* \"#utility.yul\":16366:16383   */\n      and\n        /* \"#utility.yul\":16355:16364   */\n      dup3\n        /* \"#utility.yul\":16336:16384   */\n      tag_334\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":16328:16334   */\n      dup4\n        /* \"#utility.yul\":16321:16385   */\n      sstore\n        /* \"#utility.yul\":16243:16399   */\n      pop\n        /* \"#utility.yul\":16220:16399   */\n    tag_543:\n        /* \"#utility.yul\":16445:16446   */\n      0x01\n        /* \"#utility.yul\":16441:16442   */\n      0x02\n        /* \"#utility.yul\":16433:16439   */\n      dup9\n        /* \"#utility.yul\":16429:16443   */\n      mul\n        /* \"#utility.yul\":16425:16447   */\n      add\n        /* \"#utility.yul\":16419:16423   */\n      dup9\n        /* \"#utility.yul\":16412:16448   */\n      sstore\n        /* \"#utility.yul\":15847:16458   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15810:16697   */\n    tag_535:\n      pop\n        /* \"#utility.yul\":15400:16703   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15308:16703   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16709:16889   */\n    tag_336:\n        /* \"#utility.yul\":16757:16834   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16754:16755   */\n      0x00\n        /* \"#utility.yul\":16747:16835   */\n      mstore\n        /* \"#utility.yul\":16854:16858   */\n      0x11\n        /* \"#utility.yul\":16851:16852   */\n      0x04\n        /* \"#utility.yul\":16844:16859   */\n      mstore\n        /* \"#utility.yul\":16878:16882   */\n      0x24\n        /* \"#utility.yul\":16875:16876   */\n      0x00\n        /* \"#utility.yul\":16868:16883   */\n      revert\n        /* \"#utility.yul\":16895:17062   */\n    tag_164:\n        /* \"#utility.yul\":16932:16935   */\n      0x00\n        /* \"#utility.yul\":16955:16977   */\n      tag_547\n        /* \"#utility.yul\":16971:16976   */\n      dup3\n        /* \"#utility.yul\":16955:16977   */\n      tag_302\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":16946:16977   */\n      swap2\n      pop\n        /* \"#utility.yul\":16999:17003   */\n      0xff\n        /* \"#utility.yul\":16992:16997   */\n      dup3\n        /* \"#utility.yul\":16989:17004   */\n      sub\n        /* \"#utility.yul\":16986:17027   */\n      tag_548\n      jumpi\n        /* \"#utility.yul\":17007:17025   */\n      tag_549\n      tag_336\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":16986:17027   */\n    tag_548:\n        /* \"#utility.yul\":17054:17055   */\n      0x01\n        /* \"#utility.yul\":17047:17052   */\n      dup3\n        /* \"#utility.yul\":17043:17056   */\n      add\n        /* \"#utility.yul\":17036:17056   */\n      swap1\n      pop\n        /* \"#utility.yul\":16895:17062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17068:17237   */\n    tag_337:\n        /* \"#utility.yul\":17208:17229   */\n      0x496e73756666696369656e7420616d6f756e7400000000000000000000000000\n        /* \"#utility.yul\":17204:17205   */\n      0x00\n        /* \"#utility.yul\":17196:17202   */\n      dup3\n        /* \"#utility.yul\":17192:17206   */\n      add\n        /* \"#utility.yul\":17185:17230   */\n      mstore\n        /* \"#utility.yul\":17068:17237   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17243:17609   */\n    tag_338:\n        /* \"#utility.yul\":17385:17388   */\n      0x00\n        /* \"#utility.yul\":17406:17473   */\n      tag_552\n        /* \"#utility.yul\":17470:17472   */\n      0x13\n        /* \"#utility.yul\":17465:17468   */\n      dup4\n        /* \"#utility.yul\":17406:17473   */\n      tag_285\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":17399:17473   */\n      swap2\n      pop\n        /* \"#utility.yul\":17482:17575   */\n      tag_553\n        /* \"#utility.yul\":17571:17574   */\n      dup3\n        /* \"#utility.yul\":17482:17575   */\n      tag_337\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":17600:17602   */\n      0x20\n        /* \"#utility.yul\":17595:17598   */\n      dup3\n        /* \"#utility.yul\":17591:17603   */\n      add\n        /* \"#utility.yul\":17584:17603   */\n      swap1\n      pop\n        /* \"#utility.yul\":17243:17609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17615:18034   */\n    tag_179:\n        /* \"#utility.yul\":17781:17785   */\n      0x00\n        /* \"#utility.yul\":17819:17821   */\n      0x20\n        /* \"#utility.yul\":17808:17817   */\n      dup3\n        /* \"#utility.yul\":17804:17822   */\n      add\n        /* \"#utility.yul\":17796:17822   */\n      swap1\n      pop\n        /* \"#utility.yul\":17868:17877   */\n      dup2\n        /* \"#utility.yul\":17862:17866   */\n      dup2\n        /* \"#utility.yul\":17858:17878   */\n      sub\n        /* \"#utility.yul\":17854:17855   */\n      0x00\n        /* \"#utility.yul\":17843:17852   */\n      dup4\n        /* \"#utility.yul\":17839:17856   */\n      add\n        /* \"#utility.yul\":17832:17879   */\n      mstore\n        /* \"#utility.yul\":17896:18027   */\n      tag_555\n        /* \"#utility.yul\":18022:18026   */\n      dup2\n        /* \"#utility.yul\":17896:18027   */\n      tag_338\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":17888:18027   */\n      swap1\n      pop\n        /* \"#utility.yul\":17615:18034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18040:18204   */\n    tag_339:\n        /* \"#utility.yul\":18180:18196   */\n      0x4974656d206e6f7420666f756e64000000000000000000000000000000000000\n        /* \"#utility.yul\":18176:18177   */\n      0x00\n        /* \"#utility.yul\":18168:18174   */\n      dup3\n        /* \"#utility.yul\":18164:18178   */\n      add\n        /* \"#utility.yul\":18157:18197   */\n      mstore\n        /* \"#utility.yul\":18040:18204   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18210:18576   */\n    tag_340:\n        /* \"#utility.yul\":18352:18355   */\n      0x00\n        /* \"#utility.yul\":18373:18440   */\n      tag_558\n        /* \"#utility.yul\":18437:18439   */\n      0x0e\n        /* \"#utility.yul\":18432:18435   */\n      dup4\n        /* \"#utility.yul\":18373:18440   */\n      tag_285\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":18366:18440   */\n      swap2\n      pop\n        /* \"#utility.yul\":18449:18542   */\n      tag_559\n        /* \"#utility.yul\":18538:18541   */\n      dup3\n        /* \"#utility.yul\":18449:18542   */\n      tag_339\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":18567:18569   */\n      0x20\n        /* \"#utility.yul\":18562:18565   */\n      dup3\n        /* \"#utility.yul\":18558:18570   */\n      add\n        /* \"#utility.yul\":18551:18570   */\n      swap1\n      pop\n        /* \"#utility.yul\":18210:18576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18582:19001   */\n    tag_194:\n        /* \"#utility.yul\":18748:18752   */\n      0x00\n        /* \"#utility.yul\":18786:18788   */\n      0x20\n        /* \"#utility.yul\":18775:18784   */\n      dup3\n        /* \"#utility.yul\":18771:18789   */\n      add\n        /* \"#utility.yul\":18763:18789   */\n      swap1\n      pop\n        /* \"#utility.yul\":18835:18844   */\n      dup2\n        /* \"#utility.yul\":18829:18833   */\n      dup2\n        /* \"#utility.yul\":18825:18845   */\n      sub\n        /* \"#utility.yul\":18821:18822   */\n      0x00\n        /* \"#utility.yul\":18810:18819   */\n      dup4\n        /* \"#utility.yul\":18806:18823   */\n      add\n        /* \"#utility.yul\":18799:18846   */\n      mstore\n        /* \"#utility.yul\":18863:18994   */\n      tag_561\n        /* \"#utility.yul\":18989:18993   */\n      dup2\n        /* \"#utility.yul\":18863:18994   */\n      tag_340\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":18855:18994   */\n      swap1\n      pop\n        /* \"#utility.yul\":18582:19001   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19031:19862   */\n    tag_341:\n        /* \"#utility.yul\":19116:19119   */\n      0x00\n        /* \"#utility.yul\":19153:19158   */\n      dup2\n        /* \"#utility.yul\":19147:19159   */\n      sload\n        /* \"#utility.yul\":19182:19218   */\n      tag_563\n        /* \"#utility.yul\":19208:19217   */\n      dup2\n        /* \"#utility.yul\":19182:19218   */\n      tag_122\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":19234:19305   */\n      tag_564\n        /* \"#utility.yul\":19298:19304   */\n      dup2\n        /* \"#utility.yul\":19293:19296   */\n      dup7\n        /* \"#utility.yul\":19234:19305   */\n      tag_285\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":19227:19305   */\n      swap5\n      pop\n        /* \"#utility.yul\":19336:19337   */\n      0x01\n        /* \"#utility.yul\":19325:19334   */\n      dup3\n        /* \"#utility.yul\":19321:19338   */\n      and\n        /* \"#utility.yul\":19352:19353   */\n      0x00\n        /* \"#utility.yul\":19347:19511   */\n      dup2\n      eq\n      tag_566\n      jumpi\n        /* \"#utility.yul\":19525:19526   */\n      0x01\n        /* \"#utility.yul\":19520:19856   */\n      dup2\n      eq\n      tag_567\n      jumpi\n        /* \"#utility.yul\":19314:19856   */\n      jump(tag_565)\n        /* \"#utility.yul\":19347:19511   */\n    tag_566:\n        /* \"#utility.yul\":19431:19435   */\n      0xff\n        /* \"#utility.yul\":19427:19436   */\n      not\n        /* \"#utility.yul\":19416:19425   */\n      dup4\n        /* \"#utility.yul\":19412:19437   */\n      and\n        /* \"#utility.yul\":19407:19410   */\n      dup7\n        /* \"#utility.yul\":19400:19438   */\n      mstore\n        /* \"#utility.yul\":19491:19497   */\n      dup2\n        /* \"#utility.yul\":19484:19498   */\n      iszero\n        /* \"#utility.yul\":19477:19499   */\n      iszero\n        /* \"#utility.yul\":19471:19475   */\n      0x20\n        /* \"#utility.yul\":19467:19500   */\n      mul\n        /* \"#utility.yul\":19462:19465   */\n      dup7\n        /* \"#utility.yul\":19458:19501   */\n      add\n        /* \"#utility.yul\":19451:19501   */\n      swap4\n      pop\n        /* \"#utility.yul\":19347:19511   */\n      jump(tag_565)\n        /* \"#utility.yul\":19520:19856   */\n    tag_567:\n        /* \"#utility.yul\":19587:19625   */\n      tag_568\n        /* \"#utility.yul\":19619:19624   */\n      dup6\n        /* \"#utility.yul\":19587:19625   */\n      tag_321\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":19647:19648   */\n      0x00\n        /* \"#utility.yul\":19661:19815   */\n    tag_569:\n        /* \"#utility.yul\":19675:19681   */\n      dup4\n        /* \"#utility.yul\":19672:19673   */\n      dup2\n        /* \"#utility.yul\":19669:19682   */\n      lt\n        /* \"#utility.yul\":19661:19815   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":19749:19756   */\n      dup2\n        /* \"#utility.yul\":19743:19757   */\n      sload\n        /* \"#utility.yul\":19739:19740   */\n      dup2\n        /* \"#utility.yul\":19734:19737   */\n      dup10\n        /* \"#utility.yul\":19730:19741   */\n      add\n        /* \"#utility.yul\":19723:19758   */\n      mstore\n        /* \"#utility.yul\":19799:19800   */\n      0x01\n        /* \"#utility.yul\":19790:19797   */\n      dup3\n        /* \"#utility.yul\":19786:19801   */\n      add\n        /* \"#utility.yul\":19775:19801   */\n      swap2\n      pop\n        /* \"#utility.yul\":19697:19701   */\n      0x20\n        /* \"#utility.yul\":19694:19695   */\n      dup2\n        /* \"#utility.yul\":19690:19702   */\n      add\n        /* \"#utility.yul\":19685:19702   */\n      swap1\n      pop\n        /* \"#utility.yul\":19661:19815   */\n      jump(tag_569)\n    tag_571:\n        /* \"#utility.yul\":19844:19845   */\n      dup1\n        /* \"#utility.yul\":19839:19842   */\n      dup9\n        /* \"#utility.yul\":19835:19846   */\n      add\n        /* \"#utility.yul\":19828:19846   */\n      swap6\n      pop\n        /* \"#utility.yul\":19527:19856   */\n      pop\n      pop\n        /* \"#utility.yul\":19314:19856   */\n    tag_565:\n      pop\n        /* \"#utility.yul\":19120:19862   */\n      pop\n      pop\n        /* \"#utility.yul\":19031:19862   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19868:20387   */\n    tag_200:\n        /* \"#utility.yul\":20030:20034   */\n      0x00\n        /* \"#utility.yul\":20068:20070   */\n      0x60\n        /* \"#utility.yul\":20057:20066   */\n      dup3\n        /* \"#utility.yul\":20053:20071   */\n      add\n        /* \"#utility.yul\":20045:20071   */\n      swap1\n      pop\n        /* \"#utility.yul\":20081:20148   */\n      tag_573\n        /* \"#utility.yul\":20145:20146   */\n      0x00\n        /* \"#utility.yul\":20134:20143   */\n      dup4\n        /* \"#utility.yul\":20130:20147   */\n      add\n        /* \"#utility.yul\":20121:20127   */\n      dup7\n        /* \"#utility.yul\":20081:20148   */\n      tag_303\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":20195:20204   */\n      dup2\n        /* \"#utility.yul\":20189:20193   */\n      dup2\n        /* \"#utility.yul\":20185:20205   */\n      sub\n        /* \"#utility.yul\":20180:20182   */\n      0x20\n        /* \"#utility.yul\":20169:20178   */\n      dup4\n        /* \"#utility.yul\":20165:20183   */\n      add\n        /* \"#utility.yul\":20158:20206   */\n      mstore\n        /* \"#utility.yul\":20223:20298   */\n      tag_574\n        /* \"#utility.yul\":20293:20297   */\n      dup2\n        /* \"#utility.yul\":20284:20290   */\n      dup6\n        /* \"#utility.yul\":20223:20298   */\n      tag_341\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":20215:20298   */\n      swap1\n      pop\n        /* \"#utility.yul\":20308:20380   */\n      tag_575\n        /* \"#utility.yul\":20376:20378   */\n      0x40\n        /* \"#utility.yul\":20365:20374   */\n      dup4\n        /* \"#utility.yul\":20361:20379   */\n      add\n        /* \"#utility.yul\":20352:20358   */\n      dup5\n        /* \"#utility.yul\":20308:20380   */\n      tag_301\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":19868:20387   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20393:20472   */\n    tag_342:\n        /* \"#utility.yul\":20432:20439   */\n      0x00\n        /* \"#utility.yul\":20461:20466   */\n      dup2\n        /* \"#utility.yul\":20450:20466   */\n      swap1\n      pop\n        /* \"#utility.yul\":20393:20472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20478:20635   */\n    tag_343:\n        /* \"#utility.yul\":20583:20628   */\n      tag_578\n        /* \"#utility.yul\":20603:20627   */\n      tag_579\n        /* \"#utility.yul\":20621:20626   */\n      dup3\n        /* \"#utility.yul\":20603:20627   */\n      tag_296\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":20583:20628   */\n      tag_342\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":20578:20581   */\n      dup3\n        /* \"#utility.yul\":20571:20629   */\n      mstore\n        /* \"#utility.yul\":20478:20635   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20641:20735   */\n    tag_344:\n        /* \"#utility.yul\":20674:20682   */\n      0x00\n        /* \"#utility.yul\":20722:20727   */\n      dup2\n        /* \"#utility.yul\":20718:20720   */\n      0x60\n        /* \"#utility.yul\":20714:20728   */\n      shl\n        /* \"#utility.yul\":20693:20728   */\n      swap1\n      pop\n        /* \"#utility.yul\":20641:20735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20741:20835   */\n    tag_345:\n        /* \"#utility.yul\":20780:20787   */\n      0x00\n        /* \"#utility.yul\":20809:20829   */\n      tag_582\n        /* \"#utility.yul\":20823:20828   */\n      dup3\n        /* \"#utility.yul\":20809:20829   */\n      tag_344\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":20798:20829   */\n      swap1\n      pop\n        /* \"#utility.yul\":20741:20835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20841:20941   */\n    tag_346:\n        /* \"#utility.yul\":20880:20887   */\n      0x00\n        /* \"#utility.yul\":20909:20935   */\n      tag_584\n        /* \"#utility.yul\":20929:20934   */\n      dup3\n        /* \"#utility.yul\":20909:20935   */\n      tag_345\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":20898:20935   */\n      swap1\n      pop\n        /* \"#utility.yul\":20841:20941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20947:21104   */\n    tag_347:\n        /* \"#utility.yul\":21052:21097   */\n      tag_586\n        /* \"#utility.yul\":21072:21096   */\n      tag_587\n        /* \"#utility.yul\":21090:21095   */\n      dup3\n        /* \"#utility.yul\":21072:21096   */\n      tag_293\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":21052:21097   */\n      tag_346\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":21047:21050   */\n      dup3\n        /* \"#utility.yul\":21040:21098   */\n      mstore\n        /* \"#utility.yul\":20947:21104   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21110:21507   */\n    tag_204:\n        /* \"#utility.yul\":21250:21253   */\n      0x00\n        /* \"#utility.yul\":21265:21340   */\n      tag_589\n        /* \"#utility.yul\":21336:21339   */\n      dup3\n        /* \"#utility.yul\":21327:21333   */\n      dup6\n        /* \"#utility.yul\":21265:21340   */\n      tag_343\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":21365:21367   */\n      0x20\n        /* \"#utility.yul\":21360:21363   */\n      dup3\n        /* \"#utility.yul\":21356:21368   */\n      add\n        /* \"#utility.yul\":21349:21368   */\n      swap2\n      pop\n        /* \"#utility.yul\":21378:21453   */\n      tag_590\n        /* \"#utility.yul\":21449:21452   */\n      dup3\n        /* \"#utility.yul\":21440:21446   */\n      dup5\n        /* \"#utility.yul\":21378:21453   */\n      tag_347\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":21478:21480   */\n      0x14\n        /* \"#utility.yul\":21473:21476   */\n      dup3\n        /* \"#utility.yul\":21469:21481   */\n      add\n        /* \"#utility.yul\":21462:21481   */\n      swap2\n      pop\n        /* \"#utility.yul\":21498:21501   */\n      dup2\n        /* \"#utility.yul\":21491:21501   */\n      swap1\n      pop\n        /* \"#utility.yul\":21110:21507   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21513:21693   */\n    tag_348:\n        /* \"#utility.yul\":21561:21638   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21558:21559   */\n      0x00\n        /* \"#utility.yul\":21551:21639   */\n      mstore\n        /* \"#utility.yul\":21658:21662   */\n      0x12\n        /* \"#utility.yul\":21655:21656   */\n      0x04\n        /* \"#utility.yul\":21648:21663   */\n      mstore\n        /* \"#utility.yul\":21682:21686   */\n      0x24\n        /* \"#utility.yul\":21679:21680   */\n      0x00\n        /* \"#utility.yul\":21672:21687   */\n      revert\n        /* \"#utility.yul\":21699:21875   */\n    tag_206:\n        /* \"#utility.yul\":21731:21732   */\n      0x00\n        /* \"#utility.yul\":21748:21768   */\n      tag_593\n        /* \"#utility.yul\":21766:21767   */\n      dup3\n        /* \"#utility.yul\":21748:21768   */\n      tag_296\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":21743:21768   */\n      swap2\n      pop\n        /* \"#utility.yul\":21782:21802   */\n      tag_594\n        /* \"#utility.yul\":21800:21801   */\n      dup4\n        /* \"#utility.yul\":21782:21802   */\n      tag_296\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":21777:21802   */\n      swap3\n      pop\n        /* \"#utility.yul\":21821:21822   */\n      dup3\n        /* \"#utility.yul\":21811:21846   */\n      tag_595\n      jumpi\n        /* \"#utility.yul\":21826:21844   */\n      tag_596\n      tag_348\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":21811:21846   */\n    tag_595:\n        /* \"#utility.yul\":21867:21868   */\n      dup3\n        /* \"#utility.yul\":21864:21865   */\n      dup3\n        /* \"#utility.yul\":21860:21869   */\n      mod\n        /* \"#utility.yul\":21855:21869   */\n      swap1\n      pop\n        /* \"#utility.yul\":21699:21875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21881:22291   */\n    tag_210:\n        /* \"#utility.yul\":21921:21928   */\n      0x00\n        /* \"#utility.yul\":21944:21964   */\n      tag_598\n        /* \"#utility.yul\":21962:21963   */\n      dup3\n        /* \"#utility.yul\":21944:21964   */\n      tag_296\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":21939:21964   */\n      swap2\n      pop\n        /* \"#utility.yul\":21978:21998   */\n      tag_599\n        /* \"#utility.yul\":21996:21997   */\n      dup4\n        /* \"#utility.yul\":21978:21998   */\n      tag_296\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":21973:21998   */\n      swap3\n      pop\n        /* \"#utility.yul\":22033:22034   */\n      dup3\n        /* \"#utility.yul\":22030:22031   */\n      dup3\n        /* \"#utility.yul\":22026:22035   */\n      mul\n        /* \"#utility.yul\":22055:22085   */\n      tag_600\n        /* \"#utility.yul\":22073:22084   */\n      dup2\n        /* \"#utility.yul\":22055:22085   */\n      tag_296\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":22044:22085   */\n      swap2\n      pop\n        /* \"#utility.yul\":22234:22235   */\n      dup3\n        /* \"#utility.yul\":22225:22232   */\n      dup3\n        /* \"#utility.yul\":22221:22236   */\n      div\n        /* \"#utility.yul\":22218:22219   */\n      dup5\n        /* \"#utility.yul\":22215:22237   */\n      eq\n        /* \"#utility.yul\":22195:22196   */\n      dup4\n        /* \"#utility.yul\":22188:22197   */\n      iszero\n        /* \"#utility.yul\":22168:22251   */\n      or\n        /* \"#utility.yul\":22145:22284   */\n      tag_601\n      jumpi\n        /* \"#utility.yul\":22264:22282   */\n      tag_602\n      tag_336\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":22145:22284   */\n    tag_601:\n        /* \"#utility.yul\":21929:22291   */\n      pop\n        /* \"#utility.yul\":21881:22291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22297:22450   */\n    tag_349:\n        /* \"#utility.yul\":22437:22442   */\n      0x776f6e0000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22433:22434   */\n      0x00\n        /* \"#utility.yul\":22425:22431   */\n      dup3\n        /* \"#utility.yul\":22421:22435   */\n      add\n        /* \"#utility.yul\":22414:22443   */\n      mstore\n        /* \"#utility.yul\":22297:22450   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22456:22821   */\n    tag_350:\n        /* \"#utility.yul\":22598:22601   */\n      0x00\n        /* \"#utility.yul\":22619:22685   */\n      tag_605\n        /* \"#utility.yul\":22683:22684   */\n      0x03\n        /* \"#utility.yul\":22678:22681   */\n      dup4\n        /* \"#utility.yul\":22619:22685   */\n      tag_285\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":22612:22685   */\n      swap2\n      pop\n        /* \"#utility.yul\":22694:22787   */\n      tag_606\n        /* \"#utility.yul\":22783:22786   */\n      dup3\n        /* \"#utility.yul\":22694:22787   */\n      tag_349\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":22812:22814   */\n      0x20\n        /* \"#utility.yul\":22807:22810   */\n      dup3\n        /* \"#utility.yul\":22803:22815   */\n      add\n        /* \"#utility.yul\":22796:22815   */\n      swap1\n      pop\n        /* \"#utility.yul\":22456:22821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22827:23454   */\n    tag_212:\n        /* \"#utility.yul\":23043:23047   */\n      0x00\n        /* \"#utility.yul\":23081:23083   */\n      0x60\n        /* \"#utility.yul\":23070:23079   */\n      dup3\n        /* \"#utility.yul\":23066:23084   */\n      add\n        /* \"#utility.yul\":23058:23084   */\n      swap1\n      pop\n        /* \"#utility.yul\":23094:23165   */\n      tag_608\n        /* \"#utility.yul\":23162:23163   */\n      0x00\n        /* \"#utility.yul\":23151:23160   */\n      dup4\n        /* \"#utility.yul\":23147:23164   */\n      add\n        /* \"#utility.yul\":23138:23144   */\n      dup6\n        /* \"#utility.yul\":23094:23165   */\n      tag_301\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":23175:23241   */\n      tag_609\n        /* \"#utility.yul\":23237:23239   */\n      0x20\n        /* \"#utility.yul\":23226:23235   */\n      dup4\n        /* \"#utility.yul\":23222:23240   */\n      add\n        /* \"#utility.yul\":23213:23219   */\n      dup5\n        /* \"#utility.yul\":23175:23241   */\n      tag_300\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":23288:23297   */\n      dup2\n        /* \"#utility.yul\":23282:23286   */\n      dup2\n        /* \"#utility.yul\":23278:23298   */\n      sub\n        /* \"#utility.yul\":23273:23275   */\n      0x40\n        /* \"#utility.yul\":23262:23271   */\n      dup4\n        /* \"#utility.yul\":23258:23276   */\n      add\n        /* \"#utility.yul\":23251:23299   */\n      mstore\n        /* \"#utility.yul\":23316:23447   */\n      tag_610\n        /* \"#utility.yul\":23442:23446   */\n      dup2\n        /* \"#utility.yul\":23316:23447   */\n      tag_350\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":23308:23447   */\n      swap1\n      pop\n        /* \"#utility.yul\":22827:23454   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23460:23614   */\n    tag_351:\n        /* \"#utility.yul\":23600:23606   */\n      0x6c6f737400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23596:23597   */\n      0x00\n        /* \"#utility.yul\":23588:23594   */\n      dup3\n        /* \"#utility.yul\":23584:23598   */\n      add\n        /* \"#utility.yul\":23577:23607   */\n      mstore\n        /* \"#utility.yul\":23460:23614   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23620:23985   */\n    tag_352:\n        /* \"#utility.yul\":23762:23765   */\n      0x00\n        /* \"#utility.yul\":23783:23849   */\n      tag_613\n        /* \"#utility.yul\":23847:23848   */\n      0x04\n        /* \"#utility.yul\":23842:23845   */\n      dup4\n        /* \"#utility.yul\":23783:23849   */\n      tag_285\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":23776:23849   */\n      swap2\n      pop\n        /* \"#utility.yul\":23858:23951   */\n      tag_614\n        /* \"#utility.yul\":23947:23950   */\n      dup3\n        /* \"#utility.yul\":23858:23951   */\n      tag_351\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":23976:23978   */\n      0x20\n        /* \"#utility.yul\":23971:23974   */\n      dup3\n        /* \"#utility.yul\":23967:23979   */\n      add\n        /* \"#utility.yul\":23960:23979   */\n      swap1\n      pop\n        /* \"#utility.yul\":23620:23985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23991:24618   */\n    tag_216:\n        /* \"#utility.yul\":24207:24211   */\n      0x00\n        /* \"#utility.yul\":24245:24247   */\n      0x60\n        /* \"#utility.yul\":24234:24243   */\n      dup3\n        /* \"#utility.yul\":24230:24248   */\n      add\n        /* \"#utility.yul\":24222:24248   */\n      swap1\n      pop\n        /* \"#utility.yul\":24258:24329   */\n      tag_616\n        /* \"#utility.yul\":24326:24327   */\n      0x00\n        /* \"#utility.yul\":24315:24324   */\n      dup4\n        /* \"#utility.yul\":24311:24328   */\n      add\n        /* \"#utility.yul\":24302:24308   */\n      dup6\n        /* \"#utility.yul\":24258:24329   */\n      tag_301\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":24339:24405   */\n      tag_617\n        /* \"#utility.yul\":24401:24403   */\n      0x20\n        /* \"#utility.yul\":24390:24399   */\n      dup4\n        /* \"#utility.yul\":24386:24404   */\n      add\n        /* \"#utility.yul\":24377:24383   */\n      dup5\n        /* \"#utility.yul\":24339:24405   */\n      tag_300\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":24452:24461   */\n      dup2\n        /* \"#utility.yul\":24446:24450   */\n      dup2\n        /* \"#utility.yul\":24442:24462   */\n      sub\n        /* \"#utility.yul\":24437:24439   */\n      0x40\n        /* \"#utility.yul\":24426:24435   */\n      dup4\n        /* \"#utility.yul\":24422:24440   */\n      add\n        /* \"#utility.yul\":24415:24463   */\n      mstore\n        /* \"#utility.yul\":24480:24611   */\n      tag_618\n        /* \"#utility.yul\":24606:24610   */\n      dup2\n        /* \"#utility.yul\":24480:24611   */\n      tag_352\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":24472:24611   */\n      swap1\n      pop\n        /* \"#utility.yul\":23991:24618   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24624:24852   */\n    tag_353:\n        /* \"#utility.yul\":24764:24798   */\n      0x596f7527766520616c726561647920636c61696d656420796f75722077656c63\n        /* \"#utility.yul\":24760:24761   */\n      0x00\n        /* \"#utility.yul\":24752:24758   */\n      dup3\n        /* \"#utility.yul\":24748:24762   */\n      add\n        /* \"#utility.yul\":24741:24799   */\n      mstore\n        /* \"#utility.yul\":24833:24844   */\n      0x6f6d6520626f6e75730000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24828:24830   */\n      0x20\n        /* \"#utility.yul\":24820:24826   */\n      dup3\n        /* \"#utility.yul\":24816:24831   */\n      add\n        /* \"#utility.yul\":24809:24845   */\n      mstore\n        /* \"#utility.yul\":24624:24852   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24858:25224   */\n    tag_354:\n        /* \"#utility.yul\":25000:25003   */\n      0x00\n        /* \"#utility.yul\":25021:25088   */\n      tag_621\n        /* \"#utility.yul\":25085:25087   */\n      0x29\n        /* \"#utility.yul\":25080:25083   */\n      dup4\n        /* \"#utility.yul\":25021:25088   */\n      tag_285\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":25014:25088   */\n      swap2\n      pop\n        /* \"#utility.yul\":25097:25190   */\n      tag_622\n        /* \"#utility.yul\":25186:25189   */\n      dup3\n        /* \"#utility.yul\":25097:25190   */\n      tag_353\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":25215:25217   */\n      0x40\n        /* \"#utility.yul\":25210:25213   */\n      dup3\n        /* \"#utility.yul\":25206:25218   */\n      add\n        /* \"#utility.yul\":25199:25218   */\n      swap1\n      pop\n        /* \"#utility.yul\":24858:25224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25230:25649   */\n    tag_227:\n        /* \"#utility.yul\":25396:25400   */\n      0x00\n        /* \"#utility.yul\":25434:25436   */\n      0x20\n        /* \"#utility.yul\":25423:25432   */\n      dup3\n        /* \"#utility.yul\":25419:25437   */\n      add\n        /* \"#utility.yul\":25411:25437   */\n      swap1\n      pop\n        /* \"#utility.yul\":25483:25492   */\n      dup2\n        /* \"#utility.yul\":25477:25481   */\n      dup2\n        /* \"#utility.yul\":25473:25493   */\n      sub\n        /* \"#utility.yul\":25469:25470   */\n      0x00\n        /* \"#utility.yul\":25458:25467   */\n      dup4\n        /* \"#utility.yul\":25454:25471   */\n      add\n        /* \"#utility.yul\":25447:25494   */\n      mstore\n        /* \"#utility.yul\":25511:25642   */\n      tag_624\n        /* \"#utility.yul\":25637:25641   */\n      dup2\n        /* \"#utility.yul\":25511:25642   */\n      tag_354\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":25503:25642   */\n      swap1\n      pop\n        /* \"#utility.yul\":25230:25649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25655:26097   */\n    tag_243:\n        /* \"#utility.yul\":25804:25808   */\n      0x00\n        /* \"#utility.yul\":25842:25844   */\n      0x60\n        /* \"#utility.yul\":25831:25840   */\n      dup3\n        /* \"#utility.yul\":25827:25845   */\n      add\n        /* \"#utility.yul\":25819:25845   */\n      swap1\n      pop\n        /* \"#utility.yul\":25855:25926   */\n      tag_626\n        /* \"#utility.yul\":25923:25924   */\n      0x00\n        /* \"#utility.yul\":25912:25921   */\n      dup4\n        /* \"#utility.yul\":25908:25925   */\n      add\n        /* \"#utility.yul\":25899:25905   */\n      dup7\n        /* \"#utility.yul\":25855:25926   */\n      tag_313\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":25936:26008   */\n      tag_627\n        /* \"#utility.yul\":26004:26006   */\n      0x20\n        /* \"#utility.yul\":25993:26002   */\n      dup4\n        /* \"#utility.yul\":25989:26007   */\n      add\n        /* \"#utility.yul\":25980:25986   */\n      dup6\n        /* \"#utility.yul\":25936:26008   */\n      tag_301\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":26018:26090   */\n      tag_628\n        /* \"#utility.yul\":26086:26088   */\n      0x40\n        /* \"#utility.yul\":26075:26084   */\n      dup4\n        /* \"#utility.yul\":26071:26089   */\n      add\n        /* \"#utility.yul\":26062:26068   */\n      dup5\n        /* \"#utility.yul\":26018:26090   */\n      tag_301\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":25655:26097   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26103:26294   */\n    tag_277:\n        /* \"#utility.yul\":26143:26146   */\n      0x00\n        /* \"#utility.yul\":26162:26182   */\n      tag_630\n        /* \"#utility.yul\":26180:26181   */\n      dup3\n        /* \"#utility.yul\":26162:26182   */\n      tag_296\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":26157:26182   */\n      swap2\n      pop\n        /* \"#utility.yul\":26196:26216   */\n      tag_631\n        /* \"#utility.yul\":26214:26215   */\n      dup4\n        /* \"#utility.yul\":26196:26216   */\n      tag_296\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":26191:26216   */\n      swap3\n      pop\n        /* \"#utility.yul\":26239:26240   */\n      dup3\n        /* \"#utility.yul\":26236:26237   */\n      dup3\n        /* \"#utility.yul\":26232:26241   */\n      add\n        /* \"#utility.yul\":26225:26241   */\n      swap1\n      pop\n        /* \"#utility.yul\":26260:26263   */\n      dup1\n        /* \"#utility.yul\":26257:26258   */\n      dup3\n        /* \"#utility.yul\":26254:26264   */\n      gt\n        /* \"#utility.yul\":26251:26287   */\n      iszero\n      tag_632\n      jumpi\n        /* \"#utility.yul\":26267:26285   */\n      tag_633\n      tag_336\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":26251:26287   */\n    tag_632:\n        /* \"#utility.yul\":26103:26294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220734a6cf9e06dc311b3d7f15bc77b99713861ae9e2851185954254059e2e24ffd64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1098": {
									"entryPoint": null,
									"id": 1098,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1458,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1611,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": 1744,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1229,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1791,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@mint_1122": {
									"entryPoint": 1424,
									"id": 1122,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1751,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 2473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3454,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2590,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2545,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2328,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 3029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2860,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2897,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8394:8",
										"nodeType": "YulBlock",
										"src": "0:8394:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "890:32:8",
													"nodeType": "YulBlock",
													"src": "890:32:8",
													"statements": [
														{
															"nativeSrc": "900:16:8",
															"nodeType": "YulAssignment",
															"src": "900:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:8",
																"nodeType": "YulIdentifier",
																"src": "911:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:8",
														"nodeType": "YulTypedName",
														"src": "872:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:8",
														"nodeType": "YulTypedName",
														"src": "882:7:8",
														"type": ""
													}
												],
												"src": "845:77:8"
											},
											{
												"body": {
													"nativeSrc": "971:79:8",
													"nodeType": "YulBlock",
													"src": "971:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:8",
																"nodeType": "YulBlock",
																"src": "1028:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:8"
																			},
																			"nativeSrc": "1030:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:8"
																		},
																		"nativeSrc": "1030:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:8"
																				},
																				"nativeSrc": "1001:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:8"
																		},
																		"nativeSrc": "991:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:8"
																},
																"nativeSrc": "984:43:8",
																"nodeType": "YulFunctionCall",
																"src": "984:43:8"
															},
															"nativeSrc": "981:63:8",
															"nodeType": "YulIf",
															"src": "981:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:8",
														"nodeType": "YulTypedName",
														"src": "964:5:8",
														"type": ""
													}
												],
												"src": "928:122:8"
											},
											{
												"body": {
													"nativeSrc": "1119:80:8",
													"nodeType": "YulBlock",
													"src": "1119:80:8",
													"statements": [
														{
															"nativeSrc": "1129:22:8",
															"nodeType": "YulAssignment",
															"src": "1129:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:8"
																},
																"nativeSrc": "1138:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:8"
																},
																"nativeSrc": "1160:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:8"
															},
															"nativeSrc": "1160:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:8",
														"nodeType": "YulTypedName",
														"src": "1097:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:8",
														"nodeType": "YulTypedName",
														"src": "1105:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:8",
														"nodeType": "YulTypedName",
														"src": "1113:5:8",
														"type": ""
													}
												],
												"src": "1056:143:8"
											},
											{
												"body": {
													"nativeSrc": "1299:413:8",
													"nodeType": "YulBlock",
													"src": "1299:413:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1345:83:8",
																"nodeType": "YulBlock",
																"src": "1345:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1347:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:8"
																			},
																			"nativeSrc": "1347:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:8"
																		},
																		"nativeSrc": "1347:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1320:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1329:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1316:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:8"
																		},
																		"nativeSrc": "1316:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1312:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:8"
																},
																"nativeSrc": "1312:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1312:32:8"
															},
															"nativeSrc": "1309:119:8",
															"nodeType": "YulIf",
															"src": "1309:119:8"
														},
														{
															"nativeSrc": "1438:128:8",
															"nodeType": "YulBlock",
															"src": "1438:128:8",
															"statements": [
																{
																	"nativeSrc": "1453:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1467:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1457:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1482:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1482:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1528:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1539:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1524:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:8"
																				},
																				"nativeSrc": "1524:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1548:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1492:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:8"
																		},
																		"nativeSrc": "1492:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1482:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1576:129:8",
															"nodeType": "YulBlock",
															"src": "1576:129:8",
															"statements": [
																{
																	"nativeSrc": "1591:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1605:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1595:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1621:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1621:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1667:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1678:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1663:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:8"
																				},
																				"nativeSrc": "1663:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1687:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1631:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:8"
																		},
																		"nativeSrc": "1631:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1621:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nativeSrc": "1205:507:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1261:9:8",
														"nodeType": "YulTypedName",
														"src": "1261:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1272:7:8",
														"nodeType": "YulTypedName",
														"src": "1272:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1284:6:8",
														"nodeType": "YulTypedName",
														"src": "1284:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1292:6:8",
														"nodeType": "YulTypedName",
														"src": "1292:6:8",
														"type": ""
													}
												],
												"src": "1205:507:8"
											},
											{
												"body": {
													"nativeSrc": "1777:40:8",
													"nodeType": "YulBlock",
													"src": "1777:40:8",
													"statements": [
														{
															"nativeSrc": "1788:22:8",
															"nodeType": "YulAssignment",
															"src": "1788:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1804:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1804:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1798:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1798:5:8"
																},
																"nativeSrc": "1798:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1798:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1788:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1718:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1760:5:8",
														"nodeType": "YulTypedName",
														"src": "1760:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1770:6:8",
														"nodeType": "YulTypedName",
														"src": "1770:6:8",
														"type": ""
													}
												],
												"src": "1718:99:8"
											},
											{
												"body": {
													"nativeSrc": "1851:152:8",
													"nodeType": "YulBlock",
													"src": "1851:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1868:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1868:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1871:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1871:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1861:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1861:6:8"
																},
																"nativeSrc": "1861:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1861:88:8"
															},
															"nativeSrc": "1861:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1861:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1965:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1965:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1968:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1968:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1958:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:8"
																},
																"nativeSrc": "1958:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1958:15:8"
															},
															"nativeSrc": "1958:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1958:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1989:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1989:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1992:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1982:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1982:6:8"
																},
																"nativeSrc": "1982:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1982:15:8"
															},
															"nativeSrc": "1982:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1982:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1823:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1823:180:8"
											},
											{
												"body": {
													"nativeSrc": "2037:152:8",
													"nodeType": "YulBlock",
													"src": "2037:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2054:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2054:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2057:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2057:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2047:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2047:6:8"
																},
																"nativeSrc": "2047:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2047:88:8"
															},
															"nativeSrc": "2047:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2047:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2151:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2151:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2154:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2154:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2144:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2144:6:8"
																},
																"nativeSrc": "2144:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2144:15:8"
															},
															"nativeSrc": "2144:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2144:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2175:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2175:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2178:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2178:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2168:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2168:6:8"
																},
																"nativeSrc": "2168:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2168:15:8"
															},
															"nativeSrc": "2168:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2168:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2009:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2009:180:8"
											},
											{
												"body": {
													"nativeSrc": "2246:269:8",
													"nodeType": "YulBlock",
													"src": "2246:269:8",
													"statements": [
														{
															"nativeSrc": "2256:22:8",
															"nodeType": "YulAssignment",
															"src": "2256:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2270:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2270:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2276:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2276:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2266:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2266:3:8"
																},
																"nativeSrc": "2266:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2266:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2256:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:8"
																}
															]
														},
														{
															"nativeSrc": "2287:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2287:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2317:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2317:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2323:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2323:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2313:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2313:3:8"
																},
																"nativeSrc": "2313:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2313:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2291:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2291:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2364:51:8",
																"nodeType": "YulBlock",
																"src": "2364:51:8",
																"statements": [
																	{
																		"nativeSrc": "2378:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2378:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2392:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2392:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2400:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2400:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2388:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2388:3:8"
																			},
																			"nativeSrc": "2388:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2388:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2378:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2378:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2344:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2344:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2337:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2337:6:8"
																},
																"nativeSrc": "2337:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2337:26:8"
															},
															"nativeSrc": "2334:81:8",
															"nodeType": "YulIf",
															"src": "2334:81:8"
														},
														{
															"body": {
																"nativeSrc": "2467:42:8",
																"nodeType": "YulBlock",
																"src": "2467:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2481:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2481:16:8"
																			},
																			"nativeSrc": "2481:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2481:18:8"
																		},
																		"nativeSrc": "2481:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2481:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2431:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2431:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2454:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2454:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2462:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2462:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2451:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2451:2:8"
																		},
																		"nativeSrc": "2451:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2451:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2428:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2428:2:8"
																},
																"nativeSrc": "2428:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2428:38:8"
															},
															"nativeSrc": "2425:84:8",
															"nodeType": "YulIf",
															"src": "2425:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2195:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2230:4:8",
														"nodeType": "YulTypedName",
														"src": "2230:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2239:6:8",
														"nodeType": "YulTypedName",
														"src": "2239:6:8",
														"type": ""
													}
												],
												"src": "2195:320:8"
											},
											{
												"body": {
													"nativeSrc": "2575:87:8",
													"nodeType": "YulBlock",
													"src": "2575:87:8",
													"statements": [
														{
															"nativeSrc": "2585:11:8",
															"nodeType": "YulAssignment",
															"src": "2585:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "2593:3:8",
																"nodeType": "YulIdentifier",
																"src": "2593:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2585:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2585:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2613:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2613:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2616:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2616:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2606:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:8"
																},
																"nativeSrc": "2606:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2606:14:8"
															},
															"nativeSrc": "2606:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2606:14:8"
														},
														{
															"nativeSrc": "2629:26:8",
															"nodeType": "YulAssignment",
															"src": "2629:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2647:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2647:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2650:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2650:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2637:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2637:9:8"
																},
																"nativeSrc": "2637:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2637:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2629:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2629:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2521:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2562:3:8",
														"nodeType": "YulTypedName",
														"src": "2562:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2570:4:8",
														"nodeType": "YulTypedName",
														"src": "2570:4:8",
														"type": ""
													}
												],
												"src": "2521:141:8"
											},
											{
												"body": {
													"nativeSrc": "2712:49:8",
													"nodeType": "YulBlock",
													"src": "2712:49:8",
													"statements": [
														{
															"nativeSrc": "2722:33:8",
															"nodeType": "YulAssignment",
															"src": "2722:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2740:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2740:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2747:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2747:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2736:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2736:3:8"
																		},
																		"nativeSrc": "2736:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2736:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2752:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2752:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2732:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2732:3:8"
																},
																"nativeSrc": "2732:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2732:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2722:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2722:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2668:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2695:5:8",
														"nodeType": "YulTypedName",
														"src": "2695:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2705:6:8",
														"nodeType": "YulTypedName",
														"src": "2705:6:8",
														"type": ""
													}
												],
												"src": "2668:93:8"
											},
											{
												"body": {
													"nativeSrc": "2820:54:8",
													"nodeType": "YulBlock",
													"src": "2820:54:8",
													"statements": [
														{
															"nativeSrc": "2830:37:8",
															"nodeType": "YulAssignment",
															"src": "2830:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2855:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2855:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2861:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2861:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2851:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2851:3:8"
																},
																"nativeSrc": "2851:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2851:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2830:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2830:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2767:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2795:4:8",
														"nodeType": "YulTypedName",
														"src": "2795:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2801:5:8",
														"nodeType": "YulTypedName",
														"src": "2801:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2811:8:8",
														"nodeType": "YulTypedName",
														"src": "2811:8:8",
														"type": ""
													}
												],
												"src": "2767:107:8"
											},
											{
												"body": {
													"nativeSrc": "2956:317:8",
													"nodeType": "YulBlock",
													"src": "2956:317:8",
													"statements": [
														{
															"nativeSrc": "2966:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2966:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2987:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "2987:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2999:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2999:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2983:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2983:3:8"
																},
																"nativeSrc": "2983:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2983:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2970:9:8",
																	"nodeType": "YulTypedName",
																	"src": "2970:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3010:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3010:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3041:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3041:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3052:66:8",
																		"nodeType": "YulLiteral",
																		"src": "3052:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3022:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3022:18:8"
																},
																"nativeSrc": "3022:97:8",
																"nodeType": "YulFunctionCall",
																"src": "3022:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3014:4:8",
																	"nodeType": "YulTypedName",
																	"src": "3014:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3128:51:8",
															"nodeType": "YulAssignment",
															"src": "3128:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3159:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3170:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3170:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3140:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3140:18:8"
																},
																"nativeSrc": "3140:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3140:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3128:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "3128:8:8"
																}
															]
														},
														{
															"nativeSrc": "3188:30:8",
															"nodeType": "YulAssignment",
															"src": "3188:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3201:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3201:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3212:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3212:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3208:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3208:3:8"
																		},
																		"nativeSrc": "3208:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3208:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3197:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3197:3:8"
																},
																"nativeSrc": "3197:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3197:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3188:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3188:5:8"
																}
															]
														},
														{
															"nativeSrc": "3227:40:8",
															"nodeType": "YulAssignment",
															"src": "3227:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3240:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3240:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3251:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "3251:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3261:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3261:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3247:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3247:3:8"
																		},
																		"nativeSrc": "3247:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3247:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3237:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3237:2:8"
																},
																"nativeSrc": "3237:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3237:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3227:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2880:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2917:5:8",
														"nodeType": "YulTypedName",
														"src": "2917:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2924:10:8",
														"nodeType": "YulTypedName",
														"src": "2924:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2936:8:8",
														"nodeType": "YulTypedName",
														"src": "2936:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2949:6:8",
														"nodeType": "YulTypedName",
														"src": "2949:6:8",
														"type": ""
													}
												],
												"src": "2880:393:8"
											},
											{
												"body": {
													"nativeSrc": "3311:28:8",
													"nodeType": "YulBlock",
													"src": "3311:28:8",
													"statements": [
														{
															"nativeSrc": "3321:12:8",
															"nodeType": "YulAssignment",
															"src": "3321:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3328:5:8",
																"nodeType": "YulIdentifier",
																"src": "3328:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3321:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3321:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3279:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3297:5:8",
														"nodeType": "YulTypedName",
														"src": "3297:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3307:3:8",
														"nodeType": "YulTypedName",
														"src": "3307:3:8",
														"type": ""
													}
												],
												"src": "3279:60:8"
											},
											{
												"body": {
													"nativeSrc": "3405:82:8",
													"nodeType": "YulBlock",
													"src": "3405:82:8",
													"statements": [
														{
															"nativeSrc": "3415:66:8",
															"nodeType": "YulAssignment",
															"src": "3415:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3473:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3473:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3455:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3455:17:8"
																				},
																				"nativeSrc": "3455:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3455:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3446:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "3446:8:8"
																		},
																		"nativeSrc": "3446:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3446:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3428:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3428:17:8"
																},
																"nativeSrc": "3428:53:8",
																"nodeType": "YulFunctionCall",
																"src": "3428:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3415:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3415:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3345:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3385:5:8",
														"nodeType": "YulTypedName",
														"src": "3385:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3395:9:8",
														"nodeType": "YulTypedName",
														"src": "3395:9:8",
														"type": ""
													}
												],
												"src": "3345:142:8"
											},
											{
												"body": {
													"nativeSrc": "3540:28:8",
													"nodeType": "YulBlock",
													"src": "3540:28:8",
													"statements": [
														{
															"nativeSrc": "3550:12:8",
															"nodeType": "YulAssignment",
															"src": "3550:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3557:5:8",
																"nodeType": "YulIdentifier",
																"src": "3557:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3550:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3550:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3493:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3526:5:8",
														"nodeType": "YulTypedName",
														"src": "3526:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3536:3:8",
														"nodeType": "YulTypedName",
														"src": "3536:3:8",
														"type": ""
													}
												],
												"src": "3493:75:8"
											},
											{
												"body": {
													"nativeSrc": "3650:193:8",
													"nodeType": "YulBlock",
													"src": "3650:193:8",
													"statements": [
														{
															"nativeSrc": "3660:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3660:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3715:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3715:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3684:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3684:30:8"
																},
																"nativeSrc": "3684:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3684:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3664:16:8",
																	"nodeType": "YulTypedName",
																	"src": "3664:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3739:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3739:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3779:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3779:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3773:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3773:5:8"
																				},
																				"nativeSrc": "3773:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3773:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3786:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3786:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3818:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "3818:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3794:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "3794:23:8"
																				},
																				"nativeSrc": "3794:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3794:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3745:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "3745:27:8"
																		},
																		"nativeSrc": "3745:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3745:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3732:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3732:6:8"
																},
																"nativeSrc": "3732:105:8",
																"nodeType": "YulFunctionCall",
																"src": "3732:105:8"
															},
															"nativeSrc": "3732:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "3732:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3574:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3627:4:8",
														"nodeType": "YulTypedName",
														"src": "3627:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3633:6:8",
														"nodeType": "YulTypedName",
														"src": "3633:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3641:7:8",
														"nodeType": "YulTypedName",
														"src": "3641:7:8",
														"type": ""
													}
												],
												"src": "3574:269:8"
											},
											{
												"body": {
													"nativeSrc": "3898:24:8",
													"nodeType": "YulBlock",
													"src": "3898:24:8",
													"statements": [
														{
															"nativeSrc": "3908:8:8",
															"nodeType": "YulAssignment",
															"src": "3908:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3915:1:8",
																"nodeType": "YulLiteral",
																"src": "3915:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3908:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3908:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3849:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3894:3:8",
														"nodeType": "YulTypedName",
														"src": "3894:3:8",
														"type": ""
													}
												],
												"src": "3849:73:8"
											},
											{
												"body": {
													"nativeSrc": "3981:136:8",
													"nodeType": "YulBlock",
													"src": "3981:136:8",
													"statements": [
														{
															"nativeSrc": "3991:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3991:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4005:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "4005:30:8"
																},
																"nativeSrc": "4005:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4005:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3995:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3995:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4090:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4090:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4096:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4096:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4104:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4104:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4046:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4046:43:8"
																},
																"nativeSrc": "4046:65:8",
																"nodeType": "YulFunctionCall",
																"src": "4046:65:8"
															},
															"nativeSrc": "4046:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "4046:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3928:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3967:4:8",
														"nodeType": "YulTypedName",
														"src": "3967:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3973:6:8",
														"nodeType": "YulTypedName",
														"src": "3973:6:8",
														"type": ""
													}
												],
												"src": "3928:189:8"
											},
											{
												"body": {
													"nativeSrc": "4173:136:8",
													"nodeType": "YulBlock",
													"src": "4173:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4240:63:8",
																"nodeType": "YulBlock",
																"src": "4240:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4284:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4284:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4291:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4291:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4254:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "4254:29:8"
																			},
																			"nativeSrc": "4254:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4254:39:8"
																		},
																		"nativeSrc": "4254:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4254:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4193:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4193:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4200:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4200:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4190:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4190:2:8"
																},
																"nativeSrc": "4190:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4190:14:8"
															},
															"nativeSrc": "4183:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4205:26:8",
																"nodeType": "YulBlock",
																"src": "4205:26:8",
																"statements": [
																	{
																		"nativeSrc": "4207:22:8",
																		"nodeType": "YulAssignment",
																		"src": "4207:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4220:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4220:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4227:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4227:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4216:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4216:3:8"
																			},
																			"nativeSrc": "4216:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4216:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4207:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4207:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4187:2:8",
																"nodeType": "YulBlock",
																"src": "4187:2:8",
																"statements": []
															},
															"src": "4183:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4123:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4161:5:8",
														"nodeType": "YulTypedName",
														"src": "4161:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4168:3:8",
														"nodeType": "YulTypedName",
														"src": "4168:3:8",
														"type": ""
													}
												],
												"src": "4123:186:8"
											},
											{
												"body": {
													"nativeSrc": "4394:464:8",
													"nodeType": "YulBlock",
													"src": "4394:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4420:431:8",
																"nodeType": "YulBlock",
																"src": "4420:431:8",
																"statements": [
																	{
																		"nativeSrc": "4434:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4434:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4482:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4482:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4450:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "4450:31:8"
																			},
																			"nativeSrc": "4450:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4450:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4438:8:8",
																				"nodeType": "YulTypedName",
																				"src": "4438:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4501:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4501:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4524:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4524:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4552:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "4552:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4534:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "4534:17:8"
																					},
																					"nativeSrc": "4534:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4534:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4520:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4520:3:8"
																			},
																			"nativeSrc": "4520:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4520:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4505:11:8",
																				"nodeType": "YulTypedName",
																				"src": "4505:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4721:27:8",
																			"nodeType": "YulBlock",
																			"src": "4721:27:8",
																			"statements": [
																				{
																					"nativeSrc": "4723:23:8",
																					"nodeType": "YulAssignment",
																					"src": "4723:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4738:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4738:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4723:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "4723:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4705:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "4705:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4717:2:8",
																					"nodeType": "YulLiteral",
																					"src": "4717:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4702:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "4702:2:8"
																			},
																			"nativeSrc": "4702:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4702:18:8"
																		},
																		"nativeSrc": "4699:49:8",
																		"nodeType": "YulIf",
																		"src": "4699:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4790:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "4790:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4807:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4807:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4835:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4835:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4817:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "4817:17:8"
																							},
																							"nativeSrc": "4817:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4817:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4803:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4803:3:8"
																					},
																					"nativeSrc": "4803:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4803:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4761:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "4761:28:8"
																			},
																			"nativeSrc": "4761:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4761:80:8"
																		},
																		"nativeSrc": "4761:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4761:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4411:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4411:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4416:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4416:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4408:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4408:2:8"
																},
																"nativeSrc": "4408:11:8",
																"nodeType": "YulFunctionCall",
																"src": "4408:11:8"
															},
															"nativeSrc": "4405:446:8",
															"nodeType": "YulIf",
															"src": "4405:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4315:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4370:5:8",
														"nodeType": "YulTypedName",
														"src": "4370:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4377:3:8",
														"nodeType": "YulTypedName",
														"src": "4377:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4382:10:8",
														"nodeType": "YulTypedName",
														"src": "4382:10:8",
														"type": ""
													}
												],
												"src": "4315:543:8"
											},
											{
												"body": {
													"nativeSrc": "4927:54:8",
													"nodeType": "YulBlock",
													"src": "4927:54:8",
													"statements": [
														{
															"nativeSrc": "4937:37:8",
															"nodeType": "YulAssignment",
															"src": "4937:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4962:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4962:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4968:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4968:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4958:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4958:3:8"
																},
																"nativeSrc": "4958:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4958:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4937:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4937:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4864:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4902:4:8",
														"nodeType": "YulTypedName",
														"src": "4902:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4908:5:8",
														"nodeType": "YulTypedName",
														"src": "4908:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4918:8:8",
														"nodeType": "YulTypedName",
														"src": "4918:8:8",
														"type": ""
													}
												],
												"src": "4864:117:8"
											},
											{
												"body": {
													"nativeSrc": "5038:118:8",
													"nodeType": "YulBlock",
													"src": "5038:118:8",
													"statements": [
														{
															"nativeSrc": "5048:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5048:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5097:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5097:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5100:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5100:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5093:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5093:3:8"
																				},
																				"nativeSrc": "5093:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5093:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5112:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5112:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5108:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5108:3:8"
																				},
																				"nativeSrc": "5108:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5108:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5064:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "5064:28:8"
																		},
																		"nativeSrc": "5064:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5064:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5060:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5060:3:8"
																},
																"nativeSrc": "5060:56:8",
																"nodeType": "YulFunctionCall",
																"src": "5060:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5052:4:8",
																	"nodeType": "YulTypedName",
																	"src": "5052:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5125:25:8",
															"nodeType": "YulAssignment",
															"src": "5125:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5139:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5139:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5145:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5145:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5135:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5135:3:8"
																},
																"nativeSrc": "5135:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5135:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5125:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4987:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5015:4:8",
														"nodeType": "YulTypedName",
														"src": "5015:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5021:5:8",
														"nodeType": "YulTypedName",
														"src": "5021:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5031:6:8",
														"nodeType": "YulTypedName",
														"src": "5031:6:8",
														"type": ""
													}
												],
												"src": "4987:169:8"
											},
											{
												"body": {
													"nativeSrc": "5242:214:8",
													"nodeType": "YulBlock",
													"src": "5242:214:8",
													"statements": [
														{
															"nativeSrc": "5375:37:8",
															"nodeType": "YulAssignment",
															"src": "5375:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5402:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5402:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5408:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5408:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5383:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5383:18:8"
																},
																"nativeSrc": "5383:29:8",
																"nodeType": "YulFunctionCall",
																"src": "5383:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5375:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5375:4:8"
																}
															]
														},
														{
															"nativeSrc": "5421:29:8",
															"nodeType": "YulAssignment",
															"src": "5421:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5432:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5432:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5442:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5442:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5445:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5445:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5438:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5438:3:8"
																		},
																		"nativeSrc": "5438:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5438:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5429:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5429:2:8"
																},
																"nativeSrc": "5429:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5429:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5421:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5421:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5161:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5223:4:8",
														"nodeType": "YulTypedName",
														"src": "5223:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5229:3:8",
														"nodeType": "YulTypedName",
														"src": "5229:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5237:4:8",
														"nodeType": "YulTypedName",
														"src": "5237:4:8",
														"type": ""
													}
												],
												"src": "5161:295:8"
											},
											{
												"body": {
													"nativeSrc": "5553:1303:8",
													"nodeType": "YulBlock",
													"src": "5553:1303:8",
													"statements": [
														{
															"nativeSrc": "5564:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5564:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5611:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5611:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5578:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "5578:32:8"
																},
																"nativeSrc": "5578:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5578:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5568:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5568:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5700:22:8",
																"nodeType": "YulBlock",
																"src": "5700:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5702:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5702:16:8"
																			},
																			"nativeSrc": "5702:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5702:18:8"
																		},
																		"nativeSrc": "5702:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5702:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5672:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5672:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5680:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5680:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5669:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5669:2:8"
																},
																"nativeSrc": "5669:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5669:30:8"
															},
															"nativeSrc": "5666:56:8",
															"nodeType": "YulIf",
															"src": "5666:56:8"
														},
														{
															"nativeSrc": "5732:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5732:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5778:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5778:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5772:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5772:5:8"
																		},
																		"nativeSrc": "5772:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5772:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5746:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "5746:25:8"
																},
																"nativeSrc": "5746:38:8",
																"nodeType": "YulFunctionCall",
																"src": "5746:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5736:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5736:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5877:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5877:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5883:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5883:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5891:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5891:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5831:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "5831:45:8"
																},
																"nativeSrc": "5831:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5831:67:8"
															},
															"nativeSrc": "5831:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5831:67:8"
														},
														{
															"nativeSrc": "5908:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5908:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5925:1:8",
																"nodeType": "YulLiteral",
																"src": "5925:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5912:9:8",
																	"nodeType": "YulTypedName",
																	"src": "5912:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5936:17:8",
															"nodeType": "YulAssignment",
															"src": "5936:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5949:4:8",
																"nodeType": "YulLiteral",
																"src": "5949:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5936:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5936:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6000:611:8",
																		"nodeType": "YulBlock",
																		"src": "6000:611:8",
																		"statements": [
																			{
																				"nativeSrc": "6014:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6014:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6033:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6033:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6045:4:8",
																									"nodeType": "YulLiteral",
																									"src": "6045:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6041:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6041:3:8"
																							},
																							"nativeSrc": "6041:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6041:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6029:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6029:3:8"
																					},
																					"nativeSrc": "6029:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6029:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6018:7:8",
																						"nodeType": "YulTypedName",
																						"src": "6018:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6065:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6065:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6111:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6111:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6079:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "6079:31:8"
																					},
																					"nativeSrc": "6079:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6079:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6069:6:8",
																						"nodeType": "YulTypedName",
																						"src": "6069:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6129:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6129:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6138:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6138:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6133:1:8",
																						"nodeType": "YulTypedName",
																						"src": "6133:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6197:163:8",
																					"nodeType": "YulBlock",
																					"src": "6197:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6222:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6222:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6240:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "6240:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6245:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "6245:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6236:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6236:3:8"
																												},
																												"nativeSrc": "6236:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6236:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6230:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "6230:5:8"
																										},
																										"nativeSrc": "6230:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6230:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6215:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6215:6:8"
																								},
																								"nativeSrc": "6215:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6215:42:8"
																							},
																							"nativeSrc": "6215:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6215:42:8"
																						},
																						{
																							"nativeSrc": "6274:24:8",
																							"nodeType": "YulAssignment",
																							"src": "6274:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6288:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6288:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6296:1:8",
																										"nodeType": "YulLiteral",
																										"src": "6296:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6284:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6284:3:8"
																								},
																								"nativeSrc": "6284:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6284:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6274:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6274:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6315:31:8",
																							"nodeType": "YulAssignment",
																							"src": "6315:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6332:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "6332:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6343:2:8",
																										"nodeType": "YulLiteral",
																										"src": "6343:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6328:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6328:3:8"
																								},
																								"nativeSrc": "6328:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6328:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6315:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "6315:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6163:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "6163:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6166:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6166:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6160:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6160:2:8"
																					},
																					"nativeSrc": "6160:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6160:14:8"
																				},
																				"nativeSrc": "6152:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6175:21:8",
																					"nodeType": "YulBlock",
																					"src": "6175:21:8",
																					"statements": [
																						{
																							"nativeSrc": "6177:17:8",
																							"nodeType": "YulAssignment",
																							"src": "6177:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6186:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "6186:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6189:4:8",
																										"nodeType": "YulLiteral",
																										"src": "6189:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6182:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6182:3:8"
																								},
																								"nativeSrc": "6182:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6182:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6177:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "6177:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6156:3:8",
																					"nodeType": "YulBlock",
																					"src": "6156:3:8",
																					"statements": []
																				},
																				"src": "6152:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "6396:156:8",
																					"nodeType": "YulBlock",
																					"src": "6396:156:8",
																					"statements": [
																						{
																							"nativeSrc": "6414:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6414:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6441:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6441:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6446:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6446:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6437:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6437:3:8"
																										},
																										"nativeSrc": "6437:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6437:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6431:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6431:5:8"
																								},
																								"nativeSrc": "6431:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6431:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6418:9:8",
																									"nodeType": "YulTypedName",
																									"src": "6418:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6481:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6481:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6508:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6508:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6523:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "6523:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6531:4:8",
																														"nodeType": "YulLiteral",
																														"src": "6531:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6519:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6519:3:8"
																												},
																												"nativeSrc": "6519:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6519:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6489:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "6489:18:8"
																										},
																										"nativeSrc": "6489:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6489:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6474:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6474:6:8"
																								},
																								"nativeSrc": "6474:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6474:64:8"
																							},
																							"nativeSrc": "6474:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6474:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6379:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6379:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6388:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6388:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6376:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6376:2:8"
																					},
																					"nativeSrc": "6376:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6376:19:8"
																				},
																				"nativeSrc": "6373:179:8",
																				"nodeType": "YulIf",
																				"src": "6373:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6572:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6572:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6586:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "6586:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6594:1:8",
																											"nodeType": "YulLiteral",
																											"src": "6594:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6582:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "6582:3:8"
																									},
																									"nativeSrc": "6582:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "6582:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6598:1:8",
																									"nodeType": "YulLiteral",
																									"src": "6598:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6578:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6578:3:8"
																							},
																							"nativeSrc": "6578:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6578:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6565:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6565:6:8"
																					},
																					"nativeSrc": "6565:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6565:36:8"
																				},
																				"nativeSrc": "6565:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6565:36:8"
																			}
																		]
																	},
																	"nativeSrc": "5993:618:8",
																	"nodeType": "YulCase",
																	"src": "5993:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5998:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5998:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6628:222:8",
																		"nodeType": "YulBlock",
																		"src": "6628:222:8",
																		"statements": [
																			{
																				"nativeSrc": "6642:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6642:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6655:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6655:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6646:5:8",
																						"nodeType": "YulTypedName",
																						"src": "6646:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6679:67:8",
																					"nodeType": "YulBlock",
																					"src": "6679:67:8",
																					"statements": [
																						{
																							"nativeSrc": "6697:35:8",
																							"nodeType": "YulAssignment",
																							"src": "6697:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6716:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6716:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6721:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6721:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6712:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6712:3:8"
																										},
																										"nativeSrc": "6712:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6712:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6706:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6706:5:8"
																								},
																								"nativeSrc": "6706:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6706:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6697:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6697:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6672:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6672:6:8"
																				},
																				"nativeSrc": "6669:77:8",
																				"nodeType": "YulIf",
																				"src": "6669:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6766:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6766:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6825:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6825:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6832:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6832:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6772:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "6772:52:8"
																							},
																							"nativeSrc": "6772:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6772:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6759:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6759:6:8"
																					},
																					"nativeSrc": "6759:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6759:81:8"
																				},
																				"nativeSrc": "6759:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6759:81:8"
																			}
																		]
																	},
																	"nativeSrc": "6620:230:8",
																	"nodeType": "YulCase",
																	"src": "6620:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5973:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5973:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5981:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5981:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5970:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5970:2:8"
																},
																"nativeSrc": "5970:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5970:14:8"
															},
															"nativeSrc": "5963:887:8",
															"nodeType": "YulSwitch",
															"src": "5963:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5461:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5542:4:8",
														"nodeType": "YulTypedName",
														"src": "5542:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5548:3:8",
														"nodeType": "YulTypedName",
														"src": "5548:3:8",
														"type": ""
													}
												],
												"src": "5461:1395:8"
											},
											{
												"body": {
													"nativeSrc": "6927:53:8",
													"nodeType": "YulBlock",
													"src": "6927:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6944:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6944:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6967:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6967:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6949:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6949:17:8"
																		},
																		"nativeSrc": "6949:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6949:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6937:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6937:6:8"
																},
																"nativeSrc": "6937:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6937:37:8"
															},
															"nativeSrc": "6937:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6937:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6862:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6915:5:8",
														"nodeType": "YulTypedName",
														"src": "6915:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6922:3:8",
														"nodeType": "YulTypedName",
														"src": "6922:3:8",
														"type": ""
													}
												],
												"src": "6862:118:8"
											},
											{
												"body": {
													"nativeSrc": "7084:124:8",
													"nodeType": "YulBlock",
													"src": "7084:124:8",
													"statements": [
														{
															"nativeSrc": "7094:26:8",
															"nodeType": "YulAssignment",
															"src": "7094:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7106:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7106:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7117:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7117:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7102:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7102:3:8"
																},
																"nativeSrc": "7102:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7102:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7094:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7094:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7174:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7174:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7187:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7187:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7198:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7198:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7183:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7183:3:8"
																		},
																		"nativeSrc": "7183:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7183:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7130:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7130:43:8"
																},
																"nativeSrc": "7130:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7130:71:8"
															},
															"nativeSrc": "7130:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7130:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6986:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7056:9:8",
														"nodeType": "YulTypedName",
														"src": "7056:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7068:6:8",
														"nodeType": "YulTypedName",
														"src": "7068:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7079:4:8",
														"nodeType": "YulTypedName",
														"src": "7079:4:8",
														"type": ""
													}
												],
												"src": "6986:222:8"
											},
											{
												"body": {
													"nativeSrc": "7242:152:8",
													"nodeType": "YulBlock",
													"src": "7242:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7259:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7259:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7262:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7262:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7252:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7252:6:8"
																},
																"nativeSrc": "7252:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7252:88:8"
															},
															"nativeSrc": "7252:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7252:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7356:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7356:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7359:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7359:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7349:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7349:6:8"
																},
																"nativeSrc": "7349:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7349:15:8"
															},
															"nativeSrc": "7349:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7349:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7380:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7380:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7383:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7383:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7373:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7373:6:8"
																},
																"nativeSrc": "7373:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7373:15:8"
															},
															"nativeSrc": "7373:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7373:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7214:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7214:180:8"
											},
											{
												"body": {
													"nativeSrc": "7444:147:8",
													"nodeType": "YulBlock",
													"src": "7444:147:8",
													"statements": [
														{
															"nativeSrc": "7454:25:8",
															"nodeType": "YulAssignment",
															"src": "7454:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7477:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7477:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7459:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7459:17:8"
																},
																"nativeSrc": "7459:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7459:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7454:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7454:1:8"
																}
															]
														},
														{
															"nativeSrc": "7488:25:8",
															"nodeType": "YulAssignment",
															"src": "7488:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7511:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7511:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7493:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7493:17:8"
																},
																"nativeSrc": "7493:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7493:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7488:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7488:1:8"
																}
															]
														},
														{
															"nativeSrc": "7522:16:8",
															"nodeType": "YulAssignment",
															"src": "7522:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7533:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7533:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7536:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7536:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7529:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7529:3:8"
																},
																"nativeSrc": "7529:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7529:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7522:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7522:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7562:22:8",
																"nodeType": "YulBlock",
																"src": "7562:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7564:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7564:16:8"
																			},
																			"nativeSrc": "7564:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7564:18:8"
																		},
																		"nativeSrc": "7564:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7564:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7554:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7554:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7557:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7557:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7551:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7551:2:8"
																},
																"nativeSrc": "7551:10:8",
																"nodeType": "YulFunctionCall",
																"src": "7551:10:8"
															},
															"nativeSrc": "7548:36:8",
															"nodeType": "YulIf",
															"src": "7548:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7400:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7431:1:8",
														"nodeType": "YulTypedName",
														"src": "7431:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7434:1:8",
														"nodeType": "YulTypedName",
														"src": "7434:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7440:3:8",
														"nodeType": "YulTypedName",
														"src": "7440:3:8",
														"type": ""
													}
												],
												"src": "7400:191:8"
											},
											{
												"body": {
													"nativeSrc": "7662:53:8",
													"nodeType": "YulBlock",
													"src": "7662:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7679:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7679:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7702:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7702:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7684:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "7684:17:8"
																		},
																		"nativeSrc": "7684:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7684:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7672:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7672:6:8"
																},
																"nativeSrc": "7672:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7672:37:8"
															},
															"nativeSrc": "7672:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "7672:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7597:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7650:5:8",
														"nodeType": "YulTypedName",
														"src": "7650:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7657:3:8",
														"nodeType": "YulTypedName",
														"src": "7657:3:8",
														"type": ""
													}
												],
												"src": "7597:118:8"
											},
											{
												"body": {
													"nativeSrc": "7875:288:8",
													"nodeType": "YulBlock",
													"src": "7875:288:8",
													"statements": [
														{
															"nativeSrc": "7885:26:8",
															"nodeType": "YulAssignment",
															"src": "7885:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7897:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7897:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7908:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7908:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7893:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7893:3:8"
																},
																"nativeSrc": "7893:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7893:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7885:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7885:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7965:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7965:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7978:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7978:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7989:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7989:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7974:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7974:3:8"
																		},
																		"nativeSrc": "7974:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7974:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7921:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7921:43:8"
																},
																"nativeSrc": "7921:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7921:71:8"
															},
															"nativeSrc": "7921:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7921:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8046:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8046:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8059:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8059:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8070:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8070:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8055:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8055:3:8"
																		},
																		"nativeSrc": "8055:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8055:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8002:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8002:43:8"
																},
																"nativeSrc": "8002:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8002:72:8"
															},
															"nativeSrc": "8002:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8002:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8128:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8128:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8141:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8141:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8152:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8152:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8137:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8137:3:8"
																		},
																		"nativeSrc": "8137:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8137:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8084:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8084:43:8"
																},
																"nativeSrc": "8084:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8084:72:8"
															},
															"nativeSrc": "8084:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8084:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7721:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7831:9:8",
														"nodeType": "YulTypedName",
														"src": "7831:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7843:6:8",
														"nodeType": "YulTypedName",
														"src": "7843:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7851:6:8",
														"nodeType": "YulTypedName",
														"src": "7851:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7859:6:8",
														"nodeType": "YulTypedName",
														"src": "7859:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7870:4:8",
														"nodeType": "YulTypedName",
														"src": "7870:4:8",
														"type": ""
													}
												],
												"src": "7721:442:8"
											},
											{
												"body": {
													"nativeSrc": "8267:124:8",
													"nodeType": "YulBlock",
													"src": "8267:124:8",
													"statements": [
														{
															"nativeSrc": "8277:26:8",
															"nodeType": "YulAssignment",
															"src": "8277:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8289:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8289:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8300:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8300:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8285:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8285:3:8"
																},
																"nativeSrc": "8285:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8285:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8277:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8277:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8357:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8357:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8370:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8370:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8381:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8381:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8366:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8366:3:8"
																		},
																		"nativeSrc": "8366:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8366:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8313:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8313:43:8"
																},
																"nativeSrc": "8313:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8313:71:8"
															},
															"nativeSrc": "8313:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8313:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8169:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8239:9:8",
														"nodeType": "YulTypedName",
														"src": "8239:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8251:6:8",
														"nodeType": "YulTypedName",
														"src": "8251:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8262:4:8",
														"nodeType": "YulTypedName",
														"src": "8262:4:8",
														"type": ""
													}
												],
												"src": "8169:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516130a03803806130a0833981810160405281019061003191906109a9565b816040518060400160405280600581526020017f446567656e0000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f44474e000000000000000000000000000000000000000000000000000000000081525081600390816100ad9190610c18565b5080600490816100bd9190610c18565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610cf6565b60405180910390fd5b61013f816104cd60201b60201c565b50610150828261059060201b60201c565b60405180606001604052806040518060400160405280601081526020017f4e6f76696365204e6176696761746f72000000000000000000000000000000008152508152602001600160ff168152602001606481525060065f600160ff1681526020019081526020015f205f820151815f0190816101cd9190610c18565b506020820151816001015f6101000a81548160ff021916908360ff1602179055506040820151816002015590505060405180606001604052806040518060400160405280600f81526020017f4d7974686963204d6176657269636b00000000000000000000000000000000008152508152602001600260ff1681526020016102bc81525060065f600260ff1681526020019081526020015f205f820151815f0190816102799190610c18565b506020820151816001015f6101000a81548160ff021916908360ff1602179055506040820151816002015590505060405180606001604052806040518060400160405280601181526020017f43656c65737469616c20437275736865720000000000000000000000000000008152508152602001600360ff1681526020016104b081525060065f600360ff1681526020019081526020015f205f820151815f0190816103259190610c18565b506020820151816001015f6101000a81548160ff021916908360ff1602179055506040820151816002015590505060405180606001604052806040518060400160405280600a81526020017f41737472616c20416365000000000000000000000000000000000000000000008152508152602001600460ff16815260200161089881525060065f600460ff1681526020019081526020015f205f820151815f0190816103d19190610c18565b506020820151816001015f6101000a81548160ff021916908360ff1602179055506040820151816002015590505060405180606001604052806040518060400160405280601081526020017f446976696e6520446f6d696e61746f72000000000000000000000000000000008152508152602001600560ff16815260200161096081525060065f600560ff1681526020019081526020015f205f820151815f01908161047d9190610c18565b506020820151816001015f6101000a81548160ff021916908360ff16021790555060408201518160020155905050600660075f6101000a81548160ff021916908360ff1602179055505050610dcc565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61059e6105b260201b60201c565b6105ae828261064b60201b60201c565b5050565b6105c06106d060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166105e46106d760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146106495761060d6106d060201b60201c565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106409190610cf6565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106bb575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106b29190610cf6565b60405180910390fd5b6106cc5f83836106ff60201b60201c565b5050565b5f33905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361074f578060025f8282546107439190610d3c565b9250508190555061081d565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156107d8578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016107cf93929190610d7e565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610864578060025f82825403925050819055506108ae565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161090b9190610db3565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109458261091c565b9050919050565b6109558161093b565b811461095f575f80fd5b50565b5f815190506109708161094c565b92915050565b5f819050919050565b61098881610976565b8114610992575f80fd5b50565b5f815190506109a38161097f565b92915050565b5f80604083850312156109bf576109be610918565b5b5f6109cc85828601610962565b92505060206109dd85828601610995565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610a6257607f821691505b602082108103610a7557610a74610a1e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610ad77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a9c565b610ae18683610a9c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f610b1c610b17610b1284610976565b610af9565b610976565b9050919050565b5f819050919050565b610b3583610b02565b610b49610b4182610b23565b848454610aa8565b825550505050565b5f90565b610b5d610b51565b610b68818484610b2c565b505050565b5b81811015610b8b57610b805f82610b55565b600181019050610b6e565b5050565b601f821115610bd057610ba181610a7b565b610baa84610a8d565b81016020851015610bb9578190505b610bcd610bc585610a8d565b830182610b6d565b50505b505050565b5f82821c905092915050565b5f610bf05f1984600802610bd5565b1980831691505092915050565b5f610c088383610be1565b9150826002028217905092915050565b610c21826109e7565b67ffffffffffffffff811115610c3a57610c396109f1565b5b610c448254610a4b565b610c4f828285610b8f565b5f60209050601f831160018114610c80575f8415610c6e578287015190505b610c788582610bfd565b865550610cdf565b601f198416610c8e86610a7b565b5f5b82811015610cb557848901518255600182019150602085019450602081019050610c90565b86831015610cd25784890151610cce601f891682610be1565b8355505b6001600288020188555050505b505050505050565b610cf08161093b565b82525050565b5f602082019050610d095f830184610ce7565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d4682610976565b9150610d5183610976565b9250828201905080821115610d6957610d68610d0f565b5b92915050565b610d7881610976565b82525050565b5f606082019050610d915f830186610ce7565b610d9e6020830185610d6f565b610dab6040830184610d6f565b949350505050565b5f602082019050610dc65f830184610d6f565b92915050565b6122c780610dd95f395ff3fe608060405234801561000f575f80fd5b5060043610610156575f3560e01c8063715018a6116100c1578063af3bcb7d1161007a578063af3bcb7d1461039e578063dd62ed3e146103ba578063ea5e65e0146103ea578063f2fde38b14610406578063f5112f8714610422578063fbd1a97b1461042c57610156565b8063715018a6146102f057806379cc6790146102fa5780637b47ec1a146103165780638da5cb5b1461033257806395d89b4114610350578063a9059cbb1461036e57610156565b806323b872dd1161011357806323b872dd1461021e578063313ce5671461024e57806340c10f191461026c57806342966c681461028857806362d6bbdf146102a457806370a08231146102c057610156565b806306fdde031461015a578063095ea7b3146101785780631072cbea146101a857806312065fe0146101c457806317d70f7c146101e257806318160ddd14610200575b5f80fd5b61016261045e565b60405161016f919061153c565b60405180910390f35b610192600480360381019061018d91906115fa565b6104ee565b60405161019f9190611652565b60405180910390f35b6101c260048036038101906101bd91906115fa565b610510565b005b6101cc61056a565b6040516101d9919061167a565b60405180910390f35b6101ea610579565b6040516101f791906116ae565b60405180910390f35b61020861058b565b604051610215919061167a565b60405180910390f35b610238600480360381019061023391906116c7565b610594565b6040516102459190611652565b60405180910390f35b6102566105c2565b60405161026391906116ae565b60405180910390f35b610286600480360381019061028191906115fa565b6105c6565b005b6102a2600480360381019061029d9190611717565b6105dc565b005b6102be60048036038101906102b9919061186e565b6105f0565b005b6102da60048036038101906102d591906118c8565b6106c5565b6040516102e7919061167a565b60405180910390f35b6102f861070a565b005b610314600480360381019061030f91906115fa565b61071d565b005b610330600480360381019061032b9190611717565b61073d565b005b61033a610794565b6040516103479190611902565b60405180910390f35b6103586107bc565b604051610365919061153c565b60405180910390f35b610388600480360381019061038391906115fa565b61084c565b6040516103959190611652565b60405180910390f35b6103b860048036038101906103b39190611945565b61086e565b005b6103d460048036038101906103cf9190611970565b6109d9565b6040516103e1919061167a565b60405180910390f35b61040460048036038101906103ff91906119d8565b610a5b565b005b610420600480360381019061041b91906118c8565b610b6e565b005b61042a610bf2565b005b61044660048036038101906104419190611945565b610c49565b60405161045593929190611a16565b60405180910390f35b60606003805461046d90611a7f565b80601f016020809104026020016040519081016040528092919081815260200182805461049990611a7f565b80156104e45780601f106104bb576101008083540402835291602001916104e4565b820191905f5260205f20905b8154815290600101906020018083116104c757829003601f168201915b5050505050905090565b5f806104f8610d01565b9050610505818585610d08565b600191505092915050565b8061051a336106c5565b101561055b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055290611af9565b60405180910390fd5b610565828261084c565b505050565b5f610574336106c5565b905090565b60075f9054906101000a900460ff1681565b5f600254905090565b5f8061059e610d01565b90506105ab858285610d1a565b6105b6858585610dac565b60019150509392505050565b5f90565b6105ce610e9c565b6105d88282610f23565b5050565b6105ed6105e7610d01565b82610fa2565b50565b6105f8610e9c565b604051806060016040528083815260200160075f9054906101000a900460ff1660ff1681526020018281525060065f60075f9054906101000a900460ff1660ff1660ff1681526020019081526020015f205f820151815f01908161065c9190611cb4565b506020820151816001015f6101000a81548160ff021916908360ff1602179055506040820151816002015590505060075f81819054906101000a900460ff16809291906106a890611db0565b91906101000a81548160ff021916908360ff160217905550505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610712610e9c565b61071b5f611021565b565b61072f82610729610d01565b83610d1a565b6107398282610fa2565b5050565b80610747336106c5565b1015610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077f90611e22565b60405180910390fd5b610791816105dc565b50565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546107cb90611a7f565b80601f01602080910402602001604051908101604052809291908181526020018280546107f790611a7f565b80156108425780601f1061081957610100808354040283529160200191610842565b820191905f5260205f20905b81548152906001019060200180831161082557829003601f168201915b5050505050905090565b5f80610856610d01565b9050610863818585610dac565b600191505092915050565b5f60065f8360ff1660ff1681526020019081526020015f2060020154036108ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c190611e8a565b60405180910390fd5b60065f8260ff1660ff1681526020019081526020015f20600201546108ee336106c5565b101561092f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092690611af9565b60405180910390fd5b61095260065f8360ff1660ff1681526020019081526020015f20600201546105dc565b3373ffffffffffffffffffffffffffffffffffffffff167f8bedd141782c49139782bd92bd7a760a0bcb544ffecfd2b25f00366fae06598e8260065f8560ff1660ff1681526020019081526020015f205f0160065f8660ff1660ff1681526020019081526020015f20600201546040516109ce93929190611f29565b60405180910390a250565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f600a4233604051602001610a71929190611fca565b604051602081830303815290604052805190602001205f1c610a939190612022565b905060058110151583151503610b0f57610ab933600284610ab49190612052565b610f23565b3373ffffffffffffffffffffffffffffffffffffffff167fd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587826001604051610b029291906120dd565b60405180910390a2610b69565b610b18826105dc565b3373ffffffffffffffffffffffffffffffffffffffff167fd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587825f604051610b60929190612161565b60405180910390a25b505050565b610b76610e9c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610be6575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610bdd9190611902565b60405180910390fd5b610bef81611021565b50565b5f610bfc336106c5565b14610c3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c339061220b565b60405180910390fd5b610c47336032610f23565b565b6006602052805f5260405f205f91509050805f018054610c6890611a7f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9490611a7f565b8015610cdf5780601f10610cb657610100808354040283529160200191610cdf565b820191905f5260205f20905b815481529060010190602001808311610cc257829003601f168201915b505050505090806001015f9054906101000a900460ff16908060020154905083565b5f33905090565b610d1583838360016110e4565b505050565b5f610d2584846109d9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610da65781811015610d97578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610d8e93929190612229565b60405180910390fd5b610da584848484035f6110e4565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e1c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e139190611902565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e8c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e839190611902565b60405180910390fd5b610e978383836112b3565b505050565b610ea4610d01565b73ffffffffffffffffffffffffffffffffffffffff16610ec2610794565b73ffffffffffffffffffffffffffffffffffffffff1614610f2157610ee5610d01565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f189190611902565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f93575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f8a9190611902565b60405180910390fd5b610f9e5f83836112b3565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611012575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110099190611902565b60405180910390fd5b61101d825f836112b3565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611154575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161114b9190611902565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111c4575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016111bb9190611902565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156112ad578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516112a4919061167a565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611303578060025f8282546112f7919061225e565b925050819055506113d1565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561138c578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161138393929190612229565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611418578060025f8282540392505081905550611462565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114bf919061167a565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61150e826114cc565b61151881856114d6565b93506115288185602086016114e6565b611531816114f4565b840191505092915050565b5f6020820190508181035f8301526115548184611504565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115968261156d565b9050919050565b6115a68161158c565b81146115b0575f80fd5b50565b5f813590506115c18161159d565b92915050565b5f819050919050565b6115d9816115c7565b81146115e3575f80fd5b50565b5f813590506115f4816115d0565b92915050565b5f80604083850312156116105761160f611565565b5b5f61161d858286016115b3565b925050602061162e858286016115e6565b9150509250929050565b5f8115159050919050565b61164c81611638565b82525050565b5f6020820190506116655f830184611643565b92915050565b611674816115c7565b82525050565b5f60208201905061168d5f83018461166b565b92915050565b5f60ff82169050919050565b6116a881611693565b82525050565b5f6020820190506116c15f83018461169f565b92915050565b5f805f606084860312156116de576116dd611565565b5b5f6116eb868287016115b3565b93505060206116fc868287016115b3565b925050604061170d868287016115e6565b9150509250925092565b5f6020828403121561172c5761172b611565565b5b5f611739848285016115e6565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611780826114f4565b810181811067ffffffffffffffff8211171561179f5761179e61174a565b5b80604052505050565b5f6117b161155c565b90506117bd8282611777565b919050565b5f67ffffffffffffffff8211156117dc576117db61174a565b5b6117e5826114f4565b9050602081019050919050565b828183375f83830152505050565b5f61181261180d846117c2565b6117a8565b90508281526020810184848401111561182e5761182d611746565b5b6118398482856117f2565b509392505050565b5f82601f83011261185557611854611742565b5b8135611865848260208601611800565b91505092915050565b5f806040838503121561188457611883611565565b5b5f83013567ffffffffffffffff8111156118a1576118a0611569565b5b6118ad85828601611841565b92505060206118be858286016115e6565b9150509250929050565b5f602082840312156118dd576118dc611565565b5b5f6118ea848285016115b3565b91505092915050565b6118fc8161158c565b82525050565b5f6020820190506119155f8301846118f3565b92915050565b61192481611693565b811461192e575f80fd5b50565b5f8135905061193f8161191b565b92915050565b5f6020828403121561195a57611959611565565b5b5f61196784828501611931565b91505092915050565b5f806040838503121561198657611985611565565b5b5f611993858286016115b3565b92505060206119a4858286016115b3565b9150509250929050565b6119b781611638565b81146119c1575f80fd5b50565b5f813590506119d2816119ae565b92915050565b5f80604083850312156119ee576119ed611565565b5b5f6119fb858286016119c4565b9250506020611a0c858286016115e6565b9150509250929050565b5f6060820190508181035f830152611a2e8186611504565b9050611a3d602083018561169f565b611a4a604083018461166b565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a9657607f821691505b602082108103611aa957611aa8611a52565b5b50919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611ae36014836114d6565b9150611aee82611aaf565b602082019050919050565b5f6020820190508181035f830152611b1081611ad7565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611b737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611b38565b611b7d8683611b38565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611bb8611bb3611bae846115c7565b611b95565b6115c7565b9050919050565b5f819050919050565b611bd183611b9e565b611be5611bdd82611bbf565b848454611b44565b825550505050565b5f90565b611bf9611bed565b611c04818484611bc8565b505050565b5b81811015611c2757611c1c5f82611bf1565b600181019050611c0a565b5050565b601f821115611c6c57611c3d81611b17565b611c4684611b29565b81016020851015611c55578190505b611c69611c6185611b29565b830182611c09565b50505b505050565b5f82821c905092915050565b5f611c8c5f1984600802611c71565b1980831691505092915050565b5f611ca48383611c7d565b9150826002028217905092915050565b611cbd826114cc565b67ffffffffffffffff811115611cd657611cd561174a565b5b611ce08254611a7f565b611ceb828285611c2b565b5f60209050601f831160018114611d1c575f8415611d0a578287015190505b611d148582611c99565b865550611d7b565b601f198416611d2a86611b17565b5f5b82811015611d5157848901518255600182019150602085019450602081019050611d2c565b86831015611d6e5784890151611d6a601f891682611c7d565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611dba82611693565b915060ff8203611dcd57611dcc611d83565b5b600182019050919050565b7f496e73756666696369656e7420616d6f756e74000000000000000000000000005f82015250565b5f611e0c6013836114d6565b9150611e1782611dd8565b602082019050919050565b5f6020820190508181035f830152611e3981611e00565b9050919050565b7f4974656d206e6f7420666f756e640000000000000000000000000000000000005f82015250565b5f611e74600e836114d6565b9150611e7f82611e40565b602082019050919050565b5f6020820190508181035f830152611ea181611e68565b9050919050565b5f8154611eb481611a7f565b611ebe81866114d6565b9450600182165f8114611ed85760018114611eee57611f20565b60ff198316865281151560200286019350611f20565b611ef785611b17565b5f5b83811015611f1857815481890152600182019150602081019050611ef9565b808801955050505b50505092915050565b5f606082019050611f3c5f83018661169f565b8181036020830152611f4e8185611ea8565b9050611f5d604083018461166b565b949350505050565b5f819050919050565b611f7f611f7a826115c7565b611f65565b82525050565b5f8160601b9050919050565b5f611f9b82611f85565b9050919050565b5f611fac82611f91565b9050919050565b611fc4611fbf8261158c565b611fa2565b82525050565b5f611fd58285611f6e565b602082019150611fe58284611fb3565b6014820191508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61202c826115c7565b9150612037836115c7565b92508261204757612046611ff5565b5b828206905092915050565b5f61205c826115c7565b9150612067836115c7565b9250828202612075816115c7565b9150828204841483151761208c5761208b611d83565b5b5092915050565b7f776f6e00000000000000000000000000000000000000000000000000000000005f82015250565b5f6120c76003836114d6565b91506120d282612093565b602082019050919050565b5f6060820190506120f05f83018561166b565b6120fd6020830184611643565b818103604083015261210e816120bb565b90509392505050565b7f6c6f7374000000000000000000000000000000000000000000000000000000005f82015250565b5f61214b6004836114d6565b915061215682612117565b602082019050919050565b5f6060820190506121745f83018561166b565b6121816020830184611643565b81810360408301526121928161213f565b90509392505050565b7f596f7527766520616c726561647920636c61696d656420796f75722077656c635f8201527f6f6d6520626f6e75730000000000000000000000000000000000000000000000602082015250565b5f6121f56029836114d6565b91506122008261219b565b604082019050919050565b5f6020820190508181035f830152612222816121e9565b9050919050565b5f60608201905061223c5f8301866118f3565b612249602083018561166b565b612256604083018461166b565b949350505050565b5f612268826115c7565b9150612273836115c7565b925082820190508082111561228b5761228a611d83565b5b9291505056fea2646970667358221220734a6cf9e06dc311b3d7f15bc77b99713861ae9e2851185954254059e2e24ffd64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x30A0 CODESIZE SUB DUP1 PUSH2 0x30A0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x9A9 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446567656E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44474E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x4CD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x150 DUP3 DUP3 PUSH2 0x590 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E6F76696365204E6176696761746F7200000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D7974686963204D6176657269636B0000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BC DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43656C65737469616C2043727573686572000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4B0 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x41737472616C2041636500000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x898 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x4 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446976696E6520446F6D696E61746F7200000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x960 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x47D SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0xDCC JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x5B2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x5AE DUP3 DUP3 PUSH2 0x64B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5C0 PUSH2 0x6D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E4 PUSH2 0x6D7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x649 JUMPI PUSH2 0x60D PUSH2 0x6D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x640 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6BB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CC PUSH0 DUP4 DUP4 PUSH2 0x6FF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x74F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x743 SWAP2 SWAP1 PUSH2 0xD3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x81D JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x7D8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x864 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8AE JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x90B SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x945 DUP3 PUSH2 0x91C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x955 DUP2 PUSH2 0x93B JUMP JUMPDEST DUP2 EQ PUSH2 0x95F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x970 DUP2 PUSH2 0x94C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x988 DUP2 PUSH2 0x976 JUMP JUMPDEST DUP2 EQ PUSH2 0x992 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x9A3 DUP2 PUSH2 0x97F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9BF JUMPI PUSH2 0x9BE PUSH2 0x918 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9CC DUP6 DUP3 DUP7 ADD PUSH2 0x962 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9DD DUP6 DUP3 DUP7 ADD PUSH2 0x995 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xA62 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA75 JUMPI PUSH2 0xA74 PUSH2 0xA1E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xAD7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xAE1 DUP7 DUP4 PUSH2 0xA9C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB1C PUSH2 0xB17 PUSH2 0xB12 DUP5 PUSH2 0x976 JUMP JUMPDEST PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x976 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB35 DUP4 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0xB49 PUSH2 0xB41 DUP3 PUSH2 0xB23 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xAA8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0xB5D PUSH2 0xB51 JUMP JUMPDEST PUSH2 0xB68 DUP2 DUP5 DUP5 PUSH2 0xB2C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB8B JUMPI PUSH2 0xB80 PUSH0 DUP3 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xB6E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xBD0 JUMPI PUSH2 0xBA1 DUP2 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0xBAA DUP5 PUSH2 0xA8D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xBB9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xBCD PUSH2 0xBC5 DUP6 PUSH2 0xA8D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xB6D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBF0 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xBD5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC08 DUP4 DUP4 PUSH2 0xBE1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC21 DUP3 PUSH2 0x9E7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC3A JUMPI PUSH2 0xC39 PUSH2 0x9F1 JUMP JUMPDEST JUMPDEST PUSH2 0xC44 DUP3 SLOAD PUSH2 0xA4B JUMP JUMPDEST PUSH2 0xC4F DUP3 DUP3 DUP6 PUSH2 0xB8F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xC80 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xC6E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xC78 DUP6 DUP3 PUSH2 0xBFD JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xC8E DUP7 PUSH2 0xA7B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xCB5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC90 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xCD2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xCCE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xBE1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0x93B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD09 PUSH0 DUP4 ADD DUP5 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD46 DUP3 PUSH2 0x976 JUMP JUMPDEST SWAP2 POP PUSH2 0xD51 DUP4 PUSH2 0x976 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD69 JUMPI PUSH2 0xD68 PUSH2 0xD0F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD78 DUP2 PUSH2 0x976 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD91 PUSH0 DUP4 ADD DUP7 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0xD9E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD6F JUMP JUMPDEST PUSH2 0xDAB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD6F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDC6 PUSH0 DUP4 ADD DUP5 PUSH2 0xD6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22C7 DUP1 PUSH2 0xDD9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xAF3BCB7D GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xAF3BCB7D EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xEA5E65E0 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xF5112F87 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xFBD1A97B EQ PUSH2 0x42C JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x7B47EC1A EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x36E JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x62D6BBDF EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C0 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x1072CBEA EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x200 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x510 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x5C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1717 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH2 0x5F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0x70A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1717 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33A PUSH2 0x794 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x1945 JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x9D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x404 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x19D8 JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x420 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST PUSH2 0xB6E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42A PUSH2 0xBF2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x446 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1945 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x455 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x46D SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x499 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4F8 PUSH2 0xD01 JUMP JUMPDEST SWAP1 POP PUSH2 0x505 DUP2 DUP6 DUP6 PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x51A CALLER PUSH2 0x6C5 JUMP JUMPDEST LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x552 SWAP1 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x565 DUP3 DUP3 PUSH2 0x84C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x574 CALLER PUSH2 0x6C5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x59E PUSH2 0xD01 JUMP JUMPDEST SWAP1 POP PUSH2 0x5AB DUP6 DUP3 DUP6 PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x5B6 DUP6 DUP6 DUP6 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x5CE PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x5D8 DUP3 DUP3 PUSH2 0xF23 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5ED PUSH2 0x5E7 PUSH2 0xD01 JUMP JUMPDEST DUP3 PUSH2 0xFA2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5F8 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x7 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6A8 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x712 PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x71B PUSH0 PUSH2 0x1021 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x72F DUP3 PUSH2 0x729 PUSH2 0xD01 JUMP JUMPDEST DUP4 PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x739 DUP3 DUP3 PUSH2 0xFA2 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH2 0x747 CALLER PUSH2 0x6C5 JUMP JUMPDEST LT ISZERO PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77F SWAP1 PUSH2 0x1E22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x791 DUP2 PUSH2 0x5DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x7CB SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7F7 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x842 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x819 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x842 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x825 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x856 PUSH2 0xD01 JUMP JUMPDEST SWAP1 POP PUSH2 0x863 DUP2 DUP6 DUP6 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SUB PUSH2 0x8CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C1 SWAP1 PUSH2 0x1E8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x8EE CALLER PUSH2 0x6C5 JUMP JUMPDEST LT ISZERO PUSH2 0x92F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x926 SWAP1 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x952 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x5DC JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BEDD141782C49139782BD92BD7A760A0BCB544FFECFD2B25F00366FAE06598E DUP3 PUSH1 0x6 PUSH0 DUP6 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x6 PUSH0 DUP7 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x9CE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA71 SWAP3 SWAP2 SWAP1 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0xA93 SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 DUP2 LT ISZERO ISZERO DUP4 ISZERO ISZERO SUB PUSH2 0xB0F JUMPI PUSH2 0xAB9 CALLER PUSH1 0x2 DUP5 PUSH2 0xAB4 SWAP2 SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH2 0xF23 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xB02 SWAP3 SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0xB18 DUP3 PUSH2 0x5DC JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587 DUP3 PUSH0 PUSH1 0x40 MLOAD PUSH2 0xB60 SWAP3 SWAP2 SWAP1 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB76 PUSH2 0xE9C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDD SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBEF DUP2 PUSH2 0x1021 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xBFC CALLER PUSH2 0x6C5 JUMP JUMPDEST EQ PUSH2 0xC3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC33 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC47 CALLER PUSH1 0x32 PUSH2 0xF23 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0xC68 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC94 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCDF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCB6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCDF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCC2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD15 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10E4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD25 DUP5 DUP5 PUSH2 0x9D9 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xDA6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD97 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA5 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x10E4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE1C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE83 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE97 DUP4 DUP4 DUP4 PUSH2 0x12B3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xEA4 PUSH2 0xD01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEC2 PUSH2 0x794 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF21 JUMPI PUSH2 0xEE5 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF93 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8A SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF9E PUSH0 DUP4 DUP4 PUSH2 0x12B3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1012 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1009 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101D DUP3 PUSH0 DUP4 PUSH2 0x12B3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1154 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114B SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11C4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BB SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x12AD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12A4 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1303 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12F7 SWAP2 SWAP1 PUSH2 0x225E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x13D1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x138C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1383 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1418 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1462 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x14BF SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x150E DUP3 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0x1518 DUP2 DUP6 PUSH2 0x14D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1528 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14E6 JUMP JUMPDEST PUSH2 0x1531 DUP2 PUSH2 0x14F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1554 DUP2 DUP5 PUSH2 0x1504 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1596 DUP3 PUSH2 0x156D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A6 DUP2 PUSH2 0x158C JUMP JUMPDEST DUP2 EQ PUSH2 0x15B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15C1 DUP2 PUSH2 0x159D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15D9 DUP2 PUSH2 0x15C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x15E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15F4 DUP2 PUSH2 0x15D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1610 JUMPI PUSH2 0x160F PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x161D DUP6 DUP3 DUP7 ADD PUSH2 0x15B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x162E DUP6 DUP3 DUP7 ADD PUSH2 0x15E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x164C DUP2 PUSH2 0x1638 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1665 PUSH0 DUP4 ADD DUP5 PUSH2 0x1643 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1674 DUP2 PUSH2 0x15C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x168D PUSH0 DUP4 ADD DUP5 PUSH2 0x166B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A8 DUP2 PUSH2 0x1693 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C1 PUSH0 DUP4 ADD DUP5 PUSH2 0x169F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16DE JUMPI PUSH2 0x16DD PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16EB DUP7 DUP3 DUP8 ADD PUSH2 0x15B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16FC DUP7 DUP3 DUP8 ADD PUSH2 0x15B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x170D DUP7 DUP3 DUP8 ADD PUSH2 0x15E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x172C JUMPI PUSH2 0x172B PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1739 DUP5 DUP3 DUP6 ADD PUSH2 0x15E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1780 DUP3 PUSH2 0x14F4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x179F JUMPI PUSH2 0x179E PUSH2 0x174A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17B1 PUSH2 0x155C JUMP JUMPDEST SWAP1 POP PUSH2 0x17BD DUP3 DUP3 PUSH2 0x1777 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17DC JUMPI PUSH2 0x17DB PUSH2 0x174A JUMP JUMPDEST JUMPDEST PUSH2 0x17E5 DUP3 PUSH2 0x14F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1812 PUSH2 0x180D DUP5 PUSH2 0x17C2 JUMP JUMPDEST PUSH2 0x17A8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x182E JUMPI PUSH2 0x182D PUSH2 0x1746 JUMP JUMPDEST JUMPDEST PUSH2 0x1839 DUP5 DUP3 DUP6 PUSH2 0x17F2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1855 JUMPI PUSH2 0x1854 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1865 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1800 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1884 JUMPI PUSH2 0x1883 PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18A1 JUMPI PUSH2 0x18A0 PUSH2 0x1569 JUMP JUMPDEST JUMPDEST PUSH2 0x18AD DUP6 DUP3 DUP7 ADD PUSH2 0x1841 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18BE DUP6 DUP3 DUP7 ADD PUSH2 0x15E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18DD JUMPI PUSH2 0x18DC PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18EA DUP5 DUP3 DUP6 ADD PUSH2 0x15B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18FC DUP2 PUSH2 0x158C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1915 PUSH0 DUP4 ADD DUP5 PUSH2 0x18F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1924 DUP2 PUSH2 0x1693 JUMP JUMPDEST DUP2 EQ PUSH2 0x192E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x193F DUP2 PUSH2 0x191B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195A JUMPI PUSH2 0x1959 PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1967 DUP5 DUP3 DUP6 ADD PUSH2 0x1931 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1986 JUMPI PUSH2 0x1985 PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1993 DUP6 DUP3 DUP7 ADD PUSH2 0x15B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19A4 DUP6 DUP3 DUP7 ADD PUSH2 0x15B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B7 DUP2 PUSH2 0x1638 JUMP JUMPDEST DUP2 EQ PUSH2 0x19C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19D2 DUP2 PUSH2 0x19AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19EE JUMPI PUSH2 0x19ED PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19FB DUP6 DUP3 DUP7 ADD PUSH2 0x19C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A0C DUP6 DUP3 DUP7 ADD PUSH2 0x15E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A2E DUP2 DUP7 PUSH2 0x1504 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A3D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x169F JUMP JUMPDEST PUSH2 0x1A4A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x166B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A96 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AA9 JUMPI PUSH2 0x1AA8 PUSH2 0x1A52 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE3 PUSH1 0x14 DUP4 PUSH2 0x14D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AEE DUP3 PUSH2 0x1AAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B10 DUP2 PUSH2 0x1AD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1B73 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1B38 JUMP JUMPDEST PUSH2 0x1B7D DUP7 DUP4 PUSH2 0x1B38 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BB8 PUSH2 0x1BB3 PUSH2 0x1BAE DUP5 PUSH2 0x15C7 JUMP JUMPDEST PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0x15C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD1 DUP4 PUSH2 0x1B9E JUMP JUMPDEST PUSH2 0x1BE5 PUSH2 0x1BDD DUP3 PUSH2 0x1BBF JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1B44 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1BF9 PUSH2 0x1BED JUMP JUMPDEST PUSH2 0x1C04 DUP2 DUP5 DUP5 PUSH2 0x1BC8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C27 JUMPI PUSH2 0x1C1C PUSH0 DUP3 PUSH2 0x1BF1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C0A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1C6C JUMPI PUSH2 0x1C3D DUP2 PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0x1C46 DUP5 PUSH2 0x1B29 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1C55 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1C69 PUSH2 0x1C61 DUP6 PUSH2 0x1B29 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1C09 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C8C PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1C71 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA4 DUP4 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CBD DUP3 PUSH2 0x14CC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CD6 JUMPI PUSH2 0x1CD5 PUSH2 0x174A JUMP JUMPDEST JUMPDEST PUSH2 0x1CE0 DUP3 SLOAD PUSH2 0x1A7F JUMP JUMPDEST PUSH2 0x1CEB DUP3 DUP3 DUP6 PUSH2 0x1C2B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1D1C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1D0A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1D14 DUP6 DUP3 PUSH2 0x1C99 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1D7B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1D2A DUP7 PUSH2 0x1B17 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D51 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D2C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1D6E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1D6A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1C7D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DBA DUP3 PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x1DCD JUMPI PUSH2 0x1DCC PUSH2 0x1D83 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616D6F756E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0C PUSH1 0x13 DUP4 PUSH2 0x14D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E17 DUP3 PUSH2 0x1DD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E39 DUP2 PUSH2 0x1E00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4974656D206E6F7420666F756E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E74 PUSH1 0xE DUP4 PUSH2 0x14D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7F DUP3 PUSH2 0x1E40 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EA1 DUP2 PUSH2 0x1E68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x1EB4 DUP2 PUSH2 0x1A7F JUMP JUMPDEST PUSH2 0x1EBE DUP2 DUP7 PUSH2 0x14D6 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x1ED8 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1EEE JUMPI PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x1F20 JUMP JUMPDEST PUSH2 0x1EF7 DUP6 PUSH2 0x1B17 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F18 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EF9 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F3C PUSH0 DUP4 ADD DUP7 PUSH2 0x169F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1F4E DUP2 DUP6 PUSH2 0x1EA8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F5D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x166B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F7F PUSH2 0x1F7A DUP3 PUSH2 0x15C7 JUMP JUMPDEST PUSH2 0x1F65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9B DUP3 PUSH2 0x1F85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FAC DUP3 PUSH2 0x1F91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC4 PUSH2 0x1FBF DUP3 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x1FA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FD5 DUP3 DUP6 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1FE5 DUP3 DUP5 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x202C DUP3 PUSH2 0x15C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2037 DUP4 PUSH2 0x15C7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2047 JUMPI PUSH2 0x2046 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x205C DUP3 PUSH2 0x15C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2067 DUP4 PUSH2 0x15C7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2075 DUP2 PUSH2 0x15C7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x208C JUMPI PUSH2 0x208B PUSH2 0x1D83 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x776F6E0000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20C7 PUSH1 0x3 DUP4 PUSH2 0x14D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D2 DUP3 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20F0 PUSH0 DUP4 ADD DUP6 PUSH2 0x166B JUMP JUMPDEST PUSH2 0x20FD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1643 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x210E DUP2 PUSH2 0x20BB JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6C6F737400000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x214B PUSH1 0x4 DUP4 PUSH2 0x14D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2156 DUP3 PUSH2 0x2117 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2174 PUSH0 DUP4 ADD DUP6 PUSH2 0x166B JUMP JUMPDEST PUSH2 0x2181 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1643 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2192 DUP2 PUSH2 0x213F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x596F7527766520616C726561647920636C61696D656420796F75722077656C63 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6D6520626F6E75730000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21F5 PUSH1 0x29 DUP4 PUSH2 0x14D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2200 DUP3 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2222 DUP2 PUSH2 0x21E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x223C PUSH0 DUP4 ADD DUP7 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x2249 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x166B JUMP JUMPDEST PUSH2 0x2256 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x166B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2268 DUP3 PUSH2 0x15C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2273 DUP4 PUSH2 0x15C7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x228B JUMPI PUSH2 0x228A PUSH2 0x1D83 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x4A6CF9E06DC311B3D7F15BC77B99713861AE9E28 MLOAD XOR MSIZE SLOAD 0x25 BLOCKHASH MSIZE 0xE2 0xE2 0x4F REVERT PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "785:2815:7:-:0;;;1199:437;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1282:12;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1307:31:7::2;1312:12;1326:11;1307:4;;;:31;;:::i;:::-;1370;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;1394:1;1370:31;;;;;;1397:3;1370:31;;::::0;1359:5:::2;:8;1365:1;1359:8;;;;;;;;;;;;;:42;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1421:31;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;1445:1;1421:31;;;;;;1448:3;1421:31;;::::0;1412:5:::2;:8;1418:1;1412:8;;;;;;;;;;;;;:40;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1472:34;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;1498:1;1472:34;;;;;;1501:4;1472:34;;::::0;1463:5:::2;:8;1469:1;1463:8;;;;;;;;;;;;;:43;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1526:27;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;1545:1;1526:27;;;;;;1548:4;1526:27;;::::0;1517:5:::2;:8;1523:1;1517:8;;;;;;;;;;;;;:36;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1573:33;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;1598:1;1573:33;;;;;;1601:4;1573:33;;::::0;1564:5:::2;:8;1570:1;1564:8;;;;;;;;;;;;;:42;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1625:1;1617:7;;:9;;;;;;;;;;;;;;;;;;1199:437:::0;;785:2815;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1760:95:7:-;1531:13:0;:11;;;:13;;:::i;:::-;1830:17:7::1;1836:2;1840:6;1830:5;;;:17;;:::i;:::-;1760:95:::0;;:::o;1796:162:0:-;1866:12;:10;;;:12;;:::i;:::-;1855:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1851:101;;1928:12;:10;;;:12;;:::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;6271:1107:2:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:99::-;1770:6;1804:5;1798:12;1788:22;;1718:99;;;:::o;1823:180::-;1871:77;1868:1;1861:88;1968:4;1965:1;1958:15;1992:4;1989:1;1982:15;2009:180;2057:77;2054:1;2047:88;2154:4;2151:1;2144:15;2178:4;2175:1;2168:15;2195:320;2239:6;2276:1;2270:4;2266:12;2256:22;;2323:1;2317:4;2313:12;2344:18;2334:81;;2400:4;2392:6;2388:17;2378:27;;2334:81;2462:2;2454:6;2451:14;2431:18;2428:38;2425:84;;2481:18;;:::i;:::-;2425:84;2246:269;2195:320;;;:::o;2521:141::-;2570:4;2593:3;2585:11;;2616:3;2613:1;2606:14;2650:4;2647:1;2637:18;2629:26;;2521:141;;;:::o;2668:93::-;2705:6;2752:2;2747;2740:5;2736:14;2732:23;2722:33;;2668:93;;;:::o;2767:107::-;2811:8;2861:5;2855:4;2851:16;2830:37;;2767:107;;;;:::o;2880:393::-;2949:6;2999:1;2987:10;2983:18;3022:97;3052:66;3041:9;3022:97;:::i;:::-;3140:39;3170:8;3159:9;3140:39;:::i;:::-;3128:51;;3212:4;3208:9;3201:5;3197:21;3188:30;;3261:4;3251:8;3247:19;3240:5;3237:30;3227:40;;2956:317;;2880:393;;;;;:::o;3279:60::-;3307:3;3328:5;3321:12;;3279:60;;;:::o;3345:142::-;3395:9;3428:53;3446:34;3455:24;3473:5;3455:24;:::i;:::-;3446:34;:::i;:::-;3428:53;:::i;:::-;3415:66;;3345:142;;;:::o;3493:75::-;3536:3;3557:5;3550:12;;3493:75;;;:::o;3574:269::-;3684:39;3715:7;3684:39;:::i;:::-;3745:91;3794:41;3818:16;3794:41;:::i;:::-;3786:6;3779:4;3773:11;3745:91;:::i;:::-;3739:4;3732:105;3650:193;3574:269;;;:::o;3849:73::-;3894:3;3849:73;:::o;3928:189::-;4005:32;;:::i;:::-;4046:65;4104:6;4096;4090:4;4046:65;:::i;:::-;3981:136;3928:189;;:::o;4123:186::-;4183:120;4200:3;4193:5;4190:14;4183:120;;;4254:39;4291:1;4284:5;4254:39;:::i;:::-;4227:1;4220:5;4216:13;4207:22;;4183:120;;;4123:186;;:::o;4315:543::-;4416:2;4411:3;4408:11;4405:446;;;4450:38;4482:5;4450:38;:::i;:::-;4534:29;4552:10;4534:29;:::i;:::-;4524:8;4520:44;4717:2;4705:10;4702:18;4699:49;;;4738:8;4723:23;;4699:49;4761:80;4817:22;4835:3;4817:22;:::i;:::-;4807:8;4803:37;4790:11;4761:80;:::i;:::-;4420:431;;4405:446;4315:543;;;:::o;4864:117::-;4918:8;4968:5;4962:4;4958:16;4937:37;;4864:117;;;;:::o;4987:169::-;5031:6;5064:51;5112:1;5108:6;5100:5;5097:1;5093:13;5064:51;:::i;:::-;5060:56;5145:4;5139;5135:15;5125:25;;5038:118;4987:169;;;;:::o;5161:295::-;5237:4;5383:29;5408:3;5402:4;5383:29;:::i;:::-;5375:37;;5445:3;5442:1;5438:11;5432:4;5429:21;5421:29;;5161:295;;;;:::o;5461:1395::-;5578:37;5611:3;5578:37;:::i;:::-;5680:18;5672:6;5669:30;5666:56;;;5702:18;;:::i;:::-;5666:56;5746:38;5778:4;5772:11;5746:38;:::i;:::-;5831:67;5891:6;5883;5877:4;5831:67;:::i;:::-;5925:1;5949:4;5936:17;;5981:2;5973:6;5970:14;5998:1;5993:618;;;;6655:1;6672:6;6669:77;;;6721:9;6716:3;6712:19;6706:26;6697:35;;6669:77;6772:67;6832:6;6825:5;6772:67;:::i;:::-;6766:4;6759:81;6628:222;5963:887;;5993:618;6045:4;6041:9;6033:6;6029:22;6079:37;6111:4;6079:37;:::i;:::-;6138:1;6152:208;6166:7;6163:1;6160:14;6152:208;;;6245:9;6240:3;6236:19;6230:26;6222:6;6215:42;6296:1;6288:6;6284:14;6274:24;;6343:2;6332:9;6328:18;6315:31;;6189:4;6186:1;6182:12;6177:17;;6152:208;;;6388:6;6379:7;6376:19;6373:179;;;6446:9;6441:3;6437:19;6431:26;6489:48;6531:4;6523:6;6519:17;6508:9;6489:48;:::i;:::-;6481:6;6474:64;6396:156;6373:179;6598:1;6594;6586:6;6582:14;6578:22;6572:4;6565:36;6000:611;;;5963:887;;5553:1303;;;5461:1395;;:::o;6862:118::-;6949:24;6967:5;6949:24;:::i;:::-;6944:3;6937:37;6862:118;;:::o;6986:222::-;7079:4;7117:2;7106:9;7102:18;7094:26;;7130:71;7198:1;7187:9;7183:17;7174:6;7130:71;:::i;:::-;6986:222;;;;:::o;7214:180::-;7262:77;7259:1;7252:88;7359:4;7356:1;7349:15;7383:4;7380:1;7373:15;7400:191;7440:3;7459:20;7477:1;7459:20;:::i;:::-;7454:25;;7493:20;7511:1;7493:20;:::i;:::-;7488:25;;7536:1;7533;7529:9;7522:16;;7557:3;7554:1;7551:10;7548:36;;;7564:18;;:::i;:::-;7548:36;7400:191;;;;:::o;7597:118::-;7684:24;7702:5;7684:24;:::i;:::-;7679:3;7672:37;7597:118;;:::o;7721:442::-;7870:4;7908:2;7897:9;7893:18;7885:26;;7921:71;7989:1;7978:9;7974:17;7965:6;7921:71;:::i;:::-;8002:72;8070:2;8059:9;8055:18;8046:6;8002:72;:::i;:::-;8084;8152:2;8141:9;8137:18;8128:6;8084:72;:::i;:::-;7721:442;;;;;;:::o;8169:222::-;8262:4;8300:2;8289:9;8285:18;8277:26;;8313:71;8381:1;8370:9;8366:17;8357:6;8313:71;:::i;:::-;8169:222;;;;:::o;785:2815:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 3336,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4324,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 4002,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3740,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 3875,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": 3329,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3354,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4129,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3500,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4787,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addItem_1188": {
									"entryPoint": 1520,
									"id": 1188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2521,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1262,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1733,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_922": {
									"entryPoint": 1821,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burnToken_1331": {
									"entryPoint": 1853,
									"id": 1331,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_901": {
									"entryPoint": 1500,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_1107": {
									"entryPoint": 1474,
									"id": 1107,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBalance_1311": {
									"entryPoint": 1386,
									"id": 1311,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isLessThanFive_1250": {
									"entryPoint": 2651,
									"id": 1250,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@items_1002": {
									"entryPoint": 3145,
									"id": 1002,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1122": {
									"entryPoint": 1478,
									"id": 1122,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1118,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1940,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@purchaseItem_1300": {
									"entryPoint": 2158,
									"id": 1300,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1802,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1980,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenId_1004": {
									"entryPoint": 1401,
									"id": 1004,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 1419,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1428,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2926,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferToken_1145": {
									"entryPoint": 1296,
									"id": 1145,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2124,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@welcomeBonus_1165": {
									"entryPoint": 3058,
									"id": 1165,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6144,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 6209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 6449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_boolt_uint256": {
									"entryPoint": 6616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 6254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 6469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 8115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 8046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8138,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8745,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint8_t_uint256__to_t_string_memory_ptr_t_uint8_t_uint256__fromStack_reversed": {
									"entryPoint": 6678,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8413,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8545,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8_t_string_storage_t_uint256__to_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 7977,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5468,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 6935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 7211,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 7177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 7070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6130,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5350,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 7321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 7600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 8098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 8081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 8037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 7293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7555,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8181,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6738,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5962,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 7103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5954,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5958,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 8069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 6968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 7281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 7153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98": {
									"entryPoint": 8603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 6831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427": {
									"entryPoint": 8339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888": {
									"entryPoint": 8471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c": {
									"entryPoint": 7744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496": {
									"entryPoint": 7640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 6980,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 7112,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 6427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 7149,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:26297:8",
										"nodeType": "YulBlock",
										"src": "0:26297:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3404:53:8",
													"nodeType": "YulBlock",
													"src": "3404:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:8"
																		},
																		"nativeSrc": "3426:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:8"
																},
																"nativeSrc": "3414:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:8"
															},
															"nativeSrc": "3414:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:8",
														"nodeType": "YulTypedName",
														"src": "3392:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:8",
														"nodeType": "YulTypedName",
														"src": "3399:3:8",
														"type": ""
													}
												],
												"src": "3339:118:8"
											},
											{
												"body": {
													"nativeSrc": "3561:124:8",
													"nodeType": "YulBlock",
													"src": "3561:124:8",
													"statements": [
														{
															"nativeSrc": "3571:26:8",
															"nodeType": "YulAssignment",
															"src": "3571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:8"
																},
																"nativeSrc": "3579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:8"
																		},
																		"nativeSrc": "3660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:8"
																},
																"nativeSrc": "3607:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:8"
															},
															"nativeSrc": "3607:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:8",
														"nodeType": "YulTypedName",
														"src": "3533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:8",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:8",
														"nodeType": "YulTypedName",
														"src": "3556:4:8",
														"type": ""
													}
												],
												"src": "3463:222:8"
											},
											{
												"body": {
													"nativeSrc": "3734:43:8",
													"nodeType": "YulBlock",
													"src": "3734:43:8",
													"statements": [
														{
															"nativeSrc": "3744:27:8",
															"nodeType": "YulAssignment",
															"src": "3744:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3759:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3759:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3766:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3766:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3755:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3755:3:8"
																},
																"nativeSrc": "3755:16:8",
																"nodeType": "YulFunctionCall",
																"src": "3755:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3744:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3744:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "3691:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3716:5:8",
														"nodeType": "YulTypedName",
														"src": "3716:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3726:7:8",
														"nodeType": "YulTypedName",
														"src": "3726:7:8",
														"type": ""
													}
												],
												"src": "3691:86:8"
											},
											{
												"body": {
													"nativeSrc": "3844:51:8",
													"nodeType": "YulBlock",
													"src": "3844:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3861:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3861:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3882:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3882:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "3866:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "3866:15:8"
																		},
																		"nativeSrc": "3866:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3866:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3854:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3854:6:8"
																},
																"nativeSrc": "3854:35:8",
																"nodeType": "YulFunctionCall",
																"src": "3854:35:8"
															},
															"nativeSrc": "3854:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "3854:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "3783:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3832:5:8",
														"nodeType": "YulTypedName",
														"src": "3832:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3839:3:8",
														"nodeType": "YulTypedName",
														"src": "3839:3:8",
														"type": ""
													}
												],
												"src": "3783:112:8"
											},
											{
												"body": {
													"nativeSrc": "3995:120:8",
													"nodeType": "YulBlock",
													"src": "3995:120:8",
													"statements": [
														{
															"nativeSrc": "4005:26:8",
															"nodeType": "YulAssignment",
															"src": "4005:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4017:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4017:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4028:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4028:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4013:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4013:3:8"
																},
																"nativeSrc": "4013:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4013:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4005:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4005:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4081:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4081:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4094:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4094:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4105:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4105:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4090:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4090:3:8"
																		},
																		"nativeSrc": "4090:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4090:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4041:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "4041:39:8"
																},
																"nativeSrc": "4041:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4041:67:8"
															},
															"nativeSrc": "4041:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4041:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3901:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3967:9:8",
														"nodeType": "YulTypedName",
														"src": "3967:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3979:6:8",
														"nodeType": "YulTypedName",
														"src": "3979:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3990:4:8",
														"nodeType": "YulTypedName",
														"src": "3990:4:8",
														"type": ""
													}
												],
												"src": "3901:214:8"
											},
											{
												"body": {
													"nativeSrc": "4221:519:8",
													"nodeType": "YulBlock",
													"src": "4221:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4267:83:8",
																"nodeType": "YulBlock",
																"src": "4267:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4269:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4269:77:8"
																			},
																			"nativeSrc": "4269:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:79:8"
																		},
																		"nativeSrc": "4269:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4269:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4242:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4242:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4251:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4251:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4238:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4238:3:8"
																		},
																		"nativeSrc": "4238:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4238:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4263:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4263:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4234:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4234:3:8"
																},
																"nativeSrc": "4234:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4234:32:8"
															},
															"nativeSrc": "4231:119:8",
															"nodeType": "YulIf",
															"src": "4231:119:8"
														},
														{
															"nativeSrc": "4360:117:8",
															"nodeType": "YulBlock",
															"src": "4360:117:8",
															"statements": [
																{
																	"nativeSrc": "4375:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4375:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4389:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4389:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4379:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4379:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4404:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4404:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4439:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4439:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4450:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4450:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4435:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4435:3:8"
																				},
																				"nativeSrc": "4435:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4435:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4459:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4459:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4414:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4414:20:8"
																		},
																		"nativeSrc": "4414:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4414:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4404:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4404:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4487:118:8",
															"nodeType": "YulBlock",
															"src": "4487:118:8",
															"statements": [
																{
																	"nativeSrc": "4502:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4502:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4516:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4516:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4506:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4506:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4532:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4532:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4567:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4567:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4578:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4578:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4563:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4563:3:8"
																				},
																				"nativeSrc": "4563:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4563:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4587:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4587:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4542:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4542:20:8"
																		},
																		"nativeSrc": "4542:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4542:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4532:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4532:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4615:118:8",
															"nodeType": "YulBlock",
															"src": "4615:118:8",
															"statements": [
																{
																	"nativeSrc": "4630:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4630:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4644:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4644:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4634:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4634:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4660:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4660:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4695:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4695:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4706:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4706:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4691:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4691:3:8"
																				},
																				"nativeSrc": "4691:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4691:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4715:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4715:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4670:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4670:20:8"
																		},
																		"nativeSrc": "4670:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4670:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4660:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4660:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4121:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4175:9:8",
														"nodeType": "YulTypedName",
														"src": "4175:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4186:7:8",
														"nodeType": "YulTypedName",
														"src": "4186:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4198:6:8",
														"nodeType": "YulTypedName",
														"src": "4198:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4206:6:8",
														"nodeType": "YulTypedName",
														"src": "4206:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4214:6:8",
														"nodeType": "YulTypedName",
														"src": "4214:6:8",
														"type": ""
													}
												],
												"src": "4121:619:8"
											},
											{
												"body": {
													"nativeSrc": "4812:263:8",
													"nodeType": "YulBlock",
													"src": "4812:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:8",
																"nodeType": "YulBlock",
																"src": "4858:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:8"
																			},
																			"nativeSrc": "4860:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:8"
																		},
																		"nativeSrc": "4860:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:8"
																		},
																		"nativeSrc": "4829:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:8"
																},
																"nativeSrc": "4825:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:8"
															},
															"nativeSrc": "4822:119:8",
															"nodeType": "YulIf",
															"src": "4822:119:8"
														},
														{
															"nativeSrc": "4951:117:8",
															"nodeType": "YulBlock",
															"src": "4951:117:8",
															"statements": [
																{
																	"nativeSrc": "4966:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:8"
																				},
																				"nativeSrc": "5026:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5005:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:8"
																		},
																		"nativeSrc": "5005:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4746:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:8",
														"nodeType": "YulTypedName",
														"src": "4782:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:8",
														"nodeType": "YulTypedName",
														"src": "4793:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:8",
														"nodeType": "YulTypedName",
														"src": "4805:6:8",
														"type": ""
													}
												],
												"src": "4746:329:8"
											},
											{
												"body": {
													"nativeSrc": "5170:28:8",
													"nodeType": "YulBlock",
													"src": "5170:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5187:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5187:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5190:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5190:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5180:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5180:6:8"
																},
																"nativeSrc": "5180:12:8",
																"nodeType": "YulFunctionCall",
																"src": "5180:12:8"
															},
															"nativeSrc": "5180:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "5180:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5081:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5081:117:8"
											},
											{
												"body": {
													"nativeSrc": "5293:28:8",
													"nodeType": "YulBlock",
													"src": "5293:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5310:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5310:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5313:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5313:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5303:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5303:6:8"
																},
																"nativeSrc": "5303:12:8",
																"nodeType": "YulFunctionCall",
																"src": "5303:12:8"
															},
															"nativeSrc": "5303:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "5303:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5204:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5204:117:8"
											},
											{
												"body": {
													"nativeSrc": "5355:152:8",
													"nodeType": "YulBlock",
													"src": "5355:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5372:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5372:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5375:77:8",
																		"nodeType": "YulLiteral",
																		"src": "5375:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5365:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5365:6:8"
																},
																"nativeSrc": "5365:88:8",
																"nodeType": "YulFunctionCall",
																"src": "5365:88:8"
															},
															"nativeSrc": "5365:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "5365:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5469:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5469:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5472:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5472:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5462:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5462:6:8"
																},
																"nativeSrc": "5462:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5462:15:8"
															},
															"nativeSrc": "5462:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5462:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5493:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5493:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5496:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5496:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5486:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5486:6:8"
																},
																"nativeSrc": "5486:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5486:15:8"
															},
															"nativeSrc": "5486:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5486:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5327:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5327:180:8"
											},
											{
												"body": {
													"nativeSrc": "5556:238:8",
													"nodeType": "YulBlock",
													"src": "5556:238:8",
													"statements": [
														{
															"nativeSrc": "5566:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5566:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5588:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5588:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5618:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5618:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5596:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "5596:21:8"
																		},
																		"nativeSrc": "5596:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5596:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5584:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5584:3:8"
																},
																"nativeSrc": "5584:40:8",
																"nodeType": "YulFunctionCall",
																"src": "5584:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5570:10:8",
																	"nodeType": "YulTypedName",
																	"src": "5570:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5735:22:8",
																"nodeType": "YulBlock",
																"src": "5735:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5737:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5737:16:8"
																			},
																			"nativeSrc": "5737:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5737:18:8"
																		},
																		"nativeSrc": "5737:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5737:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5678:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "5678:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5690:18:8",
																				"nodeType": "YulLiteral",
																				"src": "5690:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5675:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5675:2:8"
																		},
																		"nativeSrc": "5675:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5675:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5714:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "5714:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5726:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5726:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5711:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5711:2:8"
																		},
																		"nativeSrc": "5711:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5711:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5672:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5672:2:8"
																},
																"nativeSrc": "5672:62:8",
																"nodeType": "YulFunctionCall",
																"src": "5672:62:8"
															},
															"nativeSrc": "5669:88:8",
															"nodeType": "YulIf",
															"src": "5669:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5773:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5773:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5777:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "5777:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5766:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5766:6:8"
																},
																"nativeSrc": "5766:22:8",
																"nodeType": "YulFunctionCall",
																"src": "5766:22:8"
															},
															"nativeSrc": "5766:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "5766:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5513:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5542:6:8",
														"nodeType": "YulTypedName",
														"src": "5542:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5550:4:8",
														"nodeType": "YulTypedName",
														"src": "5550:4:8",
														"type": ""
													}
												],
												"src": "5513:281:8"
											},
											{
												"body": {
													"nativeSrc": "5841:88:8",
													"nodeType": "YulBlock",
													"src": "5841:88:8",
													"statements": [
														{
															"nativeSrc": "5851:30:8",
															"nodeType": "YulAssignment",
															"src": "5851:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5861:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5861:18:8"
																},
																"nativeSrc": "5861:20:8",
																"nodeType": "YulFunctionCall",
																"src": "5861:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5851:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5851:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5910:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5910:6:8"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5918:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5918:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5890:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "5890:19:8"
																},
																"nativeSrc": "5890:33:8",
																"nodeType": "YulFunctionCall",
																"src": "5890:33:8"
															},
															"nativeSrc": "5890:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "5890:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5800:129:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5825:4:8",
														"nodeType": "YulTypedName",
														"src": "5825:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5834:6:8",
														"nodeType": "YulTypedName",
														"src": "5834:6:8",
														"type": ""
													}
												],
												"src": "5800:129:8"
											},
											{
												"body": {
													"nativeSrc": "6002:241:8",
													"nodeType": "YulBlock",
													"src": "6002:241:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6107:22:8",
																"nodeType": "YulBlock",
																"src": "6107:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6109:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6109:16:8"
																			},
																			"nativeSrc": "6109:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6109:18:8"
																		},
																		"nativeSrc": "6109:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6109:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6079:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6079:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6087:18:8",
																		"nodeType": "YulLiteral",
																		"src": "6087:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6076:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6076:2:8"
																},
																"nativeSrc": "6076:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6076:30:8"
															},
															"nativeSrc": "6073:56:8",
															"nodeType": "YulIf",
															"src": "6073:56:8"
														},
														{
															"nativeSrc": "6139:37:8",
															"nodeType": "YulAssignment",
															"src": "6139:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6169:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6169:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6147:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "6147:21:8"
																},
																"nativeSrc": "6147:29:8",
																"nodeType": "YulFunctionCall",
																"src": "6147:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6139:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6139:4:8"
																}
															]
														},
														{
															"nativeSrc": "6213:23:8",
															"nodeType": "YulAssignment",
															"src": "6213:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6225:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6225:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6231:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6231:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6221:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6221:3:8"
																},
																"nativeSrc": "6221:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6221:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6213:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6213:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "5935:308:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5986:6:8",
														"nodeType": "YulTypedName",
														"src": "5986:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5997:4:8",
														"nodeType": "YulTypedName",
														"src": "5997:4:8",
														"type": ""
													}
												],
												"src": "5935:308:8"
											},
											{
												"body": {
													"nativeSrc": "6313:84:8",
													"nodeType": "YulBlock",
													"src": "6313:84:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6337:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6337:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6342:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6342:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6347:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6347:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6324:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6324:12:8"
																},
																"nativeSrc": "6324:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6324:30:8"
															},
															"nativeSrc": "6324:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6324:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6374:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6374:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6379:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6379:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6370:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6370:3:8"
																		},
																		"nativeSrc": "6370:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6370:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6388:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6388:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6363:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6363:6:8"
																},
																"nativeSrc": "6363:27:8",
																"nodeType": "YulFunctionCall",
																"src": "6363:27:8"
															},
															"nativeSrc": "6363:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "6363:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6249:148:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6295:3:8",
														"nodeType": "YulTypedName",
														"src": "6295:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6300:3:8",
														"nodeType": "YulTypedName",
														"src": "6300:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6305:6:8",
														"nodeType": "YulTypedName",
														"src": "6305:6:8",
														"type": ""
													}
												],
												"src": "6249:148:8"
											},
											{
												"body": {
													"nativeSrc": "6487:341:8",
													"nodeType": "YulBlock",
													"src": "6487:341:8",
													"statements": [
														{
															"nativeSrc": "6497:75:8",
															"nodeType": "YulAssignment",
															"src": "6497:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6564:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6564:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6522:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "6522:41:8"
																		},
																		"nativeSrc": "6522:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6522:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6506:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "6506:15:8"
																},
																"nativeSrc": "6506:66:8",
																"nodeType": "YulFunctionCall",
																"src": "6506:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6497:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6497:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6588:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6588:5:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6595:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6595:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6581:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6581:6:8"
																},
																"nativeSrc": "6581:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6581:21:8"
															},
															"nativeSrc": "6581:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6581:21:8"
														},
														{
															"nativeSrc": "6611:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6611:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6626:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6626:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6633:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6633:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6622:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6622:3:8"
																},
																"nativeSrc": "6622:16:8",
																"nodeType": "YulFunctionCall",
																"src": "6622:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6615:3:8",
																	"nodeType": "YulTypedName",
																	"src": "6615:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6676:83:8",
																"nodeType": "YulBlock",
																"src": "6676:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6678:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6678:77:8"
																			},
																			"nativeSrc": "6678:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6678:79:8"
																		},
																		"nativeSrc": "6678:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6678:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6657:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6657:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6662:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6662:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6653:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6653:3:8"
																		},
																		"nativeSrc": "6653:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6653:16:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6671:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6671:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6650:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6650:2:8"
																},
																"nativeSrc": "6650:25:8",
																"nodeType": "YulFunctionCall",
																"src": "6650:25:8"
															},
															"nativeSrc": "6647:112:8",
															"nodeType": "YulIf",
															"src": "6647:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6805:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6805:3:8"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6810:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6810:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6815:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6815:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6768:36:8",
																	"nodeType": "YulIdentifier",
																	"src": "6768:36:8"
																},
																"nativeSrc": "6768:54:8",
																"nodeType": "YulFunctionCall",
																"src": "6768:54:8"
															},
															"nativeSrc": "6768:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "6768:54:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6403:425:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6460:3:8",
														"nodeType": "YulTypedName",
														"src": "6460:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6465:6:8",
														"nodeType": "YulTypedName",
														"src": "6465:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6473:3:8",
														"nodeType": "YulTypedName",
														"src": "6473:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6481:5:8",
														"nodeType": "YulTypedName",
														"src": "6481:5:8",
														"type": ""
													}
												],
												"src": "6403:425:8"
											},
											{
												"body": {
													"nativeSrc": "6910:278:8",
													"nodeType": "YulBlock",
													"src": "6910:278:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6959:83:8",
																"nodeType": "YulBlock",
																"src": "6959:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6961:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6961:77:8"
																			},
																			"nativeSrc": "6961:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6961:79:8"
																		},
																		"nativeSrc": "6961:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6961:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6938:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6938:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6946:4:8",
																						"nodeType": "YulLiteral",
																						"src": "6946:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6934:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6934:3:8"
																				},
																				"nativeSrc": "6934:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6934:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6953:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6953:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6930:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6930:3:8"
																		},
																		"nativeSrc": "6930:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6930:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6923:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6923:6:8"
																},
																"nativeSrc": "6923:35:8",
																"nodeType": "YulFunctionCall",
																"src": "6923:35:8"
															},
															"nativeSrc": "6920:122:8",
															"nodeType": "YulIf",
															"src": "6920:122:8"
														},
														{
															"nativeSrc": "7051:34:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7051:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7078:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7078:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7065:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "7065:12:8"
																},
																"nativeSrc": "7065:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7065:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7055:6:8",
																	"nodeType": "YulTypedName",
																	"src": "7055:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7094:88:8",
															"nodeType": "YulAssignment",
															"src": "7094:88:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7155:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7155:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7163:4:8",
																				"nodeType": "YulLiteral",
																				"src": "7163:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7151:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7151:3:8"
																		},
																		"nativeSrc": "7151:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7151:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7170:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7170:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7178:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7178:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "7103:47:8",
																	"nodeType": "YulIdentifier",
																	"src": "7103:47:8"
																},
																"nativeSrc": "7103:79:8",
																"nodeType": "YulFunctionCall",
																"src": "7103:79:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7094:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7094:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "6848:340:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6888:6:8",
														"nodeType": "YulTypedName",
														"src": "6888:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6896:3:8",
														"nodeType": "YulTypedName",
														"src": "6896:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6904:5:8",
														"nodeType": "YulTypedName",
														"src": "6904:5:8",
														"type": ""
													}
												],
												"src": "6848:340:8"
											},
											{
												"body": {
													"nativeSrc": "7287:561:8",
													"nodeType": "YulBlock",
													"src": "7287:561:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7333:83:8",
																"nodeType": "YulBlock",
																"src": "7333:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7335:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7335:77:8"
																			},
																			"nativeSrc": "7335:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7335:79:8"
																		},
																		"nativeSrc": "7335:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7335:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7308:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7308:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7317:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7317:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7304:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7304:3:8"
																		},
																		"nativeSrc": "7304:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7304:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7329:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7329:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7300:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7300:3:8"
																},
																"nativeSrc": "7300:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7300:32:8"
															},
															"nativeSrc": "7297:119:8",
															"nodeType": "YulIf",
															"src": "7297:119:8"
														},
														{
															"nativeSrc": "7426:287:8",
															"nodeType": "YulBlock",
															"src": "7426:287:8",
															"statements": [
																{
																	"nativeSrc": "7441:45:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7441:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7472:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7472:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7483:1:8",
																						"nodeType": "YulLiteral",
																						"src": "7483:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7468:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7468:3:8"
																				},
																				"nativeSrc": "7468:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7468:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7455:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "7455:12:8"
																		},
																		"nativeSrc": "7455:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7455:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7445:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7445:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7533:83:8",
																		"nodeType": "YulBlock",
																		"src": "7533:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7535:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "7535:77:8"
																					},
																					"nativeSrc": "7535:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7535:79:8"
																				},
																				"nativeSrc": "7535:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "7535:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7505:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7505:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7513:18:8",
																				"nodeType": "YulLiteral",
																				"src": "7513:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7502:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7502:2:8"
																		},
																		"nativeSrc": "7502:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7502:30:8"
																	},
																	"nativeSrc": "7499:117:8",
																	"nodeType": "YulIf",
																	"src": "7499:117:8"
																},
																{
																	"nativeSrc": "7630:73:8",
																	"nodeType": "YulAssignment",
																	"src": "7630:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7675:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7675:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7686:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7686:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7671:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7671:3:8"
																				},
																				"nativeSrc": "7671:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7671:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7695:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7695:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7640:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "7640:30:8"
																		},
																		"nativeSrc": "7640:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7640:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7630:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7630:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7723:118:8",
															"nodeType": "YulBlock",
															"src": "7723:118:8",
															"statements": [
																{
																	"nativeSrc": "7738:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7738:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7752:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7752:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7742:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7742:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7768:63:8",
																	"nodeType": "YulAssignment",
																	"src": "7768:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7803:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7803:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7814:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7814:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7799:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7799:3:8"
																				},
																				"nativeSrc": "7799:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7799:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7823:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7823:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7778:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "7778:20:8"
																		},
																		"nativeSrc": "7778:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7778:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7768:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7768:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nativeSrc": "7194:654:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7249:9:8",
														"nodeType": "YulTypedName",
														"src": "7249:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7260:7:8",
														"nodeType": "YulTypedName",
														"src": "7260:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7272:6:8",
														"nodeType": "YulTypedName",
														"src": "7272:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7280:6:8",
														"nodeType": "YulTypedName",
														"src": "7280:6:8",
														"type": ""
													}
												],
												"src": "7194:654:8"
											},
											{
												"body": {
													"nativeSrc": "7920:263:8",
													"nodeType": "YulBlock",
													"src": "7920:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7966:83:8",
																"nodeType": "YulBlock",
																"src": "7966:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7968:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7968:77:8"
																			},
																			"nativeSrc": "7968:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7968:79:8"
																		},
																		"nativeSrc": "7968:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7968:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7941:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7941:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7950:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7950:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7937:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7937:3:8"
																		},
																		"nativeSrc": "7937:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7937:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7962:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7962:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7933:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7933:3:8"
																},
																"nativeSrc": "7933:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7933:32:8"
															},
															"nativeSrc": "7930:119:8",
															"nodeType": "YulIf",
															"src": "7930:119:8"
														},
														{
															"nativeSrc": "8059:117:8",
															"nodeType": "YulBlock",
															"src": "8059:117:8",
															"statements": [
																{
																	"nativeSrc": "8074:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8074:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8088:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8088:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8078:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8078:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8103:63:8",
																	"nodeType": "YulAssignment",
																	"src": "8103:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8138:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8138:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8149:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8149:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8134:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8134:3:8"
																				},
																				"nativeSrc": "8134:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8134:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8158:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8158:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8113:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "8113:20:8"
																		},
																		"nativeSrc": "8113:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8113:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8103:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8103:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7854:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7890:9:8",
														"nodeType": "YulTypedName",
														"src": "7890:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7901:7:8",
														"nodeType": "YulTypedName",
														"src": "7901:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7913:6:8",
														"nodeType": "YulTypedName",
														"src": "7913:6:8",
														"type": ""
													}
												],
												"src": "7854:329:8"
											},
											{
												"body": {
													"nativeSrc": "8254:53:8",
													"nodeType": "YulBlock",
													"src": "8254:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8271:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8271:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8294:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8294:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8276:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "8276:17:8"
																		},
																		"nativeSrc": "8276:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8276:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8264:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8264:6:8"
																},
																"nativeSrc": "8264:37:8",
																"nodeType": "YulFunctionCall",
																"src": "8264:37:8"
															},
															"nativeSrc": "8264:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "8264:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8189:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8242:5:8",
														"nodeType": "YulTypedName",
														"src": "8242:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8249:3:8",
														"nodeType": "YulTypedName",
														"src": "8249:3:8",
														"type": ""
													}
												],
												"src": "8189:118:8"
											},
											{
												"body": {
													"nativeSrc": "8411:124:8",
													"nodeType": "YulBlock",
													"src": "8411:124:8",
													"statements": [
														{
															"nativeSrc": "8421:26:8",
															"nodeType": "YulAssignment",
															"src": "8421:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8433:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8433:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8444:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8444:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8429:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8429:3:8"
																},
																"nativeSrc": "8429:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8429:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8421:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8421:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8501:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8501:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8514:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8514:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8525:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8525:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8510:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8510:3:8"
																		},
																		"nativeSrc": "8510:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8510:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8457:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8457:43:8"
																},
																"nativeSrc": "8457:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8457:71:8"
															},
															"nativeSrc": "8457:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8457:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8313:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8383:9:8",
														"nodeType": "YulTypedName",
														"src": "8383:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8395:6:8",
														"nodeType": "YulTypedName",
														"src": "8395:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8406:4:8",
														"nodeType": "YulTypedName",
														"src": "8406:4:8",
														"type": ""
													}
												],
												"src": "8313:222:8"
											},
											{
												"body": {
													"nativeSrc": "8582:77:8",
													"nodeType": "YulBlock",
													"src": "8582:77:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8637:16:8",
																"nodeType": "YulBlock",
																"src": "8637:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8646:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8646:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8649:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8649:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8639:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8639:6:8"
																			},
																			"nativeSrc": "8639:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8639:12:8"
																		},
																		"nativeSrc": "8639:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8639:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8605:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8605:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8628:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8628:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "8612:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "8612:15:8"
																				},
																				"nativeSrc": "8612:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8612:22:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8602:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "8602:2:8"
																		},
																		"nativeSrc": "8602:33:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8602:33:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8595:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8595:6:8"
																},
																"nativeSrc": "8595:41:8",
																"nodeType": "YulFunctionCall",
																"src": "8595:41:8"
															},
															"nativeSrc": "8592:61:8",
															"nodeType": "YulIf",
															"src": "8592:61:8"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "8541:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8575:5:8",
														"nodeType": "YulTypedName",
														"src": "8575:5:8",
														"type": ""
													}
												],
												"src": "8541:118:8"
											},
											{
												"body": {
													"nativeSrc": "8715:85:8",
													"nodeType": "YulBlock",
													"src": "8715:85:8",
													"statements": [
														{
															"nativeSrc": "8725:29:8",
															"nodeType": "YulAssignment",
															"src": "8725:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8747:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8747:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8734:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "8734:12:8"
																},
																"nativeSrc": "8734:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8734:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8725:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8725:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8788:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8788:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "8763:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "8763:24:8"
																},
																"nativeSrc": "8763:31:8",
																"nodeType": "YulFunctionCall",
																"src": "8763:31:8"
															},
															"nativeSrc": "8763:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "8763:31:8"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "8665:135:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8693:6:8",
														"nodeType": "YulTypedName",
														"src": "8693:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8701:3:8",
														"nodeType": "YulTypedName",
														"src": "8701:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8709:5:8",
														"nodeType": "YulTypedName",
														"src": "8709:5:8",
														"type": ""
													}
												],
												"src": "8665:135:8"
											},
											{
												"body": {
													"nativeSrc": "8870:261:8",
													"nodeType": "YulBlock",
													"src": "8870:261:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8916:83:8",
																"nodeType": "YulBlock",
																"src": "8916:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8918:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "8918:77:8"
																			},
																			"nativeSrc": "8918:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8918:79:8"
																		},
																		"nativeSrc": "8918:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8918:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8891:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8891:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8900:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8900:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8887:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8887:3:8"
																		},
																		"nativeSrc": "8887:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8887:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8912:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8912:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8883:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8883:3:8"
																},
																"nativeSrc": "8883:32:8",
																"nodeType": "YulFunctionCall",
																"src": "8883:32:8"
															},
															"nativeSrc": "8880:119:8",
															"nodeType": "YulIf",
															"src": "8880:119:8"
														},
														{
															"nativeSrc": "9009:115:8",
															"nodeType": "YulBlock",
															"src": "9009:115:8",
															"statements": [
																{
																	"nativeSrc": "9024:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9024:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9038:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9038:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9028:6:8",
																			"nodeType": "YulTypedName",
																			"src": "9028:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9053:61:8",
																	"nodeType": "YulAssignment",
																	"src": "9053:61:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9086:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "9086:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9097:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9097:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9082:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9082:3:8"
																				},
																				"nativeSrc": "9082:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9082:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9106:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9106:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "9063:18:8",
																			"nodeType": "YulIdentifier",
																			"src": "9063:18:8"
																		},
																		"nativeSrc": "9063:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9063:51:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9053:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "9053:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nativeSrc": "8806:325:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8840:9:8",
														"nodeType": "YulTypedName",
														"src": "8840:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8851:7:8",
														"nodeType": "YulTypedName",
														"src": "8851:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8863:6:8",
														"nodeType": "YulTypedName",
														"src": "8863:6:8",
														"type": ""
													}
												],
												"src": "8806:325:8"
											},
											{
												"body": {
													"nativeSrc": "9220:391:8",
													"nodeType": "YulBlock",
													"src": "9220:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9266:83:8",
																"nodeType": "YulBlock",
																"src": "9266:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9268:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "9268:77:8"
																			},
																			"nativeSrc": "9268:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9268:79:8"
																		},
																		"nativeSrc": "9268:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9268:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9241:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9241:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9250:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9250:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9237:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9237:3:8"
																		},
																		"nativeSrc": "9237:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9237:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9262:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9262:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9233:3:8"
																},
																"nativeSrc": "9233:32:8",
																"nodeType": "YulFunctionCall",
																"src": "9233:32:8"
															},
															"nativeSrc": "9230:119:8",
															"nodeType": "YulIf",
															"src": "9230:119:8"
														},
														{
															"nativeSrc": "9359:117:8",
															"nodeType": "YulBlock",
															"src": "9359:117:8",
															"statements": [
																{
																	"nativeSrc": "9374:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9374:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9388:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9388:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9378:6:8",
																			"nodeType": "YulTypedName",
																			"src": "9378:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9403:63:8",
																	"nodeType": "YulAssignment",
																	"src": "9403:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9438:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "9438:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9449:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9449:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9434:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9434:3:8"
																				},
																				"nativeSrc": "9434:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9434:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9458:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9458:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9413:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "9413:20:8"
																		},
																		"nativeSrc": "9413:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9413:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9403:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "9403:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9486:118:8",
															"nodeType": "YulBlock",
															"src": "9486:118:8",
															"statements": [
																{
																	"nativeSrc": "9501:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9501:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9515:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9515:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9505:6:8",
																			"nodeType": "YulTypedName",
																			"src": "9505:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9531:63:8",
																	"nodeType": "YulAssignment",
																	"src": "9531:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9566:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "9566:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9577:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9577:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9562:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9562:3:8"
																				},
																				"nativeSrc": "9562:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9562:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9586:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9586:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9541:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "9541:20:8"
																		},
																		"nativeSrc": "9541:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9541:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9531:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "9531:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9137:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9182:9:8",
														"nodeType": "YulTypedName",
														"src": "9182:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9193:7:8",
														"nodeType": "YulTypedName",
														"src": "9193:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9205:6:8",
														"nodeType": "YulTypedName",
														"src": "9205:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9213:6:8",
														"nodeType": "YulTypedName",
														"src": "9213:6:8",
														"type": ""
													}
												],
												"src": "9137:474:8"
											},
											{
												"body": {
													"nativeSrc": "9657:76:8",
													"nodeType": "YulBlock",
													"src": "9657:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9711:16:8",
																"nodeType": "YulBlock",
																"src": "9711:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9720:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9720:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9723:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9723:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9713:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9713:6:8"
																			},
																			"nativeSrc": "9713:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9713:12:8"
																		},
																		"nativeSrc": "9713:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9713:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9680:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9680:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9702:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9702:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9687:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "9687:14:8"
																				},
																				"nativeSrc": "9687:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9687:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9677:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9677:2:8"
																		},
																		"nativeSrc": "9677:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9677:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9670:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9670:6:8"
																},
																"nativeSrc": "9670:40:8",
																"nodeType": "YulFunctionCall",
																"src": "9670:40:8"
															},
															"nativeSrc": "9667:60:8",
															"nodeType": "YulIf",
															"src": "9667:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9617:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9650:5:8",
														"nodeType": "YulTypedName",
														"src": "9650:5:8",
														"type": ""
													}
												],
												"src": "9617:116:8"
											},
											{
												"body": {
													"nativeSrc": "9788:84:8",
													"nodeType": "YulBlock",
													"src": "9788:84:8",
													"statements": [
														{
															"nativeSrc": "9798:29:8",
															"nodeType": "YulAssignment",
															"src": "9798:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9820:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9820:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9807:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "9807:12:8"
																},
																"nativeSrc": "9807:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9807:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9798:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9798:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9860:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9860:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9836:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "9836:23:8"
																},
																"nativeSrc": "9836:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9836:30:8"
															},
															"nativeSrc": "9836:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "9836:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "9739:133:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9766:6:8",
														"nodeType": "YulTypedName",
														"src": "9766:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9774:3:8",
														"nodeType": "YulTypedName",
														"src": "9774:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9782:5:8",
														"nodeType": "YulTypedName",
														"src": "9782:5:8",
														"type": ""
													}
												],
												"src": "9739:133:8"
											},
											{
												"body": {
													"nativeSrc": "9958:388:8",
													"nodeType": "YulBlock",
													"src": "9958:388:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10004:83:8",
																"nodeType": "YulBlock",
																"src": "10004:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10006:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "10006:77:8"
																			},
																			"nativeSrc": "10006:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10006:79:8"
																		},
																		"nativeSrc": "10006:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10006:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9979:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9979:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9988:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9988:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9975:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9975:3:8"
																		},
																		"nativeSrc": "9975:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9975:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10000:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10000:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9971:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9971:3:8"
																},
																"nativeSrc": "9971:32:8",
																"nodeType": "YulFunctionCall",
																"src": "9971:32:8"
															},
															"nativeSrc": "9968:119:8",
															"nodeType": "YulIf",
															"src": "9968:119:8"
														},
														{
															"nativeSrc": "10097:114:8",
															"nodeType": "YulBlock",
															"src": "10097:114:8",
															"statements": [
																{
																	"nativeSrc": "10112:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10112:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10126:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10126:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10116:6:8",
																			"nodeType": "YulTypedName",
																			"src": "10116:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10141:60:8",
																	"nodeType": "YulAssignment",
																	"src": "10141:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10173:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "10173:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10184:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "10184:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10169:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10169:3:8"
																				},
																				"nativeSrc": "10169:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10169:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10193:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10193:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "10151:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "10151:17:8"
																		},
																		"nativeSrc": "10151:50:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10151:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10141:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "10141:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10221:118:8",
															"nodeType": "YulBlock",
															"src": "10221:118:8",
															"statements": [
																{
																	"nativeSrc": "10236:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10236:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10250:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10250:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10240:6:8",
																			"nodeType": "YulTypedName",
																			"src": "10240:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10266:63:8",
																	"nodeType": "YulAssignment",
																	"src": "10266:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10301:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "10301:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10312:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "10312:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10297:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10297:3:8"
																				},
																				"nativeSrc": "10297:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10297:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10321:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10321:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10276:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "10276:20:8"
																		},
																		"nativeSrc": "10276:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10276:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10266:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "10266:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint256",
												"nativeSrc": "9878:468:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9920:9:8",
														"nodeType": "YulTypedName",
														"src": "9920:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9931:7:8",
														"nodeType": "YulTypedName",
														"src": "9931:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9943:6:8",
														"nodeType": "YulTypedName",
														"src": "9943:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9951:6:8",
														"nodeType": "YulTypedName",
														"src": "9951:6:8",
														"type": ""
													}
												],
												"src": "9878:468:8"
											},
											{
												"body": {
													"nativeSrc": "10522:355:8",
													"nodeType": "YulBlock",
													"src": "10522:355:8",
													"statements": [
														{
															"nativeSrc": "10532:26:8",
															"nodeType": "YulAssignment",
															"src": "10532:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10544:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10544:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10555:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10555:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10540:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10540:3:8"
																},
																"nativeSrc": "10540:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10540:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10532:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10532:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10579:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10579:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10590:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10590:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10575:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10575:3:8"
																		},
																		"nativeSrc": "10575:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10575:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10598:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10598:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10604:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10604:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10594:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10594:3:8"
																		},
																		"nativeSrc": "10594:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10594:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10568:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10568:6:8"
																},
																"nativeSrc": "10568:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10568:47:8"
															},
															"nativeSrc": "10568:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10568:47:8"
														},
														{
															"nativeSrc": "10624:86:8",
															"nodeType": "YulAssignment",
															"src": "10624:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10696:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10696:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10705:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10705:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10632:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "10632:63:8"
																},
																"nativeSrc": "10632:78:8",
																"nodeType": "YulFunctionCall",
																"src": "10632:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10624:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10624:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10760:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10760:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10773:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10773:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10784:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10784:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10769:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10769:3:8"
																		},
																		"nativeSrc": "10769:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10769:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "10720:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "10720:39:8"
																},
																"nativeSrc": "10720:68:8",
																"nodeType": "YulFunctionCall",
																"src": "10720:68:8"
															},
															"nativeSrc": "10720:68:8",
															"nodeType": "YulExpressionStatement",
															"src": "10720:68:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10842:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10842:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10855:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10855:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10866:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10866:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10851:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10851:3:8"
																		},
																		"nativeSrc": "10851:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10851:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10798:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10798:43:8"
																},
																"nativeSrc": "10798:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10798:72:8"
															},
															"nativeSrc": "10798:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10798:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint8_t_uint256__to_t_string_memory_ptr_t_uint8_t_uint256__fromStack_reversed",
												"nativeSrc": "10352:525:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10478:9:8",
														"nodeType": "YulTypedName",
														"src": "10478:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10490:6:8",
														"nodeType": "YulTypedName",
														"src": "10490:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10498:6:8",
														"nodeType": "YulTypedName",
														"src": "10498:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10506:6:8",
														"nodeType": "YulTypedName",
														"src": "10506:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10517:4:8",
														"nodeType": "YulTypedName",
														"src": "10517:4:8",
														"type": ""
													}
												],
												"src": "10352:525:8"
											},
											{
												"body": {
													"nativeSrc": "10911:152:8",
													"nodeType": "YulBlock",
													"src": "10911:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10928:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10928:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10931:77:8",
																		"nodeType": "YulLiteral",
																		"src": "10931:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10921:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10921:6:8"
																},
																"nativeSrc": "10921:88:8",
																"nodeType": "YulFunctionCall",
																"src": "10921:88:8"
															},
															"nativeSrc": "10921:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "10921:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11025:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11025:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11028:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11028:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11018:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11018:6:8"
																},
																"nativeSrc": "11018:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11018:15:8"
															},
															"nativeSrc": "11018:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11018:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11049:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11049:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11052:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11052:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11042:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11042:6:8"
																},
																"nativeSrc": "11042:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11042:15:8"
															},
															"nativeSrc": "11042:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11042:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10883:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "10883:180:8"
											},
											{
												"body": {
													"nativeSrc": "11120:269:8",
													"nodeType": "YulBlock",
													"src": "11120:269:8",
													"statements": [
														{
															"nativeSrc": "11130:22:8",
															"nodeType": "YulAssignment",
															"src": "11130:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11144:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11144:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11150:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11150:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11140:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11140:3:8"
																},
																"nativeSrc": "11140:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11140:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11130:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11130:6:8"
																}
															]
														},
														{
															"nativeSrc": "11161:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "11161:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11191:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11191:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11197:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11187:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11187:3:8"
																},
																"nativeSrc": "11187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11187:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11165:18:8",
																	"nodeType": "YulTypedName",
																	"src": "11165:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11238:51:8",
																"nodeType": "YulBlock",
																"src": "11238:51:8",
																"statements": [
																	{
																		"nativeSrc": "11252:27:8",
																		"nodeType": "YulAssignment",
																		"src": "11252:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11266:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "11266:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11274:4:8",
																					"nodeType": "YulLiteral",
																					"src": "11274:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11262:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "11262:3:8"
																			},
																			"nativeSrc": "11262:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11262:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11252:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11252:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11218:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "11218:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11211:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11211:6:8"
																},
																"nativeSrc": "11211:26:8",
																"nodeType": "YulFunctionCall",
																"src": "11211:26:8"
															},
															"nativeSrc": "11208:81:8",
															"nodeType": "YulIf",
															"src": "11208:81:8"
														},
														{
															"body": {
																"nativeSrc": "11341:42:8",
																"nodeType": "YulBlock",
																"src": "11341:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11355:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11355:16:8"
																			},
																			"nativeSrc": "11355:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11355:18:8"
																		},
																		"nativeSrc": "11355:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11355:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11305:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "11305:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11328:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11328:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11336:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11336:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11325:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "11325:2:8"
																		},
																		"nativeSrc": "11325:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11325:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11302:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11302:2:8"
																},
																"nativeSrc": "11302:38:8",
																"nodeType": "YulFunctionCall",
																"src": "11302:38:8"
															},
															"nativeSrc": "11299:84:8",
															"nodeType": "YulIf",
															"src": "11299:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11069:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11104:4:8",
														"nodeType": "YulTypedName",
														"src": "11104:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11113:6:8",
														"nodeType": "YulTypedName",
														"src": "11113:6:8",
														"type": ""
													}
												],
												"src": "11069:320:8"
											},
											{
												"body": {
													"nativeSrc": "11501:64:8",
													"nodeType": "YulBlock",
													"src": "11501:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11523:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11523:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11531:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11531:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11519:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11519:3:8"
																		},
																		"nativeSrc": "11519:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11519:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "11535:22:8",
																		"nodeType": "YulLiteral",
																		"src": "11535:22:8",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11512:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11512:6:8"
																},
																"nativeSrc": "11512:46:8",
																"nodeType": "YulFunctionCall",
																"src": "11512:46:8"
															},
															"nativeSrc": "11512:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "11512:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "11395:170:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11493:6:8",
														"nodeType": "YulTypedName",
														"src": "11493:6:8",
														"type": ""
													}
												],
												"src": "11395:170:8"
											},
											{
												"body": {
													"nativeSrc": "11717:220:8",
													"nodeType": "YulBlock",
													"src": "11717:220:8",
													"statements": [
														{
															"nativeSrc": "11727:74:8",
															"nodeType": "YulAssignment",
															"src": "11727:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11793:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11793:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11798:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11798:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11734:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11734:58:8"
																},
																"nativeSrc": "11734:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11734:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11727:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11727:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11899:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11899:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "11810:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11810:88:8"
																},
																"nativeSrc": "11810:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11810:93:8"
															},
															"nativeSrc": "11810:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11810:93:8"
														},
														{
															"nativeSrc": "11912:19:8",
															"nodeType": "YulAssignment",
															"src": "11912:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11923:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11923:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11928:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11928:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11919:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11919:3:8"
																},
																"nativeSrc": "11919:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11919:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11912:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11912:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11571:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11705:3:8",
														"nodeType": "YulTypedName",
														"src": "11705:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11713:3:8",
														"nodeType": "YulTypedName",
														"src": "11713:3:8",
														"type": ""
													}
												],
												"src": "11571:366:8"
											},
											{
												"body": {
													"nativeSrc": "12114:248:8",
													"nodeType": "YulBlock",
													"src": "12114:248:8",
													"statements": [
														{
															"nativeSrc": "12124:26:8",
															"nodeType": "YulAssignment",
															"src": "12124:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12136:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12136:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12147:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12147:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12132:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12132:3:8"
																},
																"nativeSrc": "12132:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12132:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12124:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12124:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12171:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12171:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12182:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12182:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12167:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12167:3:8"
																		},
																		"nativeSrc": "12167:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12167:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12190:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "12190:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12196:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12196:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12186:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12186:3:8"
																		},
																		"nativeSrc": "12186:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12186:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12160:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12160:6:8"
																},
																"nativeSrc": "12160:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12160:47:8"
															},
															"nativeSrc": "12160:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12160:47:8"
														},
														{
															"nativeSrc": "12216:139:8",
															"nodeType": "YulAssignment",
															"src": "12216:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12350:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12350:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12224:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12224:124:8"
																},
																"nativeSrc": "12224:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12224:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12216:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12216:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11943:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12094:9:8",
														"nodeType": "YulTypedName",
														"src": "12094:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12109:4:8",
														"nodeType": "YulTypedName",
														"src": "12109:4:8",
														"type": ""
													}
												],
												"src": "11943:419:8"
											},
											{
												"body": {
													"nativeSrc": "12422:87:8",
													"nodeType": "YulBlock",
													"src": "12422:87:8",
													"statements": [
														{
															"nativeSrc": "12432:11:8",
															"nodeType": "YulAssignment",
															"src": "12432:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "12440:3:8",
																"nodeType": "YulIdentifier",
																"src": "12440:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12432:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12432:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12460:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12460:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "12463:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12463:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12453:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12453:6:8"
																},
																"nativeSrc": "12453:14:8",
																"nodeType": "YulFunctionCall",
																"src": "12453:14:8"
															},
															"nativeSrc": "12453:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "12453:14:8"
														},
														{
															"nativeSrc": "12476:26:8",
															"nodeType": "YulAssignment",
															"src": "12476:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12494:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12494:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12497:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12497:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "12484:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "12484:9:8"
																},
																"nativeSrc": "12484:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12484:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12476:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12476:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "12368:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12409:3:8",
														"nodeType": "YulTypedName",
														"src": "12409:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "12417:4:8",
														"nodeType": "YulTypedName",
														"src": "12417:4:8",
														"type": ""
													}
												],
												"src": "12368:141:8"
											},
											{
												"body": {
													"nativeSrc": "12559:49:8",
													"nodeType": "YulBlock",
													"src": "12559:49:8",
													"statements": [
														{
															"nativeSrc": "12569:33:8",
															"nodeType": "YulAssignment",
															"src": "12569:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12587:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "12587:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12594:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12594:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12583:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12583:3:8"
																		},
																		"nativeSrc": "12583:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12583:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12599:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12599:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12579:3:8"
																},
																"nativeSrc": "12579:23:8",
																"nodeType": "YulFunctionCall",
																"src": "12579:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12569:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12569:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "12515:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12542:5:8",
														"nodeType": "YulTypedName",
														"src": "12542:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "12552:6:8",
														"nodeType": "YulTypedName",
														"src": "12552:6:8",
														"type": ""
													}
												],
												"src": "12515:93:8"
											},
											{
												"body": {
													"nativeSrc": "12667:54:8",
													"nodeType": "YulBlock",
													"src": "12667:54:8",
													"statements": [
														{
															"nativeSrc": "12677:37:8",
															"nodeType": "YulAssignment",
															"src": "12677:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "12702:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12702:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "12708:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "12708:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "12698:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12698:3:8"
																},
																"nativeSrc": "12698:16:8",
																"nodeType": "YulFunctionCall",
																"src": "12698:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "12677:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "12677:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "12614:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "12642:4:8",
														"nodeType": "YulTypedName",
														"src": "12642:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "12648:5:8",
														"nodeType": "YulTypedName",
														"src": "12648:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "12658:8:8",
														"nodeType": "YulTypedName",
														"src": "12658:8:8",
														"type": ""
													}
												],
												"src": "12614:107:8"
											},
											{
												"body": {
													"nativeSrc": "12803:317:8",
													"nodeType": "YulBlock",
													"src": "12803:317:8",
													"statements": [
														{
															"nativeSrc": "12813:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "12813:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "12834:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "12834:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12846:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12846:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12830:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12830:3:8"
																},
																"nativeSrc": "12830:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12830:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "12817:9:8",
																	"nodeType": "YulTypedName",
																	"src": "12817:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12857:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "12857:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "12888:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12888:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12899:66:8",
																		"nodeType": "YulLiteral",
																		"src": "12899:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "12869:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "12869:18:8"
																},
																"nativeSrc": "12869:97:8",
																"nodeType": "YulFunctionCall",
																"src": "12869:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "12861:4:8",
																	"nodeType": "YulTypedName",
																	"src": "12861:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12975:51:8",
															"nodeType": "YulAssignment",
															"src": "12975:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "13006:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13006:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "13017:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "13017:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "12987:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "12987:18:8"
																},
																"nativeSrc": "12987:39:8",
																"nodeType": "YulFunctionCall",
																"src": "12987:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "12975:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "12975:8:8"
																}
															]
														},
														{
															"nativeSrc": "13035:30:8",
															"nodeType": "YulAssignment",
															"src": "13035:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13048:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "13048:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "13059:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13059:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "13055:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13055:3:8"
																		},
																		"nativeSrc": "13055:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13055:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13044:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13044:3:8"
																},
																"nativeSrc": "13044:21:8",
																"nodeType": "YulFunctionCall",
																"src": "13044:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13035:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "13035:5:8"
																}
															]
														},
														{
															"nativeSrc": "13074:40:8",
															"nodeType": "YulAssignment",
															"src": "13074:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13087:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "13087:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "13098:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "13098:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "13108:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13108:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13094:3:8"
																		},
																		"nativeSrc": "13094:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13094:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "13084:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "13084:2:8"
																},
																"nativeSrc": "13084:30:8",
																"nodeType": "YulFunctionCall",
																"src": "13084:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "13074:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13074:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "12727:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12764:5:8",
														"nodeType": "YulTypedName",
														"src": "12764:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "12771:10:8",
														"nodeType": "YulTypedName",
														"src": "12771:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "12783:8:8",
														"nodeType": "YulTypedName",
														"src": "12783:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "12796:6:8",
														"nodeType": "YulTypedName",
														"src": "12796:6:8",
														"type": ""
													}
												],
												"src": "12727:393:8"
											},
											{
												"body": {
													"nativeSrc": "13158:28:8",
													"nodeType": "YulBlock",
													"src": "13158:28:8",
													"statements": [
														{
															"nativeSrc": "13168:12:8",
															"nodeType": "YulAssignment",
															"src": "13168:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "13175:5:8",
																"nodeType": "YulIdentifier",
																"src": "13175:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13168:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13168:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "13126:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13144:5:8",
														"nodeType": "YulTypedName",
														"src": "13144:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13154:3:8",
														"nodeType": "YulTypedName",
														"src": "13154:3:8",
														"type": ""
													}
												],
												"src": "13126:60:8"
											},
											{
												"body": {
													"nativeSrc": "13252:82:8",
													"nodeType": "YulBlock",
													"src": "13252:82:8",
													"statements": [
														{
															"nativeSrc": "13262:66:8",
															"nodeType": "YulAssignment",
															"src": "13262:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13320:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "13320:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "13302:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "13302:17:8"
																				},
																				"nativeSrc": "13302:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13302:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "13293:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "13293:8:8"
																		},
																		"nativeSrc": "13293:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13293:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13275:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13275:17:8"
																},
																"nativeSrc": "13275:53:8",
																"nodeType": "YulFunctionCall",
																"src": "13275:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "13262:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "13262:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "13192:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13232:5:8",
														"nodeType": "YulTypedName",
														"src": "13232:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "13242:9:8",
														"nodeType": "YulTypedName",
														"src": "13242:9:8",
														"type": ""
													}
												],
												"src": "13192:142:8"
											},
											{
												"body": {
													"nativeSrc": "13387:28:8",
													"nodeType": "YulBlock",
													"src": "13387:28:8",
													"statements": [
														{
															"nativeSrc": "13397:12:8",
															"nodeType": "YulAssignment",
															"src": "13397:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "13404:5:8",
																"nodeType": "YulIdentifier",
																"src": "13404:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13397:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13397:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "13340:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13373:5:8",
														"nodeType": "YulTypedName",
														"src": "13373:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13383:3:8",
														"nodeType": "YulTypedName",
														"src": "13383:3:8",
														"type": ""
													}
												],
												"src": "13340:75:8"
											},
											{
												"body": {
													"nativeSrc": "13497:193:8",
													"nodeType": "YulBlock",
													"src": "13497:193:8",
													"statements": [
														{
															"nativeSrc": "13507:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "13507:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "13562:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "13562:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "13531:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "13531:30:8"
																},
																"nativeSrc": "13531:39:8",
																"nodeType": "YulFunctionCall",
																"src": "13531:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "13511:16:8",
																	"nodeType": "YulTypedName",
																	"src": "13511:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "13586:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13586:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "13626:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "13626:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "13620:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "13620:5:8"
																				},
																				"nativeSrc": "13620:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13620:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "13633:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13633:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "13665:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "13665:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "13641:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "13641:23:8"
																				},
																				"nativeSrc": "13641:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13641:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "13592:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "13592:27:8"
																		},
																		"nativeSrc": "13592:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13592:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "13579:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13579:6:8"
																},
																"nativeSrc": "13579:105:8",
																"nodeType": "YulFunctionCall",
																"src": "13579:105:8"
															},
															"nativeSrc": "13579:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "13579:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "13421:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "13474:4:8",
														"nodeType": "YulTypedName",
														"src": "13474:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "13480:6:8",
														"nodeType": "YulTypedName",
														"src": "13480:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "13488:7:8",
														"nodeType": "YulTypedName",
														"src": "13488:7:8",
														"type": ""
													}
												],
												"src": "13421:269:8"
											},
											{
												"body": {
													"nativeSrc": "13745:24:8",
													"nodeType": "YulBlock",
													"src": "13745:24:8",
													"statements": [
														{
															"nativeSrc": "13755:8:8",
															"nodeType": "YulAssignment",
															"src": "13755:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "13762:1:8",
																"nodeType": "YulLiteral",
																"src": "13762:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13755:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13755:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "13696:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13741:3:8",
														"nodeType": "YulTypedName",
														"src": "13741:3:8",
														"type": ""
													}
												],
												"src": "13696:73:8"
											},
											{
												"body": {
													"nativeSrc": "13828:136:8",
													"nodeType": "YulBlock",
													"src": "13828:136:8",
													"statements": [
														{
															"nativeSrc": "13838:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "13838:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "13852:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "13852:30:8"
																},
																"nativeSrc": "13852:32:8",
																"nodeType": "YulFunctionCall",
																"src": "13852:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "13842:6:8",
																	"nodeType": "YulTypedName",
																	"src": "13842:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "13937:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13937:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "13943:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13943:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "13951:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13951:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "13893:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13893:43:8"
																},
																"nativeSrc": "13893:65:8",
																"nodeType": "YulFunctionCall",
																"src": "13893:65:8"
															},
															"nativeSrc": "13893:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "13893:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "13775:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "13814:4:8",
														"nodeType": "YulTypedName",
														"src": "13814:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "13820:6:8",
														"nodeType": "YulTypedName",
														"src": "13820:6:8",
														"type": ""
													}
												],
												"src": "13775:189:8"
											},
											{
												"body": {
													"nativeSrc": "14020:136:8",
													"nodeType": "YulBlock",
													"src": "14020:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "14087:63:8",
																"nodeType": "YulBlock",
																"src": "14087:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "14131:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "14131:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14138:1:8",
																					"nodeType": "YulLiteral",
																					"src": "14138:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "14101:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "14101:29:8"
																			},
																			"nativeSrc": "14101:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14101:39:8"
																		},
																		"nativeSrc": "14101:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14101:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "14040:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "14040:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "14047:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14047:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "14037:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "14037:2:8"
																},
																"nativeSrc": "14037:14:8",
																"nodeType": "YulFunctionCall",
																"src": "14037:14:8"
															},
															"nativeSrc": "14030:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "14052:26:8",
																"nodeType": "YulBlock",
																"src": "14052:26:8",
																"statements": [
																	{
																		"nativeSrc": "14054:22:8",
																		"nodeType": "YulAssignment",
																		"src": "14054:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "14067:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "14067:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14074:1:8",
																					"nodeType": "YulLiteral",
																					"src": "14074:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14063:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "14063:3:8"
																			},
																			"nativeSrc": "14063:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14063:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "14054:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "14054:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "14034:2:8",
																"nodeType": "YulBlock",
																"src": "14034:2:8",
																"statements": []
															},
															"src": "14030:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "13970:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "14008:5:8",
														"nodeType": "YulTypedName",
														"src": "14008:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14015:3:8",
														"nodeType": "YulTypedName",
														"src": "14015:3:8",
														"type": ""
													}
												],
												"src": "13970:186:8"
											},
											{
												"body": {
													"nativeSrc": "14241:464:8",
													"nodeType": "YulBlock",
													"src": "14241:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "14267:431:8",
																"nodeType": "YulBlock",
																"src": "14267:431:8",
																"statements": [
																	{
																		"nativeSrc": "14281:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14281:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "14329:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "14329:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "14297:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "14297:31:8"
																			},
																			"nativeSrc": "14297:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14297:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "14285:8:8",
																				"nodeType": "YulTypedName",
																				"src": "14285:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "14348:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14348:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "14371:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "14371:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "14399:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "14399:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "14381:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "14381:17:8"
																					},
																					"nativeSrc": "14381:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "14381:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14367:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "14367:3:8"
																			},
																			"nativeSrc": "14367:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14367:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "14352:11:8",
																				"nodeType": "YulTypedName",
																				"src": "14352:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "14568:27:8",
																			"nodeType": "YulBlock",
																			"src": "14568:27:8",
																			"statements": [
																				{
																					"nativeSrc": "14570:23:8",
																					"nodeType": "YulAssignment",
																					"src": "14570:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "14585:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "14585:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "14570:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "14570:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "14552:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "14552:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14564:2:8",
																					"nodeType": "YulLiteral",
																					"src": "14564:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "14549:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "14549:2:8"
																			},
																			"nativeSrc": "14549:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14549:18:8"
																		},
																		"nativeSrc": "14546:49:8",
																		"nodeType": "YulIf",
																		"src": "14546:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "14637:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "14637:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "14654:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "14654:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "14682:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "14682:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "14664:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "14664:17:8"
																							},
																							"nativeSrc": "14664:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "14664:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "14650:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "14650:3:8"
																					},
																					"nativeSrc": "14650:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "14650:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "14608:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "14608:28:8"
																			},
																			"nativeSrc": "14608:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14608:80:8"
																		},
																		"nativeSrc": "14608:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14608:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "14258:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14258:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14263:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14263:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14255:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "14255:2:8"
																},
																"nativeSrc": "14255:11:8",
																"nodeType": "YulFunctionCall",
																"src": "14255:11:8"
															},
															"nativeSrc": "14252:446:8",
															"nodeType": "YulIf",
															"src": "14252:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "14162:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "14217:5:8",
														"nodeType": "YulTypedName",
														"src": "14217:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "14224:3:8",
														"nodeType": "YulTypedName",
														"src": "14224:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "14229:10:8",
														"nodeType": "YulTypedName",
														"src": "14229:10:8",
														"type": ""
													}
												],
												"src": "14162:543:8"
											},
											{
												"body": {
													"nativeSrc": "14774:54:8",
													"nodeType": "YulBlock",
													"src": "14774:54:8",
													"statements": [
														{
															"nativeSrc": "14784:37:8",
															"nodeType": "YulAssignment",
															"src": "14784:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "14809:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14809:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14815:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "14815:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "14805:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14805:3:8"
																},
																"nativeSrc": "14805:16:8",
																"nodeType": "YulFunctionCall",
																"src": "14805:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "14784:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "14784:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "14711:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "14749:4:8",
														"nodeType": "YulTypedName",
														"src": "14749:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "14755:5:8",
														"nodeType": "YulTypedName",
														"src": "14755:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "14765:8:8",
														"nodeType": "YulTypedName",
														"src": "14765:8:8",
														"type": ""
													}
												],
												"src": "14711:117:8"
											},
											{
												"body": {
													"nativeSrc": "14885:118:8",
													"nodeType": "YulBlock",
													"src": "14885:118:8",
													"statements": [
														{
															"nativeSrc": "14895:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "14895:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "14944:1:8",
																						"nodeType": "YulLiteral",
																						"src": "14944:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "14947:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "14947:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "14940:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "14940:3:8"
																				},
																				"nativeSrc": "14940:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14940:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "14959:1:8",
																						"nodeType": "YulLiteral",
																						"src": "14959:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "14955:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "14955:3:8"
																				},
																				"nativeSrc": "14955:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14955:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "14911:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "14911:28:8"
																		},
																		"nativeSrc": "14911:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14911:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "14907:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14907:3:8"
																},
																"nativeSrc": "14907:56:8",
																"nodeType": "YulFunctionCall",
																"src": "14907:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14899:4:8",
																	"nodeType": "YulTypedName",
																	"src": "14899:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14972:25:8",
															"nodeType": "YulAssignment",
															"src": "14972:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14986:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14986:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "14992:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14992:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14982:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14982:3:8"
																},
																"nativeSrc": "14982:15:8",
																"nodeType": "YulFunctionCall",
																"src": "14982:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14972:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14972:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "14834:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14862:4:8",
														"nodeType": "YulTypedName",
														"src": "14862:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "14868:5:8",
														"nodeType": "YulTypedName",
														"src": "14868:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14878:6:8",
														"nodeType": "YulTypedName",
														"src": "14878:6:8",
														"type": ""
													}
												],
												"src": "14834:169:8"
											},
											{
												"body": {
													"nativeSrc": "15089:214:8",
													"nodeType": "YulBlock",
													"src": "15089:214:8",
													"statements": [
														{
															"nativeSrc": "15222:37:8",
															"nodeType": "YulAssignment",
															"src": "15222:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15249:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15249:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "15255:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15255:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "15230:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "15230:18:8"
																},
																"nativeSrc": "15230:29:8",
																"nodeType": "YulFunctionCall",
																"src": "15230:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15222:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15222:4:8"
																}
															]
														},
														{
															"nativeSrc": "15268:29:8",
															"nodeType": "YulAssignment",
															"src": "15268:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15279:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15279:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "15289:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15289:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "15292:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "15292:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "15285:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15285:3:8"
																		},
																		"nativeSrc": "15285:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15285:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15276:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "15276:2:8"
																},
																"nativeSrc": "15276:21:8",
																"nodeType": "YulFunctionCall",
																"src": "15276:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "15268:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15268:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "15008:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "15070:4:8",
														"nodeType": "YulTypedName",
														"src": "15070:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15076:3:8",
														"nodeType": "YulTypedName",
														"src": "15076:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "15084:4:8",
														"nodeType": "YulTypedName",
														"src": "15084:4:8",
														"type": ""
													}
												],
												"src": "15008:295:8"
											},
											{
												"body": {
													"nativeSrc": "15400:1303:8",
													"nodeType": "YulBlock",
													"src": "15400:1303:8",
													"statements": [
														{
															"nativeSrc": "15411:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "15411:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "15458:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15458:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "15425:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "15425:32:8"
																},
																"nativeSrc": "15425:37:8",
																"nodeType": "YulFunctionCall",
																"src": "15425:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "15415:6:8",
																	"nodeType": "YulTypedName",
																	"src": "15415:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15547:22:8",
																"nodeType": "YulBlock",
																"src": "15547:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "15549:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "15549:16:8"
																			},
																			"nativeSrc": "15549:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15549:18:8"
																		},
																		"nativeSrc": "15549:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "15549:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "15519:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15519:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15527:18:8",
																		"nodeType": "YulLiteral",
																		"src": "15527:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15516:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "15516:2:8"
																},
																"nativeSrc": "15516:30:8",
																"nodeType": "YulFunctionCall",
																"src": "15516:30:8"
															},
															"nativeSrc": "15513:56:8",
															"nodeType": "YulIf",
															"src": "15513:56:8"
														},
														{
															"nativeSrc": "15579:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "15579:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "15625:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "15625:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "15619:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "15619:5:8"
																		},
																		"nativeSrc": "15619:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15619:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "15593:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "15593:25:8"
																},
																"nativeSrc": "15593:38:8",
																"nodeType": "YulFunctionCall",
																"src": "15593:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "15583:6:8",
																	"nodeType": "YulTypedName",
																	"src": "15583:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15724:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15724:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "15730:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15730:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "15738:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15738:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "15678:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "15678:45:8"
																},
																"nativeSrc": "15678:67:8",
																"nodeType": "YulFunctionCall",
																"src": "15678:67:8"
															},
															"nativeSrc": "15678:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "15678:67:8"
														},
														{
															"nativeSrc": "15755:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "15755:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "15772:1:8",
																"nodeType": "YulLiteral",
																"src": "15772:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "15759:9:8",
																	"nodeType": "YulTypedName",
																	"src": "15759:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15783:17:8",
															"nodeType": "YulAssignment",
															"src": "15783:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "15796:4:8",
																"nodeType": "YulLiteral",
																"src": "15796:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "15783:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "15783:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "15847:611:8",
																		"nodeType": "YulBlock",
																		"src": "15847:611:8",
																		"statements": [
																			{
																				"nativeSrc": "15861:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15861:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "15880:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "15880:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "15892:4:8",
																									"nodeType": "YulLiteral",
																									"src": "15892:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "15888:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "15888:3:8"
																							},
																							"nativeSrc": "15888:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "15888:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "15876:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "15876:3:8"
																					},
																					"nativeSrc": "15876:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "15876:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "15865:7:8",
																						"nodeType": "YulTypedName",
																						"src": "15865:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "15912:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15912:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15958:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "15958:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "15926:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "15926:31:8"
																					},
																					"nativeSrc": "15926:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "15926:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "15916:6:8",
																						"nodeType": "YulTypedName",
																						"src": "15916:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "15976:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15976:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15985:1:8",
																					"nodeType": "YulLiteral",
																					"src": "15985:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "15980:1:8",
																						"nodeType": "YulTypedName",
																						"src": "15980:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "16044:163:8",
																					"nodeType": "YulBlock",
																					"src": "16044:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16069:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "16069:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "16087:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "16087:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "16092:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "16092:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "16083:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "16083:3:8"
																												},
																												"nativeSrc": "16083:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "16083:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "16077:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "16077:5:8"
																										},
																										"nativeSrc": "16077:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "16077:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "16062:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "16062:6:8"
																								},
																								"nativeSrc": "16062:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "16062:42:8"
																							},
																							"nativeSrc": "16062:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "16062:42:8"
																						},
																						{
																							"nativeSrc": "16121:24:8",
																							"nodeType": "YulAssignment",
																							"src": "16121:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16135:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "16135:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16143:1:8",
																										"nodeType": "YulLiteral",
																										"src": "16143:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16131:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "16131:3:8"
																								},
																								"nativeSrc": "16131:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "16131:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "16121:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "16121:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "16162:31:8",
																							"nodeType": "YulAssignment",
																							"src": "16162:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "16179:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "16179:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16190:2:8",
																										"nodeType": "YulLiteral",
																										"src": "16190:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16175:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "16175:3:8"
																								},
																								"nativeSrc": "16175:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "16175:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "16162:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "16162:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "16010:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "16010:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "16013:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "16013:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "16007:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "16007:2:8"
																					},
																					"nativeSrc": "16007:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "16007:14:8"
																				},
																				"nativeSrc": "15999:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "16022:21:8",
																					"nodeType": "YulBlock",
																					"src": "16022:21:8",
																					"statements": [
																						{
																							"nativeSrc": "16024:17:8",
																							"nodeType": "YulAssignment",
																							"src": "16024:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "16033:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "16033:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16036:4:8",
																										"nodeType": "YulLiteral",
																										"src": "16036:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16029:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "16029:3:8"
																								},
																								"nativeSrc": "16029:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "16029:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "16024:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "16024:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "16003:3:8",
																					"nodeType": "YulBlock",
																					"src": "16003:3:8",
																					"statements": []
																				},
																				"src": "15999:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "16243:156:8",
																					"nodeType": "YulBlock",
																					"src": "16243:156:8",
																					"statements": [
																						{
																							"nativeSrc": "16261:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "16261:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "16288:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "16288:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "16293:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "16293:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "16284:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "16284:3:8"
																										},
																										"nativeSrc": "16284:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "16284:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "16278:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "16278:5:8"
																								},
																								"nativeSrc": "16278:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "16278:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "16265:9:8",
																									"nodeType": "YulTypedName",
																									"src": "16265:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16328:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "16328:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "16355:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "16355:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "16370:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "16370:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "16378:4:8",
																														"nodeType": "YulLiteral",
																														"src": "16378:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "16366:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "16366:3:8"
																												},
																												"nativeSrc": "16366:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "16366:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "16336:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "16336:18:8"
																										},
																										"nativeSrc": "16336:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "16336:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "16321:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "16321:6:8"
																								},
																								"nativeSrc": "16321:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "16321:64:8"
																							},
																							"nativeSrc": "16321:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "16321:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "16226:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "16226:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "16235:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "16235:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "16223:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "16223:2:8"
																					},
																					"nativeSrc": "16223:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "16223:19:8"
																				},
																				"nativeSrc": "16220:179:8",
																				"nodeType": "YulIf",
																				"src": "16220:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16419:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "16419:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "16433:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "16433:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "16441:1:8",
																											"nodeType": "YulLiteral",
																											"src": "16441:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "16429:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "16429:3:8"
																									},
																									"nativeSrc": "16429:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "16429:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "16445:1:8",
																									"nodeType": "YulLiteral",
																									"src": "16445:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "16425:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "16425:3:8"
																							},
																							"nativeSrc": "16425:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "16425:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "16412:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "16412:6:8"
																					},
																					"nativeSrc": "16412:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "16412:36:8"
																				},
																				"nativeSrc": "16412:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "16412:36:8"
																			}
																		]
																	},
																	"nativeSrc": "15840:618:8",
																	"nodeType": "YulCase",
																	"src": "15840:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15845:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15845:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "16475:222:8",
																		"nodeType": "YulBlock",
																		"src": "16475:222:8",
																		"statements": [
																			{
																				"nativeSrc": "16489:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16489:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "16502:1:8",
																					"nodeType": "YulLiteral",
																					"src": "16502:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "16493:5:8",
																						"nodeType": "YulTypedName",
																						"src": "16493:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "16526:67:8",
																					"nodeType": "YulBlock",
																					"src": "16526:67:8",
																					"statements": [
																						{
																							"nativeSrc": "16544:35:8",
																							"nodeType": "YulAssignment",
																							"src": "16544:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "16563:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "16563:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "16568:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "16568:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "16559:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "16559:3:8"
																										},
																										"nativeSrc": "16559:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "16559:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "16553:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "16553:5:8"
																								},
																								"nativeSrc": "16553:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "16553:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "16544:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "16544:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "16519:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "16519:6:8"
																				},
																				"nativeSrc": "16516:77:8",
																				"nodeType": "YulIf",
																				"src": "16516:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16613:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "16613:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "16672:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "16672:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "16679:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "16679:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "16619:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "16619:52:8"
																							},
																							"nativeSrc": "16619:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "16619:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "16606:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "16606:6:8"
																					},
																					"nativeSrc": "16606:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "16606:81:8"
																				},
																				"nativeSrc": "16606:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "16606:81:8"
																			}
																		]
																	},
																	"nativeSrc": "16467:230:8",
																	"nodeType": "YulCase",
																	"src": "16467:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "15820:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15820:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15828:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15828:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15817:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "15817:2:8"
																},
																"nativeSrc": "15817:14:8",
																"nodeType": "YulFunctionCall",
																"src": "15817:14:8"
															},
															"nativeSrc": "15810:887:8",
															"nodeType": "YulSwitch",
															"src": "15810:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "15308:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15389:4:8",
														"nodeType": "YulTypedName",
														"src": "15389:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "15395:3:8",
														"nodeType": "YulTypedName",
														"src": "15395:3:8",
														"type": ""
													}
												],
												"src": "15308:1395:8"
											},
											{
												"body": {
													"nativeSrc": "16737:152:8",
													"nodeType": "YulBlock",
													"src": "16737:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16754:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16754:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16757:77:8",
																		"nodeType": "YulLiteral",
																		"src": "16757:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16747:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16747:6:8"
																},
																"nativeSrc": "16747:88:8",
																"nodeType": "YulFunctionCall",
																"src": "16747:88:8"
															},
															"nativeSrc": "16747:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "16747:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16851:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16851:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16854:4:8",
																		"nodeType": "YulLiteral",
																		"src": "16854:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16844:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16844:6:8"
																},
																"nativeSrc": "16844:15:8",
																"nodeType": "YulFunctionCall",
																"src": "16844:15:8"
															},
															"nativeSrc": "16844:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "16844:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16875:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16875:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16878:4:8",
																		"nodeType": "YulLiteral",
																		"src": "16878:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16868:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16868:6:8"
																},
																"nativeSrc": "16868:15:8",
																"nodeType": "YulFunctionCall",
																"src": "16868:15:8"
															},
															"nativeSrc": "16868:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "16868:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "16709:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "16709:180:8"
											},
											{
												"body": {
													"nativeSrc": "16936:126:8",
													"nodeType": "YulBlock",
													"src": "16936:126:8",
													"statements": [
														{
															"nativeSrc": "16946:31:8",
															"nodeType": "YulAssignment",
															"src": "16946:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16971:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "16971:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "16955:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "16955:15:8"
																},
																"nativeSrc": "16955:22:8",
																"nodeType": "YulFunctionCall",
																"src": "16955:22:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16946:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "16946:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17005:22:8",
																"nodeType": "YulBlock",
																"src": "17005:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17007:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "17007:16:8"
																			},
																			"nativeSrc": "17007:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "17007:18:8"
																		},
																		"nativeSrc": "17007:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "17007:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16992:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "16992:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16999:4:8",
																		"nodeType": "YulLiteral",
																		"src": "16999:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "16989:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "16989:2:8"
																},
																"nativeSrc": "16989:15:8",
																"nodeType": "YulFunctionCall",
																"src": "16989:15:8"
															},
															"nativeSrc": "16986:41:8",
															"nodeType": "YulIf",
															"src": "16986:41:8"
														},
														{
															"nativeSrc": "17036:20:8",
															"nodeType": "YulAssignment",
															"src": "17036:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17047:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "17047:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17054:1:8",
																		"nodeType": "YulLiteral",
																		"src": "17054:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17043:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17043:3:8"
																},
																"nativeSrc": "17043:13:8",
																"nodeType": "YulFunctionCall",
																"src": "17043:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17036:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17036:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nativeSrc": "16895:167:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16922:5:8",
														"nodeType": "YulTypedName",
														"src": "16922:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16932:3:8",
														"nodeType": "YulTypedName",
														"src": "16932:3:8",
														"type": ""
													}
												],
												"src": "16895:167:8"
											},
											{
												"body": {
													"nativeSrc": "17174:63:8",
													"nodeType": "YulBlock",
													"src": "17174:63:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17196:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "17196:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17204:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17204:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17192:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17192:3:8"
																		},
																		"nativeSrc": "17192:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17192:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "17208:21:8",
																		"nodeType": "YulLiteral",
																		"src": "17208:21:8",
																		"type": "",
																		"value": "Insufficient amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17185:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17185:6:8"
																},
																"nativeSrc": "17185:45:8",
																"nodeType": "YulFunctionCall",
																"src": "17185:45:8"
															},
															"nativeSrc": "17185:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "17185:45:8"
														}
													]
												},
												"name": "store_literal_in_memory_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496",
												"nativeSrc": "17068:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17166:6:8",
														"nodeType": "YulTypedName",
														"src": "17166:6:8",
														"type": ""
													}
												],
												"src": "17068:169:8"
											},
											{
												"body": {
													"nativeSrc": "17389:220:8",
													"nodeType": "YulBlock",
													"src": "17389:220:8",
													"statements": [
														{
															"nativeSrc": "17399:74:8",
															"nodeType": "YulAssignment",
															"src": "17399:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17465:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17465:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17470:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17470:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17406:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "17406:58:8"
																},
																"nativeSrc": "17406:67:8",
																"nodeType": "YulFunctionCall",
																"src": "17406:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17399:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17399:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17571:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17571:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496",
																	"nativeSrc": "17482:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "17482:88:8"
																},
																"nativeSrc": "17482:93:8",
																"nodeType": "YulFunctionCall",
																"src": "17482:93:8"
															},
															"nativeSrc": "17482:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "17482:93:8"
														},
														{
															"nativeSrc": "17584:19:8",
															"nodeType": "YulAssignment",
															"src": "17584:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17595:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17595:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17600:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17600:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17591:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17591:3:8"
																},
																"nativeSrc": "17591:12:8",
																"nodeType": "YulFunctionCall",
																"src": "17591:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17584:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17584:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17243:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17377:3:8",
														"nodeType": "YulTypedName",
														"src": "17377:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17385:3:8",
														"nodeType": "YulTypedName",
														"src": "17385:3:8",
														"type": ""
													}
												],
												"src": "17243:366:8"
											},
											{
												"body": {
													"nativeSrc": "17786:248:8",
													"nodeType": "YulBlock",
													"src": "17786:248:8",
													"statements": [
														{
															"nativeSrc": "17796:26:8",
															"nodeType": "YulAssignment",
															"src": "17796:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17808:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "17808:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17819:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17819:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17804:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17804:3:8"
																},
																"nativeSrc": "17804:18:8",
																"nodeType": "YulFunctionCall",
																"src": "17804:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17796:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17796:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17843:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17843:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17854:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17854:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17839:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17839:3:8"
																		},
																		"nativeSrc": "17839:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17839:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17862:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "17862:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17868:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17868:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17858:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17858:3:8"
																		},
																		"nativeSrc": "17858:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17858:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17832:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17832:6:8"
																},
																"nativeSrc": "17832:47:8",
																"nodeType": "YulFunctionCall",
																"src": "17832:47:8"
															},
															"nativeSrc": "17832:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "17832:47:8"
														},
														{
															"nativeSrc": "17888:139:8",
															"nodeType": "YulAssignment",
															"src": "17888:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18022:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "18022:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17896:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "17896:124:8"
																},
																"nativeSrc": "17896:131:8",
																"nodeType": "YulFunctionCall",
																"src": "17896:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17888:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17888:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17615:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17766:9:8",
														"nodeType": "YulTypedName",
														"src": "17766:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17781:4:8",
														"nodeType": "YulTypedName",
														"src": "17781:4:8",
														"type": ""
													}
												],
												"src": "17615:419:8"
											},
											{
												"body": {
													"nativeSrc": "18146:58:8",
													"nodeType": "YulBlock",
													"src": "18146:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18168:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "18168:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18176:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18176:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18164:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18164:3:8"
																		},
																		"nativeSrc": "18164:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18164:14:8"
																	},
																	{
																		"hexValue": "4974656d206e6f7420666f756e64",
																		"kind": "string",
																		"nativeSrc": "18180:16:8",
																		"nodeType": "YulLiteral",
																		"src": "18180:16:8",
																		"type": "",
																		"value": "Item not found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18157:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18157:6:8"
																},
																"nativeSrc": "18157:40:8",
																"nodeType": "YulFunctionCall",
																"src": "18157:40:8"
															},
															"nativeSrc": "18157:40:8",
															"nodeType": "YulExpressionStatement",
															"src": "18157:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c",
												"nativeSrc": "18040:164:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18138:6:8",
														"nodeType": "YulTypedName",
														"src": "18138:6:8",
														"type": ""
													}
												],
												"src": "18040:164:8"
											},
											{
												"body": {
													"nativeSrc": "18356:220:8",
													"nodeType": "YulBlock",
													"src": "18356:220:8",
													"statements": [
														{
															"nativeSrc": "18366:74:8",
															"nodeType": "YulAssignment",
															"src": "18366:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18432:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18432:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18437:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18437:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18373:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "18373:58:8"
																},
																"nativeSrc": "18373:67:8",
																"nodeType": "YulFunctionCall",
																"src": "18373:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18366:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18366:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18538:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18538:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c",
																	"nativeSrc": "18449:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "18449:88:8"
																},
																"nativeSrc": "18449:93:8",
																"nodeType": "YulFunctionCall",
																"src": "18449:93:8"
															},
															"nativeSrc": "18449:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "18449:93:8"
														},
														{
															"nativeSrc": "18551:19:8",
															"nodeType": "YulAssignment",
															"src": "18551:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18562:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18562:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18567:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18567:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18558:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18558:3:8"
																},
																"nativeSrc": "18558:12:8",
																"nodeType": "YulFunctionCall",
																"src": "18558:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18551:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18551:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18210:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18344:3:8",
														"nodeType": "YulTypedName",
														"src": "18344:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18352:3:8",
														"nodeType": "YulTypedName",
														"src": "18352:3:8",
														"type": ""
													}
												],
												"src": "18210:366:8"
											},
											{
												"body": {
													"nativeSrc": "18753:248:8",
													"nodeType": "YulBlock",
													"src": "18753:248:8",
													"statements": [
														{
															"nativeSrc": "18763:26:8",
															"nodeType": "YulAssignment",
															"src": "18763:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18775:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "18775:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18786:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18786:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18771:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18771:3:8"
																},
																"nativeSrc": "18771:18:8",
																"nodeType": "YulFunctionCall",
																"src": "18771:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18763:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18763:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18810:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18810:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18821:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18821:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18806:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18806:3:8"
																		},
																		"nativeSrc": "18806:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18806:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18829:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "18829:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18835:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18835:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18825:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18825:3:8"
																		},
																		"nativeSrc": "18825:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18825:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18799:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18799:6:8"
																},
																"nativeSrc": "18799:47:8",
																"nodeType": "YulFunctionCall",
																"src": "18799:47:8"
															},
															"nativeSrc": "18799:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "18799:47:8"
														},
														{
															"nativeSrc": "18855:139:8",
															"nodeType": "YulAssignment",
															"src": "18855:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18989:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "18989:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18863:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "18863:124:8"
																},
																"nativeSrc": "18863:131:8",
																"nodeType": "YulFunctionCall",
																"src": "18863:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18855:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18855:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18582:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18733:9:8",
														"nodeType": "YulTypedName",
														"src": "18733:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18748:4:8",
														"nodeType": "YulTypedName",
														"src": "18748:4:8",
														"type": ""
													}
												],
												"src": "18582:419:8"
											},
											{
												"body": {
													"nativeSrc": "19120:742:8",
													"nodeType": "YulBlock",
													"src": "19120:742:8",
													"statements": [
														{
															"nativeSrc": "19130:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "19130:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19153:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "19153:5:8"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "19147:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "19147:5:8"
																},
																"nativeSrc": "19147:12:8",
																"nodeType": "YulFunctionCall",
																"src": "19147:12:8"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nativeSrc": "19134:9:8",
																	"nodeType": "YulTypedName",
																	"src": "19134:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19168:50:8",
															"nodeType": "YulVariableDeclaration",
															"src": "19168:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "19208:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "19208:9:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "19182:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "19182:25:8"
																},
																"nativeSrc": "19182:36:8",
																"nodeType": "YulFunctionCall",
																"src": "19182:36:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19172:6:8",
																	"nodeType": "YulTypedName",
																	"src": "19172:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19227:78:8",
															"nodeType": "YulAssignment",
															"src": "19227:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19293:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19293:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19298:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "19298:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19234:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "19234:58:8"
																},
																"nativeSrc": "19234:71:8",
																"nodeType": "YulFunctionCall",
																"src": "19234:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19227:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19227:3:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "19354:157:8",
																		"nodeType": "YulBlock",
																		"src": "19354:157:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "19407:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "19407:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nativeSrc": "19416:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "19416:9:8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "19431:4:8",
																											"nodeType": "YulLiteral",
																											"src": "19431:4:8",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "19427:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "19427:3:8"
																									},
																									"nativeSrc": "19427:9:8",
																									"nodeType": "YulFunctionCall",
																									"src": "19427:9:8"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "19412:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "19412:3:8"
																							},
																							"nativeSrc": "19412:25:8",
																							"nodeType": "YulFunctionCall",
																							"src": "19412:25:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "19400:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "19400:6:8"
																					},
																					"nativeSrc": "19400:38:8",
																					"nodeType": "YulFunctionCall",
																					"src": "19400:38:8"
																				},
																				"nativeSrc": "19400:38:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "19400:38:8"
																			},
																			{
																				"nativeSrc": "19451:50:8",
																				"nodeType": "YulAssignment",
																				"src": "19451:50:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "19462:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "19462:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "19471:4:8",
																									"nodeType": "YulLiteral",
																									"src": "19471:4:8",
																									"type": "",
																									"value": "0x20"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nativeSrc": "19491:6:8",
																													"nodeType": "YulIdentifier",
																													"src": "19491:6:8"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "19484:6:8",
																												"nodeType": "YulIdentifier",
																												"src": "19484:6:8"
																											},
																											"nativeSrc": "19484:14:8",
																											"nodeType": "YulFunctionCall",
																											"src": "19484:14:8"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "19477:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "19477:6:8"
																									},
																									"nativeSrc": "19477:22:8",
																									"nodeType": "YulFunctionCall",
																									"src": "19477:22:8"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "19467:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "19467:3:8"
																							},
																							"nativeSrc": "19467:33:8",
																							"nodeType": "YulFunctionCall",
																							"src": "19467:33:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "19458:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "19458:3:8"
																					},
																					"nativeSrc": "19458:43:8",
																					"nodeType": "YulFunctionCall",
																					"src": "19458:43:8"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "19451:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "19451:3:8"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "19347:164:8",
																	"nodeType": "YulCase",
																	"src": "19347:164:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19352:1:8",
																		"nodeType": "YulLiteral",
																		"src": "19352:1:8",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "19527:329:8",
																		"nodeType": "YulBlock",
																		"src": "19527:329:8",
																		"statements": [
																			{
																				"nativeSrc": "19572:53:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19572:53:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "19619:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "19619:5:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "19587:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "19587:31:8"
																					},
																					"nativeSrc": "19587:38:8",
																					"nodeType": "YulFunctionCall",
																					"src": "19587:38:8"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nativeSrc": "19576:7:8",
																						"nodeType": "YulTypedName",
																						"src": "19576:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19638:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19638:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19647:1:8",
																					"nodeType": "YulLiteral",
																					"src": "19647:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "19642:1:8",
																						"nodeType": "YulTypedName",
																						"src": "19642:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19705:110:8",
																					"nodeType": "YulBlock",
																					"src": "19705:110:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nativeSrc": "19734:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "19734:3:8"
																											},
																											{
																												"name": "i",
																												"nativeSrc": "19739:1:8",
																												"nodeType": "YulIdentifier",
																												"src": "19739:1:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19730:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "19730:3:8"
																										},
																										"nativeSrc": "19730:11:8",
																										"nodeType": "YulFunctionCall",
																										"src": "19730:11:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nativeSrc": "19749:7:8",
																												"nodeType": "YulIdentifier",
																												"src": "19749:7:8"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "19743:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "19743:5:8"
																										},
																										"nativeSrc": "19743:14:8",
																										"nodeType": "YulFunctionCall",
																										"src": "19743:14:8"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "19723:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "19723:6:8"
																								},
																								"nativeSrc": "19723:35:8",
																								"nodeType": "YulFunctionCall",
																								"src": "19723:35:8"
																							},
																							"nativeSrc": "19723:35:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "19723:35:8"
																						},
																						{
																							"nativeSrc": "19775:26:8",
																							"nodeType": "YulAssignment",
																							"src": "19775:26:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nativeSrc": "19790:7:8",
																										"nodeType": "YulIdentifier",
																										"src": "19790:7:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19799:1:8",
																										"nodeType": "YulLiteral",
																										"src": "19799:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19786:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "19786:3:8"
																								},
																								"nativeSrc": "19786:15:8",
																								"nodeType": "YulFunctionCall",
																								"src": "19786:15:8"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nativeSrc": "19775:7:8",
																									"nodeType": "YulIdentifier",
																									"src": "19775:7:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "19672:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "19672:1:8"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "19675:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "19675:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19669:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "19669:2:8"
																					},
																					"nativeSrc": "19669:13:8",
																					"nodeType": "YulFunctionCall",
																					"src": "19669:13:8"
																				},
																				"nativeSrc": "19661:154:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "19683:21:8",
																					"nodeType": "YulBlock",
																					"src": "19683:21:8",
																					"statements": [
																						{
																							"nativeSrc": "19685:17:8",
																							"nodeType": "YulAssignment",
																							"src": "19685:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "19694:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "19694:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19697:4:8",
																										"nodeType": "YulLiteral",
																										"src": "19697:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19690:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "19690:3:8"
																								},
																								"nativeSrc": "19690:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "19690:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "19685:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "19685:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "19665:3:8",
																					"nodeType": "YulBlock",
																					"src": "19665:3:8",
																					"statements": []
																				},
																				"src": "19661:154:8"
																			},
																			{
																				"nativeSrc": "19828:18:8",
																				"nodeType": "YulAssignment",
																				"src": "19828:18:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "19839:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "19839:3:8"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "19844:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "19844:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "19835:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "19835:3:8"
																					},
																					"nativeSrc": "19835:11:8",
																					"nodeType": "YulFunctionCall",
																					"src": "19835:11:8"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "19828:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "19828:3:8"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "19520:336:8",
																	"nodeType": "YulCase",
																	"src": "19520:336:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19525:1:8",
																		"nodeType": "YulLiteral",
																		"src": "19525:1:8",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "19325:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "19325:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19336:1:8",
																		"nodeType": "YulLiteral",
																		"src": "19336:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19321:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19321:3:8"
																},
																"nativeSrc": "19321:17:8",
																"nodeType": "YulFunctionCall",
																"src": "19321:17:8"
															},
															"nativeSrc": "19314:542:8",
															"nodeType": "YulSwitch",
															"src": "19314:542:8"
														}
													]
												},
												"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19031:831:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19101:5:8",
														"nodeType": "YulTypedName",
														"src": "19101:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19108:3:8",
														"nodeType": "YulTypedName",
														"src": "19108:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19116:3:8",
														"nodeType": "YulTypedName",
														"src": "19116:3:8",
														"type": ""
													}
												],
												"src": "19031:831:8"
											},
											{
												"body": {
													"nativeSrc": "20035:352:8",
													"nodeType": "YulBlock",
													"src": "20035:352:8",
													"statements": [
														{
															"nativeSrc": "20045:26:8",
															"nodeType": "YulAssignment",
															"src": "20045:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20057:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "20057:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20068:2:8",
																		"nodeType": "YulLiteral",
																		"src": "20068:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20053:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20053:3:8"
																},
																"nativeSrc": "20053:18:8",
																"nodeType": "YulFunctionCall",
																"src": "20053:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20045:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "20045:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20121:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20121:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20134:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20134:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20145:1:8",
																				"nodeType": "YulLiteral",
																				"src": "20145:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20130:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20130:3:8"
																		},
																		"nativeSrc": "20130:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20130:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "20081:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "20081:39:8"
																},
																"nativeSrc": "20081:67:8",
																"nodeType": "YulFunctionCall",
																"src": "20081:67:8"
															},
															"nativeSrc": "20081:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "20081:67:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20169:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20169:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20180:2:8",
																				"nodeType": "YulLiteral",
																				"src": "20180:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20165:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20165:3:8"
																		},
																		"nativeSrc": "20165:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20165:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20189:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "20189:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20195:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20195:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20185:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20185:3:8"
																		},
																		"nativeSrc": "20185:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20185:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20158:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20158:6:8"
																},
																"nativeSrc": "20158:48:8",
																"nodeType": "YulFunctionCall",
																"src": "20158:48:8"
															},
															"nativeSrc": "20158:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "20158:48:8"
														},
														{
															"nativeSrc": "20215:83:8",
															"nodeType": "YulAssignment",
															"src": "20215:83:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20284:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20284:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "20293:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "20293:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20223:60:8",
																	"nodeType": "YulIdentifier",
																	"src": "20223:60:8"
																},
																"nativeSrc": "20223:75:8",
																"nodeType": "YulFunctionCall",
																"src": "20223:75:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20215:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "20215:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20352:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20352:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20365:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20365:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20376:2:8",
																				"nodeType": "YulLiteral",
																				"src": "20376:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20361:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20361:3:8"
																		},
																		"nativeSrc": "20361:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20361:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20308:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "20308:43:8"
																},
																"nativeSrc": "20308:72:8",
																"nodeType": "YulFunctionCall",
																"src": "20308:72:8"
															},
															"nativeSrc": "20308:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "20308:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8_t_string_storage_t_uint256__to_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "19868:519:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19991:9:8",
														"nodeType": "YulTypedName",
														"src": "19991:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20003:6:8",
														"nodeType": "YulTypedName",
														"src": "20003:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20011:6:8",
														"nodeType": "YulTypedName",
														"src": "20011:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20019:6:8",
														"nodeType": "YulTypedName",
														"src": "20019:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20030:4:8",
														"nodeType": "YulTypedName",
														"src": "20030:4:8",
														"type": ""
													}
												],
												"src": "19868:519:8"
											},
											{
												"body": {
													"nativeSrc": "20440:32:8",
													"nodeType": "YulBlock",
													"src": "20440:32:8",
													"statements": [
														{
															"nativeSrc": "20450:16:8",
															"nodeType": "YulAssignment",
															"src": "20450:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "20461:5:8",
																"nodeType": "YulIdentifier",
																"src": "20461:5:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "20450:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "20450:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "20393:79:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20422:5:8",
														"nodeType": "YulTypedName",
														"src": "20422:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "20432:7:8",
														"nodeType": "YulTypedName",
														"src": "20432:7:8",
														"type": ""
													}
												],
												"src": "20393:79:8"
											},
											{
												"body": {
													"nativeSrc": "20561:74:8",
													"nodeType": "YulBlock",
													"src": "20561:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20578:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "20578:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20621:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "20621:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "20603:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "20603:17:8"
																				},
																				"nativeSrc": "20603:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "20603:24:8"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "20583:19:8",
																			"nodeType": "YulIdentifier",
																			"src": "20583:19:8"
																		},
																		"nativeSrc": "20583:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20583:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20571:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20571:6:8"
																},
																"nativeSrc": "20571:58:8",
																"nodeType": "YulFunctionCall",
																"src": "20571:58:8"
															},
															"nativeSrc": "20571:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "20571:58:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "20478:157:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20549:5:8",
														"nodeType": "YulTypedName",
														"src": "20549:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20556:3:8",
														"nodeType": "YulTypedName",
														"src": "20556:3:8",
														"type": ""
													}
												],
												"src": "20478:157:8"
											},
											{
												"body": {
													"nativeSrc": "20683:52:8",
													"nodeType": "YulBlock",
													"src": "20683:52:8",
													"statements": [
														{
															"nativeSrc": "20693:35:8",
															"nodeType": "YulAssignment",
															"src": "20693:35:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20718:2:8",
																		"nodeType": "YulLiteral",
																		"src": "20718:2:8",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "20722:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "20722:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "20714:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20714:3:8"
																},
																"nativeSrc": "20714:14:8",
																"nodeType": "YulFunctionCall",
																"src": "20714:14:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "20693:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "20693:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "20641:94:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20664:5:8",
														"nodeType": "YulTypedName",
														"src": "20664:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "20674:8:8",
														"nodeType": "YulTypedName",
														"src": "20674:8:8",
														"type": ""
													}
												],
												"src": "20641:94:8"
											},
											{
												"body": {
													"nativeSrc": "20788:47:8",
													"nodeType": "YulBlock",
													"src": "20788:47:8",
													"statements": [
														{
															"nativeSrc": "20798:31:8",
															"nodeType": "YulAssignment",
															"src": "20798:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20823:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "20823:5:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "20809:13:8",
																	"nodeType": "YulIdentifier",
																	"src": "20809:13:8"
																},
																"nativeSrc": "20809:20:8",
																"nodeType": "YulFunctionCall",
																"src": "20809:20:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "20798:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "20798:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "20741:94:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20770:5:8",
														"nodeType": "YulTypedName",
														"src": "20770:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "20780:7:8",
														"nodeType": "YulTypedName",
														"src": "20780:7:8",
														"type": ""
													}
												],
												"src": "20741:94:8"
											},
											{
												"body": {
													"nativeSrc": "20888:53:8",
													"nodeType": "YulBlock",
													"src": "20888:53:8",
													"statements": [
														{
															"nativeSrc": "20898:37:8",
															"nodeType": "YulAssignment",
															"src": "20898:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20929:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "20929:5:8"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "20909:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "20909:19:8"
																},
																"nativeSrc": "20909:26:8",
																"nodeType": "YulFunctionCall",
																"src": "20909:26:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "20898:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "20898:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "20841:100:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20870:5:8",
														"nodeType": "YulTypedName",
														"src": "20870:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "20880:7:8",
														"nodeType": "YulTypedName",
														"src": "20880:7:8",
														"type": ""
													}
												],
												"src": "20841:100:8"
											},
											{
												"body": {
													"nativeSrc": "21030:74:8",
													"nodeType": "YulBlock",
													"src": "21030:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21047:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21047:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "21090:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "21090:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "21072:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "21072:17:8"
																				},
																				"nativeSrc": "21072:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "21072:24:8"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "21052:19:8",
																			"nodeType": "YulIdentifier",
																			"src": "21052:19:8"
																		},
																		"nativeSrc": "21052:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21052:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21040:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "21040:6:8"
																},
																"nativeSrc": "21040:58:8",
																"nodeType": "YulFunctionCall",
																"src": "21040:58:8"
															},
															"nativeSrc": "21040:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "21040:58:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "20947:157:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21018:5:8",
														"nodeType": "YulTypedName",
														"src": "21018:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21025:3:8",
														"nodeType": "YulTypedName",
														"src": "21025:3:8",
														"type": ""
													}
												],
												"src": "20947:157:8"
											},
											{
												"body": {
													"nativeSrc": "21254:253:8",
													"nodeType": "YulBlock",
													"src": "21254:253:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21327:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "21327:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21336:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21336:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "21265:61:8",
																	"nodeType": "YulIdentifier",
																	"src": "21265:61:8"
																},
																"nativeSrc": "21265:75:8",
																"nodeType": "YulFunctionCall",
																"src": "21265:75:8"
															},
															"nativeSrc": "21265:75:8",
															"nodeType": "YulExpressionStatement",
															"src": "21265:75:8"
														},
														{
															"nativeSrc": "21349:19:8",
															"nodeType": "YulAssignment",
															"src": "21349:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21360:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21360:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21365:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21365:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21356:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21356:3:8"
																},
																"nativeSrc": "21356:12:8",
																"nodeType": "YulFunctionCall",
																"src": "21356:12:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21349:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21349:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21440:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "21440:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21449:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21449:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "21378:61:8",
																	"nodeType": "YulIdentifier",
																	"src": "21378:61:8"
																},
																"nativeSrc": "21378:75:8",
																"nodeType": "YulFunctionCall",
																"src": "21378:75:8"
															},
															"nativeSrc": "21378:75:8",
															"nodeType": "YulExpressionStatement",
															"src": "21378:75:8"
														},
														{
															"nativeSrc": "21462:19:8",
															"nodeType": "YulAssignment",
															"src": "21462:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21473:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21473:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21478:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21478:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21469:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21469:3:8"
																},
																"nativeSrc": "21469:12:8",
																"nodeType": "YulFunctionCall",
																"src": "21469:12:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21462:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21462:3:8"
																}
															]
														},
														{
															"nativeSrc": "21491:10:8",
															"nodeType": "YulAssignment",
															"src": "21491:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "21498:3:8",
																"nodeType": "YulIdentifier",
																"src": "21498:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21491:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21491:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "21110:397:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21225:3:8",
														"nodeType": "YulTypedName",
														"src": "21225:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21231:6:8",
														"nodeType": "YulTypedName",
														"src": "21231:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21239:6:8",
														"nodeType": "YulTypedName",
														"src": "21239:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21250:3:8",
														"nodeType": "YulTypedName",
														"src": "21250:3:8",
														"type": ""
													}
												],
												"src": "21110:397:8"
											},
											{
												"body": {
													"nativeSrc": "21541:152:8",
													"nodeType": "YulBlock",
													"src": "21541:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21558:1:8",
																		"nodeType": "YulLiteral",
																		"src": "21558:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21561:77:8",
																		"nodeType": "YulLiteral",
																		"src": "21561:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21551:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "21551:6:8"
																},
																"nativeSrc": "21551:88:8",
																"nodeType": "YulFunctionCall",
																"src": "21551:88:8"
															},
															"nativeSrc": "21551:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "21551:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21655:1:8",
																		"nodeType": "YulLiteral",
																		"src": "21655:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21658:4:8",
																		"nodeType": "YulLiteral",
																		"src": "21658:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21648:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "21648:6:8"
																},
																"nativeSrc": "21648:15:8",
																"nodeType": "YulFunctionCall",
																"src": "21648:15:8"
															},
															"nativeSrc": "21648:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "21648:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21679:1:8",
																		"nodeType": "YulLiteral",
																		"src": "21679:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21682:4:8",
																		"nodeType": "YulLiteral",
																		"src": "21682:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21672:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "21672:6:8"
																},
																"nativeSrc": "21672:15:8",
																"nodeType": "YulFunctionCall",
																"src": "21672:15:8"
															},
															"nativeSrc": "21672:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "21672:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "21513:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "21513:180:8"
											},
											{
												"body": {
													"nativeSrc": "21733:142:8",
													"nodeType": "YulBlock",
													"src": "21733:142:8",
													"statements": [
														{
															"nativeSrc": "21743:25:8",
															"nodeType": "YulAssignment",
															"src": "21743:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21766:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21766:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21748:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "21748:17:8"
																},
																"nativeSrc": "21748:20:8",
																"nodeType": "YulFunctionCall",
																"src": "21748:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21743:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "21743:1:8"
																}
															]
														},
														{
															"nativeSrc": "21777:25:8",
															"nodeType": "YulAssignment",
															"src": "21777:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21800:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21800:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21782:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "21782:17:8"
																},
																"nativeSrc": "21782:20:8",
																"nodeType": "YulFunctionCall",
																"src": "21782:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21777:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "21777:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21824:22:8",
																"nodeType": "YulBlock",
																"src": "21824:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "21826:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "21826:16:8"
																			},
																			"nativeSrc": "21826:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "21826:18:8"
																		},
																		"nativeSrc": "21826:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "21826:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21821:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21821:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21814:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "21814:6:8"
																},
																"nativeSrc": "21814:9:8",
																"nodeType": "YulFunctionCall",
																"src": "21814:9:8"
															},
															"nativeSrc": "21811:35:8",
															"nodeType": "YulIf",
															"src": "21811:35:8"
														},
														{
															"nativeSrc": "21855:14:8",
															"nodeType": "YulAssignment",
															"src": "21855:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21864:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21864:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21867:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21867:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "21860:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21860:3:8"
																},
																"nativeSrc": "21860:9:8",
																"nodeType": "YulFunctionCall",
																"src": "21860:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "21855:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "21855:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "21699:176:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21722:1:8",
														"nodeType": "YulTypedName",
														"src": "21722:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21725:1:8",
														"nodeType": "YulTypedName",
														"src": "21725:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "21731:1:8",
														"nodeType": "YulTypedName",
														"src": "21731:1:8",
														"type": ""
													}
												],
												"src": "21699:176:8"
											},
											{
												"body": {
													"nativeSrc": "21929:362:8",
													"nodeType": "YulBlock",
													"src": "21929:362:8",
													"statements": [
														{
															"nativeSrc": "21939:25:8",
															"nodeType": "YulAssignment",
															"src": "21939:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21962:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21962:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21944:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "21944:17:8"
																},
																"nativeSrc": "21944:20:8",
																"nodeType": "YulFunctionCall",
																"src": "21944:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21939:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "21939:1:8"
																}
															]
														},
														{
															"nativeSrc": "21973:25:8",
															"nodeType": "YulAssignment",
															"src": "21973:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21996:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21996:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21978:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "21978:17:8"
																},
																"nativeSrc": "21978:20:8",
																"nodeType": "YulFunctionCall",
																"src": "21978:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21973:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "21973:1:8"
																}
															]
														},
														{
															"nativeSrc": "22007:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "22007:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22030:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "22030:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "22033:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "22033:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "22026:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22026:3:8"
																},
																"nativeSrc": "22026:9:8",
																"nodeType": "YulFunctionCall",
																"src": "22026:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "22011:11:8",
																	"nodeType": "YulTypedName",
																	"src": "22011:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22044:41:8",
															"nodeType": "YulAssignment",
															"src": "22044:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "22073:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "22073:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22055:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "22055:17:8"
																},
																"nativeSrc": "22055:30:8",
																"nodeType": "YulFunctionCall",
																"src": "22055:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "22044:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "22044:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22262:22:8",
																"nodeType": "YulBlock",
																"src": "22262:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "22264:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "22264:16:8"
																			},
																			"nativeSrc": "22264:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "22264:18:8"
																		},
																		"nativeSrc": "22264:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "22264:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "22195:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "22195:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "22188:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "22188:6:8"
																				},
																				"nativeSrc": "22188:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "22188:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "22218:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "22218:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "22225:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "22225:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "22234:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "22234:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "22221:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "22221:3:8"
																						},
																						"nativeSrc": "22221:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "22221:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "22215:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "22215:2:8"
																				},
																				"nativeSrc": "22215:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "22215:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "22168:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "22168:2:8"
																		},
																		"nativeSrc": "22168:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "22168:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "22148:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "22148:6:8"
																},
																"nativeSrc": "22148:113:8",
																"nodeType": "YulFunctionCall",
																"src": "22148:113:8"
															},
															"nativeSrc": "22145:139:8",
															"nodeType": "YulIf",
															"src": "22145:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "21881:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21912:1:8",
														"nodeType": "YulTypedName",
														"src": "21912:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21915:1:8",
														"nodeType": "YulTypedName",
														"src": "21915:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "21921:7:8",
														"nodeType": "YulTypedName",
														"src": "21921:7:8",
														"type": ""
													}
												],
												"src": "21881:410:8"
											},
											{
												"body": {
													"nativeSrc": "22403:47:8",
													"nodeType": "YulBlock",
													"src": "22403:47:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22425:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "22425:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22433:1:8",
																				"nodeType": "YulLiteral",
																				"src": "22433:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22421:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "22421:3:8"
																		},
																		"nativeSrc": "22421:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "22421:14:8"
																	},
																	{
																		"hexValue": "776f6e",
																		"kind": "string",
																		"nativeSrc": "22437:5:8",
																		"nodeType": "YulLiteral",
																		"src": "22437:5:8",
																		"type": "",
																		"value": "won"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "22414:6:8"
																},
																"nativeSrc": "22414:29:8",
																"nodeType": "YulFunctionCall",
																"src": "22414:29:8"
															},
															"nativeSrc": "22414:29:8",
															"nodeType": "YulExpressionStatement",
															"src": "22414:29:8"
														}
													]
												},
												"name": "store_literal_in_memory_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427",
												"nativeSrc": "22297:153:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22395:6:8",
														"nodeType": "YulTypedName",
														"src": "22395:6:8",
														"type": ""
													}
												],
												"src": "22297:153:8"
											},
											{
												"body": {
													"nativeSrc": "22602:219:8",
													"nodeType": "YulBlock",
													"src": "22602:219:8",
													"statements": [
														{
															"nativeSrc": "22612:73:8",
															"nodeType": "YulAssignment",
															"src": "22612:73:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22678:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "22678:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "22683:1:8",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22619:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "22619:58:8"
																},
																"nativeSrc": "22619:66:8",
																"nodeType": "YulFunctionCall",
																"src": "22619:66:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22612:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22612:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22783:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "22783:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427",
																	"nativeSrc": "22694:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "22694:88:8"
																},
																"nativeSrc": "22694:93:8",
																"nodeType": "YulFunctionCall",
																"src": "22694:93:8"
															},
															"nativeSrc": "22694:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "22694:93:8"
														},
														{
															"nativeSrc": "22796:19:8",
															"nodeType": "YulAssignment",
															"src": "22796:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22807:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "22807:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22812:2:8",
																		"nodeType": "YulLiteral",
																		"src": "22812:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22803:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22803:3:8"
																},
																"nativeSrc": "22803:12:8",
																"nodeType": "YulFunctionCall",
																"src": "22803:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22796:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22796:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22456:365:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22590:3:8",
														"nodeType": "YulTypedName",
														"src": "22590:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22598:3:8",
														"nodeType": "YulTypedName",
														"src": "22598:3:8",
														"type": ""
													}
												],
												"src": "22456:365:8"
											},
											{
												"body": {
													"nativeSrc": "23048:406:8",
													"nodeType": "YulBlock",
													"src": "23048:406:8",
													"statements": [
														{
															"nativeSrc": "23058:26:8",
															"nodeType": "YulAssignment",
															"src": "23058:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23070:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "23070:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23081:2:8",
																		"nodeType": "YulLiteral",
																		"src": "23081:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23066:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "23066:3:8"
																},
																"nativeSrc": "23066:18:8",
																"nodeType": "YulFunctionCall",
																"src": "23066:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23058:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "23058:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23138:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "23138:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23151:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "23151:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23162:1:8",
																				"nodeType": "YulLiteral",
																				"src": "23162:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23147:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "23147:3:8"
																		},
																		"nativeSrc": "23147:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "23147:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23094:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "23094:43:8"
																},
																"nativeSrc": "23094:71:8",
																"nodeType": "YulFunctionCall",
																"src": "23094:71:8"
															},
															"nativeSrc": "23094:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "23094:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23213:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "23213:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23226:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "23226:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23237:2:8",
																				"nodeType": "YulLiteral",
																				"src": "23237:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23222:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "23222:3:8"
																		},
																		"nativeSrc": "23222:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "23222:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "23175:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "23175:37:8"
																},
																"nativeSrc": "23175:66:8",
																"nodeType": "YulFunctionCall",
																"src": "23175:66:8"
															},
															"nativeSrc": "23175:66:8",
															"nodeType": "YulExpressionStatement",
															"src": "23175:66:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23262:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "23262:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23273:2:8",
																				"nodeType": "YulLiteral",
																				"src": "23273:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23258:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "23258:3:8"
																		},
																		"nativeSrc": "23258:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "23258:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23282:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "23282:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23288:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "23288:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23278:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "23278:3:8"
																		},
																		"nativeSrc": "23278:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "23278:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23251:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "23251:6:8"
																},
																"nativeSrc": "23251:48:8",
																"nodeType": "YulFunctionCall",
																"src": "23251:48:8"
															},
															"nativeSrc": "23251:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "23251:48:8"
														},
														{
															"nativeSrc": "23308:139:8",
															"nodeType": "YulAssignment",
															"src": "23308:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23442:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "23442:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23316:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "23316:124:8"
																},
																"nativeSrc": "23316:131:8",
																"nodeType": "YulFunctionCall",
																"src": "23316:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23308:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "23308:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22827:627:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23012:9:8",
														"nodeType": "YulTypedName",
														"src": "23012:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23024:6:8",
														"nodeType": "YulTypedName",
														"src": "23024:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23032:6:8",
														"nodeType": "YulTypedName",
														"src": "23032:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23043:4:8",
														"nodeType": "YulTypedName",
														"src": "23043:4:8",
														"type": ""
													}
												],
												"src": "22827:627:8"
											},
											{
												"body": {
													"nativeSrc": "23566:48:8",
													"nodeType": "YulBlock",
													"src": "23566:48:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23588:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "23588:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23596:1:8",
																				"nodeType": "YulLiteral",
																				"src": "23596:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23584:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "23584:3:8"
																		},
																		"nativeSrc": "23584:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "23584:14:8"
																	},
																	{
																		"hexValue": "6c6f7374",
																		"kind": "string",
																		"nativeSrc": "23600:6:8",
																		"nodeType": "YulLiteral",
																		"src": "23600:6:8",
																		"type": "",
																		"value": "lost"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23577:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "23577:6:8"
																},
																"nativeSrc": "23577:30:8",
																"nodeType": "YulFunctionCall",
																"src": "23577:30:8"
															},
															"nativeSrc": "23577:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "23577:30:8"
														}
													]
												},
												"name": "store_literal_in_memory_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888",
												"nativeSrc": "23460:154:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23558:6:8",
														"nodeType": "YulTypedName",
														"src": "23558:6:8",
														"type": ""
													}
												],
												"src": "23460:154:8"
											},
											{
												"body": {
													"nativeSrc": "23766:219:8",
													"nodeType": "YulBlock",
													"src": "23766:219:8",
													"statements": [
														{
															"nativeSrc": "23776:73:8",
															"nodeType": "YulAssignment",
															"src": "23776:73:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23842:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "23842:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23847:1:8",
																		"nodeType": "YulLiteral",
																		"src": "23847:1:8",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23783:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "23783:58:8"
																},
																"nativeSrc": "23783:66:8",
																"nodeType": "YulFunctionCall",
																"src": "23783:66:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23776:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "23776:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23947:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "23947:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888",
																	"nativeSrc": "23858:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "23858:88:8"
																},
																"nativeSrc": "23858:93:8",
																"nodeType": "YulFunctionCall",
																"src": "23858:93:8"
															},
															"nativeSrc": "23858:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "23858:93:8"
														},
														{
															"nativeSrc": "23960:19:8",
															"nodeType": "YulAssignment",
															"src": "23960:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23971:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "23971:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23976:2:8",
																		"nodeType": "YulLiteral",
																		"src": "23976:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23967:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "23967:3:8"
																},
																"nativeSrc": "23967:12:8",
																"nodeType": "YulFunctionCall",
																"src": "23967:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23960:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "23960:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23620:365:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23754:3:8",
														"nodeType": "YulTypedName",
														"src": "23754:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23762:3:8",
														"nodeType": "YulTypedName",
														"src": "23762:3:8",
														"type": ""
													}
												],
												"src": "23620:365:8"
											},
											{
												"body": {
													"nativeSrc": "24212:406:8",
													"nodeType": "YulBlock",
													"src": "24212:406:8",
													"statements": [
														{
															"nativeSrc": "24222:26:8",
															"nodeType": "YulAssignment",
															"src": "24222:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24234:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "24234:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24245:2:8",
																		"nodeType": "YulLiteral",
																		"src": "24245:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24230:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "24230:3:8"
																},
																"nativeSrc": "24230:18:8",
																"nodeType": "YulFunctionCall",
																"src": "24230:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24222:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "24222:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24302:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "24302:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24315:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "24315:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24326:1:8",
																				"nodeType": "YulLiteral",
																				"src": "24326:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24311:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "24311:3:8"
																		},
																		"nativeSrc": "24311:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "24311:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24258:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "24258:43:8"
																},
																"nativeSrc": "24258:71:8",
																"nodeType": "YulFunctionCall",
																"src": "24258:71:8"
															},
															"nativeSrc": "24258:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "24258:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24377:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "24377:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24390:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "24390:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24401:2:8",
																				"nodeType": "YulLiteral",
																				"src": "24401:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24386:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "24386:3:8"
																		},
																		"nativeSrc": "24386:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "24386:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "24339:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "24339:37:8"
																},
																"nativeSrc": "24339:66:8",
																"nodeType": "YulFunctionCall",
																"src": "24339:66:8"
															},
															"nativeSrc": "24339:66:8",
															"nodeType": "YulExpressionStatement",
															"src": "24339:66:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24426:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "24426:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24437:2:8",
																				"nodeType": "YulLiteral",
																				"src": "24437:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24422:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "24422:3:8"
																		},
																		"nativeSrc": "24422:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "24422:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24446:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "24446:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24452:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "24452:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24442:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "24442:3:8"
																		},
																		"nativeSrc": "24442:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "24442:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24415:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "24415:6:8"
																},
																"nativeSrc": "24415:48:8",
																"nodeType": "YulFunctionCall",
																"src": "24415:48:8"
															},
															"nativeSrc": "24415:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "24415:48:8"
														},
														{
															"nativeSrc": "24472:139:8",
															"nodeType": "YulAssignment",
															"src": "24472:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24606:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "24606:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24480:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "24480:124:8"
																},
																"nativeSrc": "24480:131:8",
																"nodeType": "YulFunctionCall",
																"src": "24480:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24472:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "24472:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23991:627:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24176:9:8",
														"nodeType": "YulTypedName",
														"src": "24176:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24188:6:8",
														"nodeType": "YulTypedName",
														"src": "24188:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24196:6:8",
														"nodeType": "YulTypedName",
														"src": "24196:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24207:4:8",
														"nodeType": "YulTypedName",
														"src": "24207:4:8",
														"type": ""
													}
												],
												"src": "23991:627:8"
											},
											{
												"body": {
													"nativeSrc": "24730:122:8",
													"nodeType": "YulBlock",
													"src": "24730:122:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24752:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "24752:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24760:1:8",
																				"nodeType": "YulLiteral",
																				"src": "24760:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24748:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "24748:3:8"
																		},
																		"nativeSrc": "24748:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "24748:14:8"
																	},
																	{
																		"hexValue": "596f7527766520616c726561647920636c61696d656420796f75722077656c63",
																		"kind": "string",
																		"nativeSrc": "24764:34:8",
																		"nodeType": "YulLiteral",
																		"src": "24764:34:8",
																		"type": "",
																		"value": "You've already claimed your welc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24741:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "24741:6:8"
																},
																"nativeSrc": "24741:58:8",
																"nodeType": "YulFunctionCall",
																"src": "24741:58:8"
															},
															"nativeSrc": "24741:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "24741:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24820:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "24820:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24828:2:8",
																				"nodeType": "YulLiteral",
																				"src": "24828:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24816:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "24816:3:8"
																		},
																		"nativeSrc": "24816:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "24816:15:8"
																	},
																	{
																		"hexValue": "6f6d6520626f6e7573",
																		"kind": "string",
																		"nativeSrc": "24833:11:8",
																		"nodeType": "YulLiteral",
																		"src": "24833:11:8",
																		"type": "",
																		"value": "ome bonus"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24809:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "24809:6:8"
																},
																"nativeSrc": "24809:36:8",
																"nodeType": "YulFunctionCall",
																"src": "24809:36:8"
															},
															"nativeSrc": "24809:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "24809:36:8"
														}
													]
												},
												"name": "store_literal_in_memory_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98",
												"nativeSrc": "24624:228:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24722:6:8",
														"nodeType": "YulTypedName",
														"src": "24722:6:8",
														"type": ""
													}
												],
												"src": "24624:228:8"
											},
											{
												"body": {
													"nativeSrc": "25004:220:8",
													"nodeType": "YulBlock",
													"src": "25004:220:8",
													"statements": [
														{
															"nativeSrc": "25014:74:8",
															"nodeType": "YulAssignment",
															"src": "25014:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25080:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "25080:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25085:2:8",
																		"nodeType": "YulLiteral",
																		"src": "25085:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25021:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "25021:58:8"
																},
																"nativeSrc": "25021:67:8",
																"nodeType": "YulFunctionCall",
																"src": "25021:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25014:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "25014:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25186:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "25186:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98",
																	"nativeSrc": "25097:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "25097:88:8"
																},
																"nativeSrc": "25097:93:8",
																"nodeType": "YulFunctionCall",
																"src": "25097:93:8"
															},
															"nativeSrc": "25097:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "25097:93:8"
														},
														{
															"nativeSrc": "25199:19:8",
															"nodeType": "YulAssignment",
															"src": "25199:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25210:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "25210:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25215:2:8",
																		"nodeType": "YulLiteral",
																		"src": "25215:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25206:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "25206:3:8"
																},
																"nativeSrc": "25206:12:8",
																"nodeType": "YulFunctionCall",
																"src": "25206:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25199:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "25199:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24858:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24992:3:8",
														"nodeType": "YulTypedName",
														"src": "24992:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25000:3:8",
														"nodeType": "YulTypedName",
														"src": "25000:3:8",
														"type": ""
													}
												],
												"src": "24858:366:8"
											},
											{
												"body": {
													"nativeSrc": "25401:248:8",
													"nodeType": "YulBlock",
													"src": "25401:248:8",
													"statements": [
														{
															"nativeSrc": "25411:26:8",
															"nodeType": "YulAssignment",
															"src": "25411:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25423:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "25423:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25434:2:8",
																		"nodeType": "YulLiteral",
																		"src": "25434:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25419:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "25419:3:8"
																},
																"nativeSrc": "25419:18:8",
																"nodeType": "YulFunctionCall",
																"src": "25419:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25411:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "25411:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25458:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "25458:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25469:1:8",
																				"nodeType": "YulLiteral",
																				"src": "25469:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25454:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "25454:3:8"
																		},
																		"nativeSrc": "25454:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "25454:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25477:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "25477:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25483:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "25483:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25473:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "25473:3:8"
																		},
																		"nativeSrc": "25473:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "25473:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25447:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "25447:6:8"
																},
																"nativeSrc": "25447:47:8",
																"nodeType": "YulFunctionCall",
																"src": "25447:47:8"
															},
															"nativeSrc": "25447:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "25447:47:8"
														},
														{
															"nativeSrc": "25503:139:8",
															"nodeType": "YulAssignment",
															"src": "25503:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25637:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "25637:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25511:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "25511:124:8"
																},
																"nativeSrc": "25511:131:8",
																"nodeType": "YulFunctionCall",
																"src": "25511:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25503:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "25503:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25230:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25381:9:8",
														"nodeType": "YulTypedName",
														"src": "25381:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25396:4:8",
														"nodeType": "YulTypedName",
														"src": "25396:4:8",
														"type": ""
													}
												],
												"src": "25230:419:8"
											},
											{
												"body": {
													"nativeSrc": "25809:288:8",
													"nodeType": "YulBlock",
													"src": "25809:288:8",
													"statements": [
														{
															"nativeSrc": "25819:26:8",
															"nodeType": "YulAssignment",
															"src": "25819:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25831:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "25831:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25842:2:8",
																		"nodeType": "YulLiteral",
																		"src": "25842:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25827:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "25827:3:8"
																},
																"nativeSrc": "25827:18:8",
																"nodeType": "YulFunctionCall",
																"src": "25827:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25819:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "25819:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25899:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "25899:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25912:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "25912:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25923:1:8",
																				"nodeType": "YulLiteral",
																				"src": "25923:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25908:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "25908:3:8"
																		},
																		"nativeSrc": "25908:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "25908:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25855:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "25855:43:8"
																},
																"nativeSrc": "25855:71:8",
																"nodeType": "YulFunctionCall",
																"src": "25855:71:8"
															},
															"nativeSrc": "25855:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "25855:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25980:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "25980:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25993:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "25993:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26004:2:8",
																				"nodeType": "YulLiteral",
																				"src": "26004:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25989:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "25989:3:8"
																		},
																		"nativeSrc": "25989:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "25989:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25936:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "25936:43:8"
																},
																"nativeSrc": "25936:72:8",
																"nodeType": "YulFunctionCall",
																"src": "25936:72:8"
															},
															"nativeSrc": "25936:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "25936:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "26062:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "26062:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26075:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "26075:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26086:2:8",
																				"nodeType": "YulLiteral",
																				"src": "26086:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26071:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "26071:3:8"
																		},
																		"nativeSrc": "26071:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "26071:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26018:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "26018:43:8"
																},
																"nativeSrc": "26018:72:8",
																"nodeType": "YulFunctionCall",
																"src": "26018:72:8"
															},
															"nativeSrc": "26018:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "26018:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "25655:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25765:9:8",
														"nodeType": "YulTypedName",
														"src": "25765:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25777:6:8",
														"nodeType": "YulTypedName",
														"src": "25777:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25785:6:8",
														"nodeType": "YulTypedName",
														"src": "25785:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25793:6:8",
														"nodeType": "YulTypedName",
														"src": "25793:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25804:4:8",
														"nodeType": "YulTypedName",
														"src": "25804:4:8",
														"type": ""
													}
												],
												"src": "25655:442:8"
											},
											{
												"body": {
													"nativeSrc": "26147:147:8",
													"nodeType": "YulBlock",
													"src": "26147:147:8",
													"statements": [
														{
															"nativeSrc": "26157:25:8",
															"nodeType": "YulAssignment",
															"src": "26157:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "26180:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "26180:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "26162:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "26162:17:8"
																},
																"nativeSrc": "26162:20:8",
																"nodeType": "YulFunctionCall",
																"src": "26162:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "26157:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "26157:1:8"
																}
															]
														},
														{
															"nativeSrc": "26191:25:8",
															"nodeType": "YulAssignment",
															"src": "26191:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "26214:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "26214:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "26196:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "26196:17:8"
																},
																"nativeSrc": "26196:20:8",
																"nodeType": "YulFunctionCall",
																"src": "26196:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "26191:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "26191:1:8"
																}
															]
														},
														{
															"nativeSrc": "26225:16:8",
															"nodeType": "YulAssignment",
															"src": "26225:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "26236:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "26236:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "26239:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "26239:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26232:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "26232:3:8"
																},
																"nativeSrc": "26232:9:8",
																"nodeType": "YulFunctionCall",
																"src": "26232:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "26225:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "26225:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "26265:22:8",
																"nodeType": "YulBlock",
																"src": "26265:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "26267:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "26267:16:8"
																			},
																			"nativeSrc": "26267:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "26267:18:8"
																		},
																		"nativeSrc": "26267:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "26267:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "26257:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "26257:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "26260:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "26260:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26254:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "26254:2:8"
																},
																"nativeSrc": "26254:10:8",
																"nodeType": "YulFunctionCall",
																"src": "26254:10:8"
															},
															"nativeSrc": "26251:36:8",
															"nodeType": "YulIf",
															"src": "26251:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "26103:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "26134:1:8",
														"nodeType": "YulTypedName",
														"src": "26134:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "26137:1:8",
														"nodeType": "YulTypedName",
														"src": "26137:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "26143:3:8",
														"nodeType": "YulTypedName",
														"src": "26143:3:8",
														"type": ""
													}
												],
												"src": "26103:191:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_boolt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint8_t_uint256__to_t_string_memory_ptr_t_uint8_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Item not found\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encode_tuple_t_uint8_t_string_storage_t_uint256__to_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427(memPtr) {\n\n        mstore(add(memPtr, 0), \"won\")\n\n    }\n\n    function abi_encode_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888(memPtr) {\n\n        mstore(add(memPtr, 0), \"lost\")\n\n    }\n\n    function abi_encode_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98(memPtr) {\n\n        mstore(add(memPtr, 0), \"You've already claimed your welc\")\n\n        mstore(add(memPtr, 32), \"ome bonus\")\n\n    }\n\n    function abi_encode_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610156575f3560e01c8063715018a6116100c1578063af3bcb7d1161007a578063af3bcb7d1461039e578063dd62ed3e146103ba578063ea5e65e0146103ea578063f2fde38b14610406578063f5112f8714610422578063fbd1a97b1461042c57610156565b8063715018a6146102f057806379cc6790146102fa5780637b47ec1a146103165780638da5cb5b1461033257806395d89b4114610350578063a9059cbb1461036e57610156565b806323b872dd1161011357806323b872dd1461021e578063313ce5671461024e57806340c10f191461026c57806342966c681461028857806362d6bbdf146102a457806370a08231146102c057610156565b806306fdde031461015a578063095ea7b3146101785780631072cbea146101a857806312065fe0146101c457806317d70f7c146101e257806318160ddd14610200575b5f80fd5b61016261045e565b60405161016f919061153c565b60405180910390f35b610192600480360381019061018d91906115fa565b6104ee565b60405161019f9190611652565b60405180910390f35b6101c260048036038101906101bd91906115fa565b610510565b005b6101cc61056a565b6040516101d9919061167a565b60405180910390f35b6101ea610579565b6040516101f791906116ae565b60405180910390f35b61020861058b565b604051610215919061167a565b60405180910390f35b610238600480360381019061023391906116c7565b610594565b6040516102459190611652565b60405180910390f35b6102566105c2565b60405161026391906116ae565b60405180910390f35b610286600480360381019061028191906115fa565b6105c6565b005b6102a2600480360381019061029d9190611717565b6105dc565b005b6102be60048036038101906102b9919061186e565b6105f0565b005b6102da60048036038101906102d591906118c8565b6106c5565b6040516102e7919061167a565b60405180910390f35b6102f861070a565b005b610314600480360381019061030f91906115fa565b61071d565b005b610330600480360381019061032b9190611717565b61073d565b005b61033a610794565b6040516103479190611902565b60405180910390f35b6103586107bc565b604051610365919061153c565b60405180910390f35b610388600480360381019061038391906115fa565b61084c565b6040516103959190611652565b60405180910390f35b6103b860048036038101906103b39190611945565b61086e565b005b6103d460048036038101906103cf9190611970565b6109d9565b6040516103e1919061167a565b60405180910390f35b61040460048036038101906103ff91906119d8565b610a5b565b005b610420600480360381019061041b91906118c8565b610b6e565b005b61042a610bf2565b005b61044660048036038101906104419190611945565b610c49565b60405161045593929190611a16565b60405180910390f35b60606003805461046d90611a7f565b80601f016020809104026020016040519081016040528092919081815260200182805461049990611a7f565b80156104e45780601f106104bb576101008083540402835291602001916104e4565b820191905f5260205f20905b8154815290600101906020018083116104c757829003601f168201915b5050505050905090565b5f806104f8610d01565b9050610505818585610d08565b600191505092915050565b8061051a336106c5565b101561055b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055290611af9565b60405180910390fd5b610565828261084c565b505050565b5f610574336106c5565b905090565b60075f9054906101000a900460ff1681565b5f600254905090565b5f8061059e610d01565b90506105ab858285610d1a565b6105b6858585610dac565b60019150509392505050565b5f90565b6105ce610e9c565b6105d88282610f23565b5050565b6105ed6105e7610d01565b82610fa2565b50565b6105f8610e9c565b604051806060016040528083815260200160075f9054906101000a900460ff1660ff1681526020018281525060065f60075f9054906101000a900460ff1660ff1660ff1681526020019081526020015f205f820151815f01908161065c9190611cb4565b506020820151816001015f6101000a81548160ff021916908360ff1602179055506040820151816002015590505060075f81819054906101000a900460ff16809291906106a890611db0565b91906101000a81548160ff021916908360ff160217905550505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610712610e9c565b61071b5f611021565b565b61072f82610729610d01565b83610d1a565b6107398282610fa2565b5050565b80610747336106c5565b1015610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077f90611e22565b60405180910390fd5b610791816105dc565b50565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546107cb90611a7f565b80601f01602080910402602001604051908101604052809291908181526020018280546107f790611a7f565b80156108425780601f1061081957610100808354040283529160200191610842565b820191905f5260205f20905b81548152906001019060200180831161082557829003601f168201915b5050505050905090565b5f80610856610d01565b9050610863818585610dac565b600191505092915050565b5f60065f8360ff1660ff1681526020019081526020015f2060020154036108ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c190611e8a565b60405180910390fd5b60065f8260ff1660ff1681526020019081526020015f20600201546108ee336106c5565b101561092f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092690611af9565b60405180910390fd5b61095260065f8360ff1660ff1681526020019081526020015f20600201546105dc565b3373ffffffffffffffffffffffffffffffffffffffff167f8bedd141782c49139782bd92bd7a760a0bcb544ffecfd2b25f00366fae06598e8260065f8560ff1660ff1681526020019081526020015f205f0160065f8660ff1660ff1681526020019081526020015f20600201546040516109ce93929190611f29565b60405180910390a250565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f600a4233604051602001610a71929190611fca565b604051602081830303815290604052805190602001205f1c610a939190612022565b905060058110151583151503610b0f57610ab933600284610ab49190612052565b610f23565b3373ffffffffffffffffffffffffffffffffffffffff167fd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587826001604051610b029291906120dd565b60405180910390a2610b69565b610b18826105dc565b3373ffffffffffffffffffffffffffffffffffffffff167fd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587825f604051610b60929190612161565b60405180910390a25b505050565b610b76610e9c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610be6575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610bdd9190611902565b60405180910390fd5b610bef81611021565b50565b5f610bfc336106c5565b14610c3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c339061220b565b60405180910390fd5b610c47336032610f23565b565b6006602052805f5260405f205f91509050805f018054610c6890611a7f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9490611a7f565b8015610cdf5780601f10610cb657610100808354040283529160200191610cdf565b820191905f5260205f20905b815481529060010190602001808311610cc257829003601f168201915b505050505090806001015f9054906101000a900460ff16908060020154905083565b5f33905090565b610d1583838360016110e4565b505050565b5f610d2584846109d9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610da65781811015610d97578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610d8e93929190612229565b60405180910390fd5b610da584848484035f6110e4565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e1c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e139190611902565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e8c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e839190611902565b60405180910390fd5b610e978383836112b3565b505050565b610ea4610d01565b73ffffffffffffffffffffffffffffffffffffffff16610ec2610794565b73ffffffffffffffffffffffffffffffffffffffff1614610f2157610ee5610d01565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f189190611902565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f93575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f8a9190611902565b60405180910390fd5b610f9e5f83836112b3565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611012575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110099190611902565b60405180910390fd5b61101d825f836112b3565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611154575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161114b9190611902565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111c4575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016111bb9190611902565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156112ad578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516112a4919061167a565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611303578060025f8282546112f7919061225e565b925050819055506113d1565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561138c578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161138393929190612229565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611418578060025f8282540392505081905550611462565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114bf919061167a565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61150e826114cc565b61151881856114d6565b93506115288185602086016114e6565b611531816114f4565b840191505092915050565b5f6020820190508181035f8301526115548184611504565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115968261156d565b9050919050565b6115a68161158c565b81146115b0575f80fd5b50565b5f813590506115c18161159d565b92915050565b5f819050919050565b6115d9816115c7565b81146115e3575f80fd5b50565b5f813590506115f4816115d0565b92915050565b5f80604083850312156116105761160f611565565b5b5f61161d858286016115b3565b925050602061162e858286016115e6565b9150509250929050565b5f8115159050919050565b61164c81611638565b82525050565b5f6020820190506116655f830184611643565b92915050565b611674816115c7565b82525050565b5f60208201905061168d5f83018461166b565b92915050565b5f60ff82169050919050565b6116a881611693565b82525050565b5f6020820190506116c15f83018461169f565b92915050565b5f805f606084860312156116de576116dd611565565b5b5f6116eb868287016115b3565b93505060206116fc868287016115b3565b925050604061170d868287016115e6565b9150509250925092565b5f6020828403121561172c5761172b611565565b5b5f611739848285016115e6565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611780826114f4565b810181811067ffffffffffffffff8211171561179f5761179e61174a565b5b80604052505050565b5f6117b161155c565b90506117bd8282611777565b919050565b5f67ffffffffffffffff8211156117dc576117db61174a565b5b6117e5826114f4565b9050602081019050919050565b828183375f83830152505050565b5f61181261180d846117c2565b6117a8565b90508281526020810184848401111561182e5761182d611746565b5b6118398482856117f2565b509392505050565b5f82601f83011261185557611854611742565b5b8135611865848260208601611800565b91505092915050565b5f806040838503121561188457611883611565565b5b5f83013567ffffffffffffffff8111156118a1576118a0611569565b5b6118ad85828601611841565b92505060206118be858286016115e6565b9150509250929050565b5f602082840312156118dd576118dc611565565b5b5f6118ea848285016115b3565b91505092915050565b6118fc8161158c565b82525050565b5f6020820190506119155f8301846118f3565b92915050565b61192481611693565b811461192e575f80fd5b50565b5f8135905061193f8161191b565b92915050565b5f6020828403121561195a57611959611565565b5b5f61196784828501611931565b91505092915050565b5f806040838503121561198657611985611565565b5b5f611993858286016115b3565b92505060206119a4858286016115b3565b9150509250929050565b6119b781611638565b81146119c1575f80fd5b50565b5f813590506119d2816119ae565b92915050565b5f80604083850312156119ee576119ed611565565b5b5f6119fb858286016119c4565b9250506020611a0c858286016115e6565b9150509250929050565b5f6060820190508181035f830152611a2e8186611504565b9050611a3d602083018561169f565b611a4a604083018461166b565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a9657607f821691505b602082108103611aa957611aa8611a52565b5b50919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611ae36014836114d6565b9150611aee82611aaf565b602082019050919050565b5f6020820190508181035f830152611b1081611ad7565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611b737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611b38565b611b7d8683611b38565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611bb8611bb3611bae846115c7565b611b95565b6115c7565b9050919050565b5f819050919050565b611bd183611b9e565b611be5611bdd82611bbf565b848454611b44565b825550505050565b5f90565b611bf9611bed565b611c04818484611bc8565b505050565b5b81811015611c2757611c1c5f82611bf1565b600181019050611c0a565b5050565b601f821115611c6c57611c3d81611b17565b611c4684611b29565b81016020851015611c55578190505b611c69611c6185611b29565b830182611c09565b50505b505050565b5f82821c905092915050565b5f611c8c5f1984600802611c71565b1980831691505092915050565b5f611ca48383611c7d565b9150826002028217905092915050565b611cbd826114cc565b67ffffffffffffffff811115611cd657611cd561174a565b5b611ce08254611a7f565b611ceb828285611c2b565b5f60209050601f831160018114611d1c575f8415611d0a578287015190505b611d148582611c99565b865550611d7b565b601f198416611d2a86611b17565b5f5b82811015611d5157848901518255600182019150602085019450602081019050611d2c565b86831015611d6e5784890151611d6a601f891682611c7d565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611dba82611693565b915060ff8203611dcd57611dcc611d83565b5b600182019050919050565b7f496e73756666696369656e7420616d6f756e74000000000000000000000000005f82015250565b5f611e0c6013836114d6565b9150611e1782611dd8565b602082019050919050565b5f6020820190508181035f830152611e3981611e00565b9050919050565b7f4974656d206e6f7420666f756e640000000000000000000000000000000000005f82015250565b5f611e74600e836114d6565b9150611e7f82611e40565b602082019050919050565b5f6020820190508181035f830152611ea181611e68565b9050919050565b5f8154611eb481611a7f565b611ebe81866114d6565b9450600182165f8114611ed85760018114611eee57611f20565b60ff198316865281151560200286019350611f20565b611ef785611b17565b5f5b83811015611f1857815481890152600182019150602081019050611ef9565b808801955050505b50505092915050565b5f606082019050611f3c5f83018661169f565b8181036020830152611f4e8185611ea8565b9050611f5d604083018461166b565b949350505050565b5f819050919050565b611f7f611f7a826115c7565b611f65565b82525050565b5f8160601b9050919050565b5f611f9b82611f85565b9050919050565b5f611fac82611f91565b9050919050565b611fc4611fbf8261158c565b611fa2565b82525050565b5f611fd58285611f6e565b602082019150611fe58284611fb3565b6014820191508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61202c826115c7565b9150612037836115c7565b92508261204757612046611ff5565b5b828206905092915050565b5f61205c826115c7565b9150612067836115c7565b9250828202612075816115c7565b9150828204841483151761208c5761208b611d83565b5b5092915050565b7f776f6e00000000000000000000000000000000000000000000000000000000005f82015250565b5f6120c76003836114d6565b91506120d282612093565b602082019050919050565b5f6060820190506120f05f83018561166b565b6120fd6020830184611643565b818103604083015261210e816120bb565b90509392505050565b7f6c6f7374000000000000000000000000000000000000000000000000000000005f82015250565b5f61214b6004836114d6565b915061215682612117565b602082019050919050565b5f6060820190506121745f83018561166b565b6121816020830184611643565b81810360408301526121928161213f565b90509392505050565b7f596f7527766520616c726561647920636c61696d656420796f75722077656c635f8201527f6f6d6520626f6e75730000000000000000000000000000000000000000000000602082015250565b5f6121f56029836114d6565b91506122008261219b565b604082019050919050565b5f6020820190508181035f830152612222816121e9565b9050919050565b5f60608201905061223c5f8301866118f3565b612249602083018561166b565b612256604083018461166b565b949350505050565b5f612268826115c7565b9150612273836115c7565b925082820190508082111561228b5761228a611d83565b5b9291505056fea2646970667358221220734a6cf9e06dc311b3d7f15bc77b99713861ae9e2851185954254059e2e24ffd64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xAF3BCB7D GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xAF3BCB7D EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xEA5E65E0 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xF5112F87 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xFBD1A97B EQ PUSH2 0x42C JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x7B47EC1A EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x36E JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x62D6BBDF EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C0 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x1072CBEA EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x200 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x510 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x5C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1717 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH2 0x5F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0x70A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1717 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33A PUSH2 0x794 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x1945 JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x9D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x404 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x19D8 JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x420 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x18C8 JUMP JUMPDEST PUSH2 0xB6E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42A PUSH2 0xBF2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x446 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1945 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x455 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x46D SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x499 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4F8 PUSH2 0xD01 JUMP JUMPDEST SWAP1 POP PUSH2 0x505 DUP2 DUP6 DUP6 PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x51A CALLER PUSH2 0x6C5 JUMP JUMPDEST LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x552 SWAP1 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x565 DUP3 DUP3 PUSH2 0x84C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x574 CALLER PUSH2 0x6C5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x59E PUSH2 0xD01 JUMP JUMPDEST SWAP1 POP PUSH2 0x5AB DUP6 DUP3 DUP6 PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x5B6 DUP6 DUP6 DUP6 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x5CE PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x5D8 DUP3 DUP3 PUSH2 0xF23 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5ED PUSH2 0x5E7 PUSH2 0xD01 JUMP JUMPDEST DUP3 PUSH2 0xFA2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5F8 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x7 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6A8 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x712 PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x71B PUSH0 PUSH2 0x1021 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x72F DUP3 PUSH2 0x729 PUSH2 0xD01 JUMP JUMPDEST DUP4 PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x739 DUP3 DUP3 PUSH2 0xFA2 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH2 0x747 CALLER PUSH2 0x6C5 JUMP JUMPDEST LT ISZERO PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77F SWAP1 PUSH2 0x1E22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x791 DUP2 PUSH2 0x5DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x7CB SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7F7 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x842 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x819 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x842 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x825 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x856 PUSH2 0xD01 JUMP JUMPDEST SWAP1 POP PUSH2 0x863 DUP2 DUP6 DUP6 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SUB PUSH2 0x8CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C1 SWAP1 PUSH2 0x1E8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x8EE CALLER PUSH2 0x6C5 JUMP JUMPDEST LT ISZERO PUSH2 0x92F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x926 SWAP1 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x952 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x5DC JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BEDD141782C49139782BD92BD7A760A0BCB544FFECFD2B25F00366FAE06598E DUP3 PUSH1 0x6 PUSH0 DUP6 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x6 PUSH0 DUP7 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x9CE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA71 SWAP3 SWAP2 SWAP1 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0xA93 SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 DUP2 LT ISZERO ISZERO DUP4 ISZERO ISZERO SUB PUSH2 0xB0F JUMPI PUSH2 0xAB9 CALLER PUSH1 0x2 DUP5 PUSH2 0xAB4 SWAP2 SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH2 0xF23 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xB02 SWAP3 SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0xB18 DUP3 PUSH2 0x5DC JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587 DUP3 PUSH0 PUSH1 0x40 MLOAD PUSH2 0xB60 SWAP3 SWAP2 SWAP1 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB76 PUSH2 0xE9C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDD SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBEF DUP2 PUSH2 0x1021 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xBFC CALLER PUSH2 0x6C5 JUMP JUMPDEST EQ PUSH2 0xC3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC33 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC47 CALLER PUSH1 0x32 PUSH2 0xF23 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0xC68 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC94 SWAP1 PUSH2 0x1A7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCDF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCB6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCDF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCC2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD15 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10E4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD25 DUP5 DUP5 PUSH2 0x9D9 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xDA6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD97 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA5 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x10E4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE1C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE83 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE97 DUP4 DUP4 DUP4 PUSH2 0x12B3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xEA4 PUSH2 0xD01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEC2 PUSH2 0x794 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF21 JUMPI PUSH2 0xEE5 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF18 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF93 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8A SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF9E PUSH0 DUP4 DUP4 PUSH2 0x12B3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1012 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1009 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101D DUP3 PUSH0 DUP4 PUSH2 0x12B3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1154 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114B SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11C4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BB SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x12AD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12A4 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1303 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12F7 SWAP2 SWAP1 PUSH2 0x225E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x13D1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x138C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1383 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1418 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1462 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x14BF SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x150E DUP3 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0x1518 DUP2 DUP6 PUSH2 0x14D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1528 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14E6 JUMP JUMPDEST PUSH2 0x1531 DUP2 PUSH2 0x14F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1554 DUP2 DUP5 PUSH2 0x1504 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1596 DUP3 PUSH2 0x156D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A6 DUP2 PUSH2 0x158C JUMP JUMPDEST DUP2 EQ PUSH2 0x15B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15C1 DUP2 PUSH2 0x159D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15D9 DUP2 PUSH2 0x15C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x15E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15F4 DUP2 PUSH2 0x15D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1610 JUMPI PUSH2 0x160F PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x161D DUP6 DUP3 DUP7 ADD PUSH2 0x15B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x162E DUP6 DUP3 DUP7 ADD PUSH2 0x15E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x164C DUP2 PUSH2 0x1638 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1665 PUSH0 DUP4 ADD DUP5 PUSH2 0x1643 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1674 DUP2 PUSH2 0x15C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x168D PUSH0 DUP4 ADD DUP5 PUSH2 0x166B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A8 DUP2 PUSH2 0x1693 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C1 PUSH0 DUP4 ADD DUP5 PUSH2 0x169F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16DE JUMPI PUSH2 0x16DD PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16EB DUP7 DUP3 DUP8 ADD PUSH2 0x15B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16FC DUP7 DUP3 DUP8 ADD PUSH2 0x15B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x170D DUP7 DUP3 DUP8 ADD PUSH2 0x15E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x172C JUMPI PUSH2 0x172B PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1739 DUP5 DUP3 DUP6 ADD PUSH2 0x15E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1780 DUP3 PUSH2 0x14F4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x179F JUMPI PUSH2 0x179E PUSH2 0x174A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17B1 PUSH2 0x155C JUMP JUMPDEST SWAP1 POP PUSH2 0x17BD DUP3 DUP3 PUSH2 0x1777 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17DC JUMPI PUSH2 0x17DB PUSH2 0x174A JUMP JUMPDEST JUMPDEST PUSH2 0x17E5 DUP3 PUSH2 0x14F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1812 PUSH2 0x180D DUP5 PUSH2 0x17C2 JUMP JUMPDEST PUSH2 0x17A8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x182E JUMPI PUSH2 0x182D PUSH2 0x1746 JUMP JUMPDEST JUMPDEST PUSH2 0x1839 DUP5 DUP3 DUP6 PUSH2 0x17F2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1855 JUMPI PUSH2 0x1854 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1865 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1800 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1884 JUMPI PUSH2 0x1883 PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18A1 JUMPI PUSH2 0x18A0 PUSH2 0x1569 JUMP JUMPDEST JUMPDEST PUSH2 0x18AD DUP6 DUP3 DUP7 ADD PUSH2 0x1841 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18BE DUP6 DUP3 DUP7 ADD PUSH2 0x15E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18DD JUMPI PUSH2 0x18DC PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18EA DUP5 DUP3 DUP6 ADD PUSH2 0x15B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18FC DUP2 PUSH2 0x158C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1915 PUSH0 DUP4 ADD DUP5 PUSH2 0x18F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1924 DUP2 PUSH2 0x1693 JUMP JUMPDEST DUP2 EQ PUSH2 0x192E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x193F DUP2 PUSH2 0x191B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195A JUMPI PUSH2 0x1959 PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1967 DUP5 DUP3 DUP6 ADD PUSH2 0x1931 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1986 JUMPI PUSH2 0x1985 PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1993 DUP6 DUP3 DUP7 ADD PUSH2 0x15B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19A4 DUP6 DUP3 DUP7 ADD PUSH2 0x15B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B7 DUP2 PUSH2 0x1638 JUMP JUMPDEST DUP2 EQ PUSH2 0x19C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19D2 DUP2 PUSH2 0x19AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19EE JUMPI PUSH2 0x19ED PUSH2 0x1565 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19FB DUP6 DUP3 DUP7 ADD PUSH2 0x19C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A0C DUP6 DUP3 DUP7 ADD PUSH2 0x15E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A2E DUP2 DUP7 PUSH2 0x1504 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A3D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x169F JUMP JUMPDEST PUSH2 0x1A4A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x166B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A96 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AA9 JUMPI PUSH2 0x1AA8 PUSH2 0x1A52 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE3 PUSH1 0x14 DUP4 PUSH2 0x14D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AEE DUP3 PUSH2 0x1AAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B10 DUP2 PUSH2 0x1AD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1B73 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1B38 JUMP JUMPDEST PUSH2 0x1B7D DUP7 DUP4 PUSH2 0x1B38 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BB8 PUSH2 0x1BB3 PUSH2 0x1BAE DUP5 PUSH2 0x15C7 JUMP JUMPDEST PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0x15C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD1 DUP4 PUSH2 0x1B9E JUMP JUMPDEST PUSH2 0x1BE5 PUSH2 0x1BDD DUP3 PUSH2 0x1BBF JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1B44 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1BF9 PUSH2 0x1BED JUMP JUMPDEST PUSH2 0x1C04 DUP2 DUP5 DUP5 PUSH2 0x1BC8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C27 JUMPI PUSH2 0x1C1C PUSH0 DUP3 PUSH2 0x1BF1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C0A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1C6C JUMPI PUSH2 0x1C3D DUP2 PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0x1C46 DUP5 PUSH2 0x1B29 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1C55 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1C69 PUSH2 0x1C61 DUP6 PUSH2 0x1B29 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1C09 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C8C PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1C71 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA4 DUP4 DUP4 PUSH2 0x1C7D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CBD DUP3 PUSH2 0x14CC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CD6 JUMPI PUSH2 0x1CD5 PUSH2 0x174A JUMP JUMPDEST JUMPDEST PUSH2 0x1CE0 DUP3 SLOAD PUSH2 0x1A7F JUMP JUMPDEST PUSH2 0x1CEB DUP3 DUP3 DUP6 PUSH2 0x1C2B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1D1C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1D0A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1D14 DUP6 DUP3 PUSH2 0x1C99 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1D7B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1D2A DUP7 PUSH2 0x1B17 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D51 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D2C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1D6E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1D6A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1C7D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DBA DUP3 PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x1DCD JUMPI PUSH2 0x1DCC PUSH2 0x1D83 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616D6F756E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0C PUSH1 0x13 DUP4 PUSH2 0x14D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E17 DUP3 PUSH2 0x1DD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E39 DUP2 PUSH2 0x1E00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4974656D206E6F7420666F756E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E74 PUSH1 0xE DUP4 PUSH2 0x14D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7F DUP3 PUSH2 0x1E40 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EA1 DUP2 PUSH2 0x1E68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x1EB4 DUP2 PUSH2 0x1A7F JUMP JUMPDEST PUSH2 0x1EBE DUP2 DUP7 PUSH2 0x14D6 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x1ED8 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1EEE JUMPI PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x1F20 JUMP JUMPDEST PUSH2 0x1EF7 DUP6 PUSH2 0x1B17 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F18 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EF9 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F3C PUSH0 DUP4 ADD DUP7 PUSH2 0x169F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1F4E DUP2 DUP6 PUSH2 0x1EA8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F5D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x166B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F7F PUSH2 0x1F7A DUP3 PUSH2 0x15C7 JUMP JUMPDEST PUSH2 0x1F65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9B DUP3 PUSH2 0x1F85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FAC DUP3 PUSH2 0x1F91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC4 PUSH2 0x1FBF DUP3 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x1FA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FD5 DUP3 DUP6 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1FE5 DUP3 DUP5 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x202C DUP3 PUSH2 0x15C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2037 DUP4 PUSH2 0x15C7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2047 JUMPI PUSH2 0x2046 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x205C DUP3 PUSH2 0x15C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2067 DUP4 PUSH2 0x15C7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2075 DUP2 PUSH2 0x15C7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x208C JUMPI PUSH2 0x208B PUSH2 0x1D83 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x776F6E0000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20C7 PUSH1 0x3 DUP4 PUSH2 0x14D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x20D2 DUP3 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20F0 PUSH0 DUP4 ADD DUP6 PUSH2 0x166B JUMP JUMPDEST PUSH2 0x20FD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1643 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x210E DUP2 PUSH2 0x20BB JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6C6F737400000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x214B PUSH1 0x4 DUP4 PUSH2 0x14D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2156 DUP3 PUSH2 0x2117 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2174 PUSH0 DUP4 ADD DUP6 PUSH2 0x166B JUMP JUMPDEST PUSH2 0x2181 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1643 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2192 DUP2 PUSH2 0x213F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x596F7527766520616C726561647920636C61696D656420796F75722077656C63 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6D6520626F6E75730000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21F5 PUSH1 0x29 DUP4 PUSH2 0x14D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2200 DUP3 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2222 DUP2 PUSH2 0x21E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x223C PUSH0 DUP4 ADD DUP7 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0x2249 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x166B JUMP JUMPDEST PUSH2 0x2256 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x166B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2268 DUP3 PUSH2 0x15C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2273 DUP4 PUSH2 0x15C7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x228B JUMPI PUSH2 0x228A PUSH2 0x1D83 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x4A6CF9E06DC311B3D7F15BC77B99713861AE9E28 MLOAD XOR MSIZE SLOAD 0x25 BLOCKHASH MSIZE 0xE2 0xE2 0x4F REVERT PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "785:2815:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1893:188:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3316:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;983:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1644:83:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2286:154:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1021:158:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3448:147:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2935:340:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2449:474:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2116:162:7;;;:::i;:::-;;942:34;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;1893:188:7:-;2001:7;1978:21;1988:10;1978:9;:21::i;:::-;:30;;1970:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2044:29;2053:10;2065:7;2044:8;:29::i;:::-;;1893:188;;:::o;3316:99::-;3360:7;3386:21;3396:10;3386:9;:21::i;:::-;3379:28;;3316:99;:::o;983:20::-;;;;;;;;;;;;;:::o;3144:97:2:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;1644:83:7:-;1694:5;1644:83;:::o;1760:95::-;1531:13:0;:11;:13::i;:::-;1830:17:7::1;1836:2;1840:6;1830:5;:17::i;:::-;1760:95:::0;;:::o;618:87:4:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;2286:154:7:-;1531:13:0;:11;:13::i;:::-;2385:27:7::1;;;;;;;;2390:5;2385:27;;;;2397:7;;;;;;;;;;;2385:27;;;;;;2405:6;2385:27;;::::0;2368:5:::1;:14;2374:7;;;;;;;;;;;2368:14;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2423:7;;:9;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2286:154:::0;;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:4:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;3448:147:7:-;3532:7;3509:21;3519:10;3509:9;:21::i;:::-;:30;;3501:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3574:13;3579:7;3574:4;:13::i;:::-;3448:147;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;2935:340:7:-;3024:1;3000:5;:14;3006:7;3000:14;;;;;;;;;;;;;;;:20;;;:25;2992:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3088:5;:14;3094:7;3088:14;;;;;;;;;;;;;;;:20;;;3063:21;3073:10;3063:9;:21::i;:::-;:45;;3055:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3146:26;3151:5;:14;3157:7;3151:14;;;;;;;;;;;;;;;:20;;;3146:4;:26::i;:::-;3204:10;3190:77;;;3216:7;3225:5;:14;3231:7;3225:14;;;;;;;;;;;;;;;:19;;3246:5;:14;3252:7;3246:14;;;;;;;;;;;;;;;:20;;;3190:77;;;;;;;;:::i;:::-;;;;;;;;2935:340;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2449:474:7:-;2529:17;2614:2;2581:15;2598:10;2564:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2554:56;;;;;;2549:62;;:67;;;;:::i;:::-;2529:87;;2661:1;2648:12;:14;2633:30;;:11;:30;;;2629:287;;2680:31;2686:10;2709:1;2698:10;:12;;;;:::i;:::-;2680:5;:31::i;:::-;2743:10;2731:50;;;2755:12;2769:4;2731:50;;;;;;;:::i;:::-;;;;;;;;2629:287;;;2816:16;2821:10;2816:4;:16::i;:::-;2864:10;2852:52;;;2876:12;2890:5;2852:52;;;;;;;:::i;:::-;;;;;;;;2629:287;2518:405;2449:474;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2116:162:7:-;2191:1;2166:21;2176:10;2166:9;:21::i;:::-;:26;2158:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2249:21;2255:10;2267:2;2249:5;:21::i;:::-;2116:162::o;942:34::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:86::-;3726:7;3766:4;3759:5;3755:16;3744:27;;3691:86;;;:::o;3783:112::-;3866:22;3882:5;3866:22;:::i;:::-;3861:3;3854:35;3783:112;;:::o;3901:214::-;3990:4;4028:2;4017:9;4013:18;4005:26;;4041:67;4105:1;4094:9;4090:17;4081:6;4041:67;:::i;:::-;3901:214;;;;:::o;4121:619::-;4198:6;4206;4214;4263:2;4251:9;4242:7;4238:23;4234:32;4231:119;;;4269:79;;:::i;:::-;4231:119;4389:1;4414:53;4459:7;4450:6;4439:9;4435:22;4414:53;:::i;:::-;4404:63;;4360:117;4516:2;4542:53;4587:7;4578:6;4567:9;4563:22;4542:53;:::i;:::-;4532:63;;4487:118;4644:2;4670:53;4715:7;4706:6;4695:9;4691:22;4670:53;:::i;:::-;4660:63;;4615:118;4121:619;;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:117::-;5190:1;5187;5180:12;5204:117;5313:1;5310;5303:12;5327:180;5375:77;5372:1;5365:88;5472:4;5469:1;5462:15;5496:4;5493:1;5486:15;5513:281;5596:27;5618:4;5596:27;:::i;:::-;5588:6;5584:40;5726:6;5714:10;5711:22;5690:18;5678:10;5675:34;5672:62;5669:88;;;5737:18;;:::i;:::-;5669:88;5777:10;5773:2;5766:22;5556:238;5513:281;;:::o;5800:129::-;5834:6;5861:20;;:::i;:::-;5851:30;;5890:33;5918:4;5910:6;5890:33;:::i;:::-;5800:129;;;:::o;5935:308::-;5997:4;6087:18;6079:6;6076:30;6073:56;;;6109:18;;:::i;:::-;6073:56;6147:29;6169:6;6147:29;:::i;:::-;6139:37;;6231:4;6225;6221:15;6213:23;;5935:308;;;:::o;6249:148::-;6347:6;6342:3;6337;6324:30;6388:1;6379:6;6374:3;6370:16;6363:27;6249:148;;;:::o;6403:425::-;6481:5;6506:66;6522:49;6564:6;6522:49;:::i;:::-;6506:66;:::i;:::-;6497:75;;6595:6;6588:5;6581:21;6633:4;6626:5;6622:16;6671:3;6662:6;6657:3;6653:16;6650:25;6647:112;;;6678:79;;:::i;:::-;6647:112;6768:54;6815:6;6810:3;6805;6768:54;:::i;:::-;6487:341;6403:425;;;;;:::o;6848:340::-;6904:5;6953:3;6946:4;6938:6;6934:17;6930:27;6920:122;;6961:79;;:::i;:::-;6920:122;7078:6;7065:20;7103:79;7178:3;7170:6;7163:4;7155:6;7151:17;7103:79;:::i;:::-;7094:88;;6910:278;6848:340;;;;:::o;7194:654::-;7272:6;7280;7329:2;7317:9;7308:7;7304:23;7300:32;7297:119;;;7335:79;;:::i;:::-;7297:119;7483:1;7472:9;7468:17;7455:31;7513:18;7505:6;7502:30;7499:117;;;7535:79;;:::i;:::-;7499:117;7640:63;7695:7;7686:6;7675:9;7671:22;7640:63;:::i;:::-;7630:73;;7426:287;7752:2;7778:53;7823:7;7814:6;7803:9;7799:22;7778:53;:::i;:::-;7768:63;;7723:118;7194:654;;;;;:::o;7854:329::-;7913:6;7962:2;7950:9;7941:7;7937:23;7933:32;7930:119;;;7968:79;;:::i;:::-;7930:119;8088:1;8113:53;8158:7;8149:6;8138:9;8134:22;8113:53;:::i;:::-;8103:63;;8059:117;7854:329;;;;:::o;8189:118::-;8276:24;8294:5;8276:24;:::i;:::-;8271:3;8264:37;8189:118;;:::o;8313:222::-;8406:4;8444:2;8433:9;8429:18;8421:26;;8457:71;8525:1;8514:9;8510:17;8501:6;8457:71;:::i;:::-;8313:222;;;;:::o;8541:118::-;8612:22;8628:5;8612:22;:::i;:::-;8605:5;8602:33;8592:61;;8649:1;8646;8639:12;8592:61;8541:118;:::o;8665:135::-;8709:5;8747:6;8734:20;8725:29;;8763:31;8788:5;8763:31;:::i;:::-;8665:135;;;;:::o;8806:325::-;8863:6;8912:2;8900:9;8891:7;8887:23;8883:32;8880:119;;;8918:79;;:::i;:::-;8880:119;9038:1;9063:51;9106:7;9097:6;9086:9;9082:22;9063:51;:::i;:::-;9053:61;;9009:115;8806:325;;;;:::o;9137:474::-;9205:6;9213;9262:2;9250:9;9241:7;9237:23;9233:32;9230:119;;;9268:79;;:::i;:::-;9230:119;9388:1;9413:53;9458:7;9449:6;9438:9;9434:22;9413:53;:::i;:::-;9403:63;;9359:117;9515:2;9541:53;9586:7;9577:6;9566:9;9562:22;9541:53;:::i;:::-;9531:63;;9486:118;9137:474;;;;;:::o;9617:116::-;9687:21;9702:5;9687:21;:::i;:::-;9680:5;9677:32;9667:60;;9723:1;9720;9713:12;9667:60;9617:116;:::o;9739:133::-;9782:5;9820:6;9807:20;9798:29;;9836:30;9860:5;9836:30;:::i;:::-;9739:133;;;;:::o;9878:468::-;9943:6;9951;10000:2;9988:9;9979:7;9975:23;9971:32;9968:119;;;10006:79;;:::i;:::-;9968:119;10126:1;10151:50;10193:7;10184:6;10173:9;10169:22;10151:50;:::i;:::-;10141:60;;10097:114;10250:2;10276:53;10321:7;10312:6;10301:9;10297:22;10276:53;:::i;:::-;10266:63;;10221:118;9878:468;;;;;:::o;10352:525::-;10517:4;10555:2;10544:9;10540:18;10532:26;;10604:9;10598:4;10594:20;10590:1;10579:9;10575:17;10568:47;10632:78;10705:4;10696:6;10632:78;:::i;:::-;10624:86;;10720:68;10784:2;10773:9;10769:18;10760:6;10720:68;:::i;:::-;10798:72;10866:2;10855:9;10851:18;10842:6;10798:72;:::i;:::-;10352:525;;;;;;:::o;10883:180::-;10931:77;10928:1;10921:88;11028:4;11025:1;11018:15;11052:4;11049:1;11042:15;11069:320;11113:6;11150:1;11144:4;11140:12;11130:22;;11197:1;11191:4;11187:12;11218:18;11208:81;;11274:4;11266:6;11262:17;11252:27;;11208:81;11336:2;11328:6;11325:14;11305:18;11302:38;11299:84;;11355:18;;:::i;:::-;11299:84;11120:269;11069:320;;;:::o;11395:170::-;11535:22;11531:1;11523:6;11519:14;11512:46;11395:170;:::o;11571:366::-;11713:3;11734:67;11798:2;11793:3;11734:67;:::i;:::-;11727:74;;11810:93;11899:3;11810:93;:::i;:::-;11928:2;11923:3;11919:12;11912:19;;11571:366;;;:::o;11943:419::-;12109:4;12147:2;12136:9;12132:18;12124:26;;12196:9;12190:4;12186:20;12182:1;12171:9;12167:17;12160:47;12224:131;12350:4;12224:131;:::i;:::-;12216:139;;11943:419;;;:::o;12368:141::-;12417:4;12440:3;12432:11;;12463:3;12460:1;12453:14;12497:4;12494:1;12484:18;12476:26;;12368:141;;;:::o;12515:93::-;12552:6;12599:2;12594;12587:5;12583:14;12579:23;12569:33;;12515:93;;;:::o;12614:107::-;12658:8;12708:5;12702:4;12698:16;12677:37;;12614:107;;;;:::o;12727:393::-;12796:6;12846:1;12834:10;12830:18;12869:97;12899:66;12888:9;12869:97;:::i;:::-;12987:39;13017:8;13006:9;12987:39;:::i;:::-;12975:51;;13059:4;13055:9;13048:5;13044:21;13035:30;;13108:4;13098:8;13094:19;13087:5;13084:30;13074:40;;12803:317;;12727:393;;;;;:::o;13126:60::-;13154:3;13175:5;13168:12;;13126:60;;;:::o;13192:142::-;13242:9;13275:53;13293:34;13302:24;13320:5;13302:24;:::i;:::-;13293:34;:::i;:::-;13275:53;:::i;:::-;13262:66;;13192:142;;;:::o;13340:75::-;13383:3;13404:5;13397:12;;13340:75;;;:::o;13421:269::-;13531:39;13562:7;13531:39;:::i;:::-;13592:91;13641:41;13665:16;13641:41;:::i;:::-;13633:6;13626:4;13620:11;13592:91;:::i;:::-;13586:4;13579:105;13497:193;13421:269;;;:::o;13696:73::-;13741:3;13696:73;:::o;13775:189::-;13852:32;;:::i;:::-;13893:65;13951:6;13943;13937:4;13893:65;:::i;:::-;13828:136;13775:189;;:::o;13970:186::-;14030:120;14047:3;14040:5;14037:14;14030:120;;;14101:39;14138:1;14131:5;14101:39;:::i;:::-;14074:1;14067:5;14063:13;14054:22;;14030:120;;;13970:186;;:::o;14162:543::-;14263:2;14258:3;14255:11;14252:446;;;14297:38;14329:5;14297:38;:::i;:::-;14381:29;14399:10;14381:29;:::i;:::-;14371:8;14367:44;14564:2;14552:10;14549:18;14546:49;;;14585:8;14570:23;;14546:49;14608:80;14664:22;14682:3;14664:22;:::i;:::-;14654:8;14650:37;14637:11;14608:80;:::i;:::-;14267:431;;14252:446;14162:543;;;:::o;14711:117::-;14765:8;14815:5;14809:4;14805:16;14784:37;;14711:117;;;;:::o;14834:169::-;14878:6;14911:51;14959:1;14955:6;14947:5;14944:1;14940:13;14911:51;:::i;:::-;14907:56;14992:4;14986;14982:15;14972:25;;14885:118;14834:169;;;;:::o;15008:295::-;15084:4;15230:29;15255:3;15249:4;15230:29;:::i;:::-;15222:37;;15292:3;15289:1;15285:11;15279:4;15276:21;15268:29;;15008:295;;;;:::o;15308:1395::-;15425:37;15458:3;15425:37;:::i;:::-;15527:18;15519:6;15516:30;15513:56;;;15549:18;;:::i;:::-;15513:56;15593:38;15625:4;15619:11;15593:38;:::i;:::-;15678:67;15738:6;15730;15724:4;15678:67;:::i;:::-;15772:1;15796:4;15783:17;;15828:2;15820:6;15817:14;15845:1;15840:618;;;;16502:1;16519:6;16516:77;;;16568:9;16563:3;16559:19;16553:26;16544:35;;16516:77;16619:67;16679:6;16672:5;16619:67;:::i;:::-;16613:4;16606:81;16475:222;15810:887;;15840:618;15892:4;15888:9;15880:6;15876:22;15926:37;15958:4;15926:37;:::i;:::-;15985:1;15999:208;16013:7;16010:1;16007:14;15999:208;;;16092:9;16087:3;16083:19;16077:26;16069:6;16062:42;16143:1;16135:6;16131:14;16121:24;;16190:2;16179:9;16175:18;16162:31;;16036:4;16033:1;16029:12;16024:17;;15999:208;;;16235:6;16226:7;16223:19;16220:179;;;16293:9;16288:3;16284:19;16278:26;16336:48;16378:4;16370:6;16366:17;16355:9;16336:48;:::i;:::-;16328:6;16321:64;16243:156;16220:179;16445:1;16441;16433:6;16429:14;16425:22;16419:4;16412:36;15847:611;;;15810:887;;15400:1303;;;15308:1395;;:::o;16709:180::-;16757:77;16754:1;16747:88;16854:4;16851:1;16844:15;16878:4;16875:1;16868:15;16895:167;16932:3;16955:22;16971:5;16955:22;:::i;:::-;16946:31;;16999:4;16992:5;16989:15;16986:41;;17007:18;;:::i;:::-;16986:41;17054:1;17047:5;17043:13;17036:20;;16895:167;;;:::o;17068:169::-;17208:21;17204:1;17196:6;17192:14;17185:45;17068:169;:::o;17243:366::-;17385:3;17406:67;17470:2;17465:3;17406:67;:::i;:::-;17399:74;;17482:93;17571:3;17482:93;:::i;:::-;17600:2;17595:3;17591:12;17584:19;;17243:366;;;:::o;17615:419::-;17781:4;17819:2;17808:9;17804:18;17796:26;;17868:9;17862:4;17858:20;17854:1;17843:9;17839:17;17832:47;17896:131;18022:4;17896:131;:::i;:::-;17888:139;;17615:419;;;:::o;18040:164::-;18180:16;18176:1;18168:6;18164:14;18157:40;18040:164;:::o;18210:366::-;18352:3;18373:67;18437:2;18432:3;18373:67;:::i;:::-;18366:74;;18449:93;18538:3;18449:93;:::i;:::-;18567:2;18562:3;18558:12;18551:19;;18210:366;;;:::o;18582:419::-;18748:4;18786:2;18775:9;18771:18;18763:26;;18835:9;18829:4;18825:20;18821:1;18810:9;18806:17;18799:47;18863:131;18989:4;18863:131;:::i;:::-;18855:139;;18582:419;;;:::o;19031:831::-;19116:3;19153:5;19147:12;19182:36;19208:9;19182:36;:::i;:::-;19234:71;19298:6;19293:3;19234:71;:::i;:::-;19227:78;;19336:1;19325:9;19321:17;19352:1;19347:164;;;;19525:1;19520:336;;;;19314:542;;19347:164;19431:4;19427:9;19416;19412:25;19407:3;19400:38;19491:6;19484:14;19477:22;19471:4;19467:33;19462:3;19458:43;19451:50;;19347:164;;19520:336;19587:38;19619:5;19587:38;:::i;:::-;19647:1;19661:154;19675:6;19672:1;19669:13;19661:154;;;19749:7;19743:14;19739:1;19734:3;19730:11;19723:35;19799:1;19790:7;19786:15;19775:26;;19697:4;19694:1;19690:12;19685:17;;19661:154;;;19844:1;19839:3;19835:11;19828:18;;19527:329;;19314:542;;19120:742;;19031:831;;;;:::o;19868:519::-;20030:4;20068:2;20057:9;20053:18;20045:26;;20081:67;20145:1;20134:9;20130:17;20121:6;20081:67;:::i;:::-;20195:9;20189:4;20185:20;20180:2;20169:9;20165:18;20158:48;20223:75;20293:4;20284:6;20223:75;:::i;:::-;20215:83;;20308:72;20376:2;20365:9;20361:18;20352:6;20308:72;:::i;:::-;19868:519;;;;;;:::o;20393:79::-;20432:7;20461:5;20450:16;;20393:79;;;:::o;20478:157::-;20583:45;20603:24;20621:5;20603:24;:::i;:::-;20583:45;:::i;:::-;20578:3;20571:58;20478:157;;:::o;20641:94::-;20674:8;20722:5;20718:2;20714:14;20693:35;;20641:94;;;:::o;20741:::-;20780:7;20809:20;20823:5;20809:20;:::i;:::-;20798:31;;20741:94;;;:::o;20841:100::-;20880:7;20909:26;20929:5;20909:26;:::i;:::-;20898:37;;20841:100;;;:::o;20947:157::-;21052:45;21072:24;21090:5;21072:24;:::i;:::-;21052:45;:::i;:::-;21047:3;21040:58;20947:157;;:::o;21110:397::-;21250:3;21265:75;21336:3;21327:6;21265:75;:::i;:::-;21365:2;21360:3;21356:12;21349:19;;21378:75;21449:3;21440:6;21378:75;:::i;:::-;21478:2;21473:3;21469:12;21462:19;;21498:3;21491:10;;21110:397;;;;;:::o;21513:180::-;21561:77;21558:1;21551:88;21658:4;21655:1;21648:15;21682:4;21679:1;21672:15;21699:176;21731:1;21748:20;21766:1;21748:20;:::i;:::-;21743:25;;21782:20;21800:1;21782:20;:::i;:::-;21777:25;;21821:1;21811:35;;21826:18;;:::i;:::-;21811:35;21867:1;21864;21860:9;21855:14;;21699:176;;;;:::o;21881:410::-;21921:7;21944:20;21962:1;21944:20;:::i;:::-;21939:25;;21978:20;21996:1;21978:20;:::i;:::-;21973:25;;22033:1;22030;22026:9;22055:30;22073:11;22055:30;:::i;:::-;22044:41;;22234:1;22225:7;22221:15;22218:1;22215:22;22195:1;22188:9;22168:83;22145:139;;22264:18;;:::i;:::-;22145:139;21929:362;21881:410;;;;:::o;22297:153::-;22437:5;22433:1;22425:6;22421:14;22414:29;22297:153;:::o;22456:365::-;22598:3;22619:66;22683:1;22678:3;22619:66;:::i;:::-;22612:73;;22694:93;22783:3;22694:93;:::i;:::-;22812:2;22807:3;22803:12;22796:19;;22456:365;;;:::o;22827:627::-;23043:4;23081:2;23070:9;23066:18;23058:26;;23094:71;23162:1;23151:9;23147:17;23138:6;23094:71;:::i;:::-;23175:66;23237:2;23226:9;23222:18;23213:6;23175:66;:::i;:::-;23288:9;23282:4;23278:20;23273:2;23262:9;23258:18;23251:48;23316:131;23442:4;23316:131;:::i;:::-;23308:139;;22827:627;;;;;:::o;23460:154::-;23600:6;23596:1;23588:6;23584:14;23577:30;23460:154;:::o;23620:365::-;23762:3;23783:66;23847:1;23842:3;23783:66;:::i;:::-;23776:73;;23858:93;23947:3;23858:93;:::i;:::-;23976:2;23971:3;23967:12;23960:19;;23620:365;;;:::o;23991:627::-;24207:4;24245:2;24234:9;24230:18;24222:26;;24258:71;24326:1;24315:9;24311:17;24302:6;24258:71;:::i;:::-;24339:66;24401:2;24390:9;24386:18;24377:6;24339:66;:::i;:::-;24452:9;24446:4;24442:20;24437:2;24426:9;24422:18;24415:48;24480:131;24606:4;24480:131;:::i;:::-;24472:139;;23991:627;;;;;:::o;24624:228::-;24764:34;24760:1;24752:6;24748:14;24741:58;24833:11;24828:2;24820:6;24816:15;24809:36;24624:228;:::o;24858:366::-;25000:3;25021:67;25085:2;25080:3;25021:67;:::i;:::-;25014:74;;25097:93;25186:3;25097:93;:::i;:::-;25215:2;25210:3;25206:12;25199:19;;24858:366;;;:::o;25230:419::-;25396:4;25434:2;25423:9;25419:18;25411:26;;25483:9;25477:4;25473:20;25469:1;25458:9;25454:17;25447:47;25511:131;25637:4;25511:131;:::i;:::-;25503:139;;25230:419;;;:::o;25655:442::-;25804:4;25842:2;25831:9;25827:18;25819:26;;25855:71;25923:1;25912:9;25908:17;25899:6;25855:71;:::i;:::-;25936:72;26004:2;25993:9;25989:18;25980:6;25936:72;:::i;:::-;26018;26086:2;26075:9;26071:18;26062:6;26018:72;:::i;:::-;25655:442;;;;;;:::o;26103:191::-;26143:3;26162:20;26180:1;26162:20;:::i;:::-;26157:25;;26196:20;26214:1;26196:20;:::i;:::-;26191:25;;26239:1;26236;26232:9;26225:16;;26260:3;26257:1;26254:10;26251:36;;;26267:18;;:::i;:::-;26251:36;26103:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1780600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addItem(string,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2962",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"burnToken(uint256)": "infinite",
								"decimals()": "375",
								"getBalance()": "2651",
								"isLessThanFive(bool,uint256)": "infinite",
								"items(uint8)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"purchaseItem(uint8)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"tokenId()": "2578",
								"totalSupply()": "2566",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferToken(address,uint256)": "infinite",
								"welcomeBonus()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 785,
									"end": 3600,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 785,
									"end": 3600,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 785,
									"end": 3600,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1199,
									"end": 1636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "446567656E000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "44474E0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1307,
									"end": 1338,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1312,
									"end": 1324,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1337,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1307,
									"end": 1311,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1307,
									"end": 1311,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1307,
									"end": 1311,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1307,
									"end": 1338,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1307,
									"end": 1338,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1307,
									"end": 1338,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1307,
									"end": 1338,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1307,
									"end": 1338,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4E6F76696365204E6176696761746F7200000000000000000000000000000000"
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1394,
									"end": 1395,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1397,
									"end": 1400,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1401,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1364,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1359,
									"end": 1367,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1365,
									"end": 1366,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1359,
									"end": 1367,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1359,
									"end": 1367,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1367,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1367,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1367,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1359,
									"end": 1367,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1367,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1367,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1367,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1367,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1359,
									"end": 1367,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1367,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1359,
									"end": 1367,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1359,
									"end": 1401,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1401,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "F"
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4D7974686963204D6176657269636B0000000000000000000000000000000000"
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1445,
									"end": 1446,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1451,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2BC"
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1452,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1417,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1412,
									"end": 1420,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1418,
									"end": 1419,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1412,
									"end": 1420,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1412,
									"end": 1420,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1420,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1420,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1420,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1412,
									"end": 1420,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1420,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1420,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1420,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1420,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1412,
									"end": 1420,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1420,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1412,
									"end": 1420,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1412,
									"end": 1452,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1452,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "43656C65737469616C2043727573686572000000000000000000000000000000"
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 1499,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1505,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4B0"
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1472,
									"end": 1506,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1468,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1463,
									"end": 1471,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1469,
									"end": 1470,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1463,
									"end": 1471,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1463,
									"end": 1471,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1471,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1471,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1471,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1463,
									"end": 1471,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1471,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1471,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1471,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1471,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1463,
									"end": 1471,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1471,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1463,
									"end": 1471,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1463,
									"end": 1506,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1506,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "41737472616C2041636500000000000000000000000000000000000000000000"
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1545,
									"end": 1546,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1548,
									"end": 1552,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "898"
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1522,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1517,
									"end": 1525,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1523,
									"end": 1524,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1517,
									"end": 1525,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1517,
									"end": 1525,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1525,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1525,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1525,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1517,
									"end": 1525,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1525,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1525,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1525,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1525,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1517,
									"end": 1525,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1525,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1517,
									"end": 1525,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1517,
									"end": 1553,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1553,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "446976696E6520446F6D696E61746F7200000000000000000000000000000000"
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1598,
									"end": 1599,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1605,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "960"
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1569,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1564,
									"end": 1572,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1570,
									"end": 1571,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1564,
									"end": 1572,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1564,
									"end": 1572,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1572,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1572,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1572,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1564,
									"end": 1572,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1572,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1572,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1572,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1572,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1564,
									"end": 1572,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1572,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1564,
									"end": 1572,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1564,
									"end": 1606,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1606,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1625,
									"end": 1626,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1617,
									"end": 1624,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1617,
									"end": 1624,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1636,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 785,
									"end": 3600,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 785,
									"end": 3600,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1760,
									"end": 1855,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1760,
									"end": 1855,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1830,
									"end": 1847,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1836,
									"end": 1838,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1840,
									"end": 1846,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1830,
									"end": 1835,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1830,
									"end": 1835,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1830,
									"end": 1835,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1830,
									"end": 1847,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1830,
									"end": 1847,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1830,
									"end": 1847,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1830,
									"end": 1847,
									"modifierDepth": 1,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1830,
									"end": 1847,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1760,
									"end": 1855,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1760,
									"end": 1855,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1760,
									"end": 1855,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1901,
									"end": 1941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1770,
									"end": 1776,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1804,
									"end": 1809,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1798,
									"end": 1810,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1810,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1810,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1823,
									"end": 2003,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1823,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1871,
									"end": 1948,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1868,
									"end": 1869,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1861,
									"end": 1949,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1968,
									"end": 1972,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1965,
									"end": 1966,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 1973,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 1996,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1989,
									"end": 1990,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1982,
									"end": 1997,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2009,
									"end": 2189,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2009,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2057,
									"end": 2134,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2047,
									"end": 2135,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2154,
									"end": 2158,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2151,
									"end": 2152,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2144,
									"end": 2159,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2178,
									"end": 2182,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2175,
									"end": 2176,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2168,
									"end": 2183,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2239,
									"end": 2245,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2277,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2270,
									"end": 2274,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2266,
									"end": 2278,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2278,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2278,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2323,
									"end": 2324,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2317,
									"end": 2321,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2313,
									"end": 2325,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2344,
									"end": 2362,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2392,
									"end": 2398,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2388,
									"end": 2405,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2378,
									"end": 2405,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2378,
									"end": 2405,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2462,
									"end": 2464,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2451,
									"end": 2465,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2431,
									"end": 2449,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2481,
									"end": 2499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2246,
									"end": 2515,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2574,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2593,
									"end": 2596,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2585,
									"end": 2596,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2585,
									"end": 2596,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2616,
									"end": 2619,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2613,
									"end": 2614,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2606,
									"end": 2620,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2650,
									"end": 2654,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2647,
									"end": 2648,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2629,
									"end": 2655,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2629,
									"end": 2655,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2705,
									"end": 2711,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2752,
									"end": 2754,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2747,
									"end": 2749,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2740,
									"end": 2745,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2736,
									"end": 2750,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2732,
									"end": 2755,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2722,
									"end": 2755,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2722,
									"end": 2755,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2811,
									"end": 2819,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2861,
									"end": 2866,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2855,
									"end": 2859,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2851,
									"end": 2867,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2830,
									"end": 2867,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2830,
									"end": 2867,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2949,
									"end": 2955,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2999,
									"end": 3000,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2987,
									"end": 2997,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3052,
									"end": 3118,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3041,
									"end": 3050,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 3022,
									"end": 3119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 3170,
									"end": 3178,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 3140,
									"end": 3179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3128,
									"end": 3179,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 3128,
									"end": 3179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3212,
									"end": 3216,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3208,
									"end": 3217,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3201,
									"end": 3206,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3197,
									"end": 3218,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3218,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3218,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3261,
									"end": 3265,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3259,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3247,
									"end": 3266,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3240,
									"end": 3245,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3237,
									"end": 3267,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2956,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2956,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3307,
									"end": 3310,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3328,
									"end": 3333,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3321,
									"end": 3333,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3321,
									"end": 3333,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3395,
									"end": 3404,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3455,
									"end": 3479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 3446,
									"end": 3480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3428,
									"end": 3481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3536,
									"end": 3539,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3557,
									"end": 3562,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3550,
									"end": 3562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3550,
									"end": 3562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 3715,
									"end": 3722,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 3684,
									"end": 3723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 3818,
									"end": 3834,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3794,
									"end": 3835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3786,
									"end": 3792,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3779,
									"end": 3783,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3773,
									"end": 3784,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 3745,
									"end": 3836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3739,
									"end": 3743,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3732,
									"end": 3837,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3650,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3894,
									"end": 3897,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3849,
									"end": 3922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 4005,
									"end": 4037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4104,
									"end": 4110,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4096,
									"end": 4102,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4090,
									"end": 4094,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 4046,
									"end": 4111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3981,
									"end": 4117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4200,
									"end": 4203,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4193,
									"end": 4198,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4190,
									"end": 4204,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 4291,
									"end": 4292,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4284,
									"end": 4289,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 4254,
									"end": 4293,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4227,
									"end": 4228,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4220,
									"end": 4225,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4216,
									"end": 4229,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4207,
									"end": 4229,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4207,
									"end": 4229,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4416,
									"end": 4418,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4411,
									"end": 4414,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4408,
									"end": 4419,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 4482,
									"end": 4487,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 4450,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 4552,
									"end": 4562,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 4534,
									"end": 4563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "tag",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4532,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4520,
									"end": 4564,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4717,
									"end": 4719,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4705,
									"end": 4715,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4702,
									"end": 4720,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4738,
									"end": 4746,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4723,
									"end": 4746,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4723,
									"end": 4746,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 4835,
									"end": 4838,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 4817,
									"end": 4839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4807,
									"end": 4815,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4803,
									"end": 4840,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4790,
									"end": 4801,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 4761,
									"end": 4841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "tag",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4918,
									"end": 4926,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4968,
									"end": 4973,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4962,
									"end": 4966,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4958,
									"end": 4974,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5031,
									"end": 5037,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 5112,
									"end": 5113,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5108,
									"end": 5114,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5100,
									"end": 5105,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5097,
									"end": 5098,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5093,
									"end": 5106,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 5064,
									"end": 5115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "tag",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5060,
									"end": 5116,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5149,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5139,
									"end": 5143,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5135,
									"end": 5150,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5125,
									"end": 5150,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5125,
									"end": 5150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5038,
									"end": 5156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5237,
									"end": 5241,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 5408,
									"end": 5411,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5402,
									"end": 5406,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 5383,
									"end": 5412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5375,
									"end": 5412,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5375,
									"end": 5412,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5445,
									"end": 5448,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5442,
									"end": 5443,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5438,
									"end": 5449,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5432,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5429,
									"end": 5450,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5450,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5450,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 5611,
									"end": 5614,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 5578,
									"end": 5615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5680,
									"end": 5698,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5672,
									"end": 5678,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5669,
									"end": 5699,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 5702,
									"end": 5720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 5778,
									"end": 5782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5772,
									"end": 5783,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 5746,
									"end": 5784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 5891,
									"end": 5897,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5883,
									"end": 5889,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5877,
									"end": 5881,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 5831,
									"end": 5898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5925,
									"end": 5926,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5949,
									"end": 5953,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5936,
									"end": 5953,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5936,
									"end": 5953,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5981,
									"end": 5983,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5973,
									"end": 5979,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5970,
									"end": 5984,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5998,
									"end": 5999,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6655,
									"end": 6656,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6678,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6721,
									"end": 6730,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6716,
									"end": 6719,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 6712,
									"end": 6731,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6706,
									"end": 6732,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6732,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6732,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 6832,
									"end": 6838,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 6772,
									"end": 6839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "tag",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6766,
									"end": 6770,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6759,
									"end": 6840,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6628,
									"end": 6850,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6045,
									"end": 6049,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6041,
									"end": 6050,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6033,
									"end": 6039,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6029,
									"end": 6051,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 6111,
									"end": 6115,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 6079,
									"end": 6116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6138,
									"end": 6139,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6166,
									"end": 6173,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6163,
									"end": 6164,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6160,
									"end": 6174,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6245,
									"end": 6254,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6240,
									"end": 6243,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6230,
									"end": 6256,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6222,
									"end": 6228,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6215,
									"end": 6257,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6296,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6288,
									"end": 6294,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6284,
									"end": 6298,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6274,
									"end": 6298,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6274,
									"end": 6298,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6343,
									"end": 6345,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6332,
									"end": 6341,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6328,
									"end": 6346,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6315,
									"end": 6346,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 6315,
									"end": 6346,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6189,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6186,
									"end": 6187,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6182,
									"end": 6194,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6177,
									"end": 6194,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6177,
									"end": 6194,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "tag",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6388,
									"end": 6394,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6379,
									"end": 6386,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6376,
									"end": 6395,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6446,
									"end": 6455,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6441,
									"end": 6444,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6437,
									"end": 6456,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6431,
									"end": 6457,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 6531,
									"end": 6535,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6523,
									"end": 6529,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6519,
									"end": 6536,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6508,
									"end": 6517,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 6489,
									"end": 6537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "tag",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6481,
									"end": 6487,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6474,
									"end": 6538,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6396,
									"end": 6552,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "tag",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6598,
									"end": 6599,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6594,
									"end": 6595,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6586,
									"end": 6592,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6582,
									"end": 6596,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6578,
									"end": 6600,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6572,
									"end": 6576,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6565,
									"end": 6601,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "tag",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 6967,
									"end": 6972,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 6949,
									"end": 6973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "tag",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6944,
									"end": 6947,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6937,
									"end": 6974,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7079,
									"end": 7083,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7117,
									"end": 7119,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7106,
									"end": 7115,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7102,
									"end": 7120,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7094,
									"end": 7120,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7094,
									"end": 7120,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7198,
									"end": 7199,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7187,
									"end": 7196,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7183,
									"end": 7200,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7174,
									"end": 7180,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 7130,
									"end": 7201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7214,
									"end": 7394,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 7214,
									"end": 7394,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7262,
									"end": 7339,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7259,
									"end": 7260,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7252,
									"end": 7340,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7359,
									"end": 7363,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 7356,
									"end": 7357,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 7349,
									"end": 7364,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7383,
									"end": 7387,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 7380,
									"end": 7381,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7373,
									"end": 7388,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7440,
									"end": 7443,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7459,
									"end": 7479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 7477,
									"end": 7478,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7459,
									"end": 7479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 7459,
									"end": 7479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7459,
									"end": 7479,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 7459,
									"end": 7479,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7454,
									"end": 7479,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7454,
									"end": 7479,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7493,
									"end": 7513,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 7511,
									"end": 7512,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7493,
									"end": 7513,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 7493,
									"end": 7513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7493,
									"end": 7513,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 7493,
									"end": 7513,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7488,
									"end": 7513,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7488,
									"end": 7513,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7536,
									"end": 7537,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7533,
									"end": 7534,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7529,
									"end": 7538,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7522,
									"end": 7538,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7522,
									"end": 7538,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7557,
									"end": 7560,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7554,
									"end": 7555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7551,
									"end": 7561,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7564,
									"end": 7582,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 7564,
									"end": 7582,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 7564,
									"end": 7582,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7564,
									"end": 7582,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 7564,
									"end": 7582,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "tag",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7597,
									"end": 7715,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 7597,
									"end": 7715,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 7702,
									"end": 7707,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 7684,
									"end": 7708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7679,
									"end": 7682,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7672,
									"end": 7709,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7597,
									"end": 7715,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7597,
									"end": 7715,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7597,
									"end": 7715,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7870,
									"end": 7874,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7908,
									"end": 7910,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7897,
									"end": 7906,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7893,
									"end": 7911,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7885,
									"end": 7911,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7885,
									"end": 7911,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7921,
									"end": 7992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 7989,
									"end": 7990,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7978,
									"end": 7987,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7974,
									"end": 7991,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7965,
									"end": 7971,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7921,
									"end": 7992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 7921,
									"end": 7992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7921,
									"end": 7992,
									"name": "tag",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 7921,
									"end": 7992,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8002,
									"end": 8074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 8070,
									"end": 8072,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8059,
									"end": 8068,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8055,
									"end": 8073,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8046,
									"end": 8052,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8002,
									"end": 8074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 8002,
									"end": 8074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8002,
									"end": 8074,
									"name": "tag",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 8002,
									"end": 8074,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8084,
									"end": 8156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8152,
									"end": 8154,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 8141,
									"end": 8150,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8137,
									"end": 8155,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8128,
									"end": 8134,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8084,
									"end": 8156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 8084,
									"end": 8156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8084,
									"end": 8156,
									"name": "tag",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8084,
									"end": 8156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8262,
									"end": 8266,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8300,
									"end": 8302,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8289,
									"end": 8298,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8285,
									"end": 8303,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8277,
									"end": 8303,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8277,
									"end": 8303,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8313,
									"end": 8384,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 8381,
									"end": 8382,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8370,
									"end": 8379,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8366,
									"end": 8383,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8357,
									"end": 8363,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8313,
									"end": 8384,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 8313,
									"end": 8384,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8313,
									"end": 8384,
									"name": "tag",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 8313,
									"end": 8384,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 785,
									"end": 3600,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 785,
									"end": 3600,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 785,
									"end": 3600,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 785,
									"end": 3600,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 785,
									"end": 3600,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 785,
									"end": 3600,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 3600,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 785,
									"end": 3600,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 3600,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220734a6cf9e06dc311b3d7f15bc77b99713861ae9e2851185954254059e2e24ffd64736f6c634300081a0033",
									".code": [
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "AF3BCB7D"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "AF3BCB7D"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "EA5E65E0"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "F5112F87"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "FBD1A97B"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "79CC6790"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "7B47EC1A"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "62D6BBDF"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "1072CBEA"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "12065FE0"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "17D70F7C"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3600,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1893,
											"end": 2081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1893,
											"end": 2081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3316,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3316,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 983,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 983,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1644,
											"end": 1727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1644,
											"end": 1727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1760,
											"end": 1855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1760,
											"end": 1855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2286,
											"end": 2440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2286,
											"end": 2440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3448,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3448,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2935,
											"end": 3275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2935,
											"end": 3275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 2449,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2449,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2278,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2116,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2116,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2116,
											"end": 2278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2278,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2116,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2278,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 942,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 942,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 942,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1978,
											"end": 1999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 1999,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1978,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 2008,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 2008,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1970,
											"end": 2033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1970,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2053,
											"end": 2063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2044,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 2044,
											"end": 2073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2044,
											"end": 2073,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 2081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3367,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3386,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 3396,
											"end": 3406,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3386,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3386,
											"end": 3407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3386,
											"end": 3407,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 3386,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3379,
											"end": 3407,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3379,
											"end": 3407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1694,
											"end": 1699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1830,
											"end": 1847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1836,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1840,
											"end": 1846,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1830,
											"end": 1847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1830,
											"end": 1847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2395,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2397,
											"end": 2404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2404,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2397,
											"end": 2404,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2404,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2397,
											"end": 2404,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2411,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2368,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2374,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2381,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2374,
											"end": 2381,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2374,
											"end": 2381,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2374,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2374,
											"end": 2381,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2374,
											"end": 2381,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2374,
											"end": 2381,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2374,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2374,
											"end": 2381,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2368,
											"end": 2382,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2368,
											"end": 2382,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2382,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2382,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2382,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2382,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2382,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2382,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2368,
											"end": 2412,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2412,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2423,
											"end": 2430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2423,
											"end": 2432,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2432,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3539,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3519,
											"end": 3529,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3509,
											"end": 3530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3530,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3509,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3539,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3539,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3501,
											"end": 3563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3574,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3574,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3574,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3574,
											"end": 3587,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3574,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3024,
											"end": 3025,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3005,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3013,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3014,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3020,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2992,
											"end": 3044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 2992,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3093,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3101,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3102,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3108,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3088,
											"end": 3108,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3108,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3073,
											"end": 3083,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3063,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3084,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3063,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3108,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3108,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3055,
											"end": 3133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3055,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3151,
											"end": 3156,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3164,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3151,
											"end": 3171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3171,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3146,
											"end": 3172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3146,
											"end": 3172,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3146,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3204,
											"end": 3214,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "PUSH",
											"source": 7,
											"value": "8BEDD141782C49139782BD92BD7A760A0BCB544FFECFD2B25F00366FAE06598E"
										},
										{
											"begin": 3216,
											"end": 3223,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3230,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3238,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3244,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3244,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3251,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3259,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3266,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3246,
											"end": 3266,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3266,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3190,
											"end": 3267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 3275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 3275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2529,
											"end": 2546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2616,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2581,
											"end": 2596,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2608,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2564,
											"end": 2609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2564,
											"end": 2609,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2610,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2610,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2610,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2554,
											"end": 2610,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2610,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2549,
											"end": 2611,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2611,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2549,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2549,
											"end": 2616,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2549,
											"end": 2616,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2549,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2549,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2549,
											"end": 2616,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2549,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2529,
											"end": 2616,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2529,
											"end": 2616,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2661,
											"end": 2662,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2662,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2663,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2663,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2644,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2663,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2663,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2663,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2629,
											"end": 2916,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2686,
											"end": 2696,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2710,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2698,
											"end": 2708,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2698,
											"end": 2710,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2698,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2710,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2698,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 2680,
											"end": 2711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2711,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2680,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "PUSH",
											"source": 7,
											"value": "D04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587"
										},
										{
											"begin": 2755,
											"end": 2767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2731,
											"end": 2781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2781,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2629,
											"end": 2916,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2916,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2629,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2821,
											"end": 2831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2816,
											"end": 2832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2864,
											"end": 2874,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "PUSH",
											"source": 7,
											"value": "D04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587"
										},
										{
											"begin": 2876,
											"end": 2888,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2852,
											"end": 2904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2904,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2916,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2629,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2278,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2116,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2192,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2176,
											"end": 2186,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2166,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2187,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2166,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2192,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2158,
											"end": 2238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2158,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2255,
											"end": 2265,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2269,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 2249,
											"end": 2270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2270,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2249,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 942,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 942,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3777,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3691,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3733,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3766,
											"end": 3770,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3759,
											"end": 3764,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3755,
											"end": 3771,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3744,
											"end": 3771,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3744,
											"end": 3771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3777,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3895,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 3783,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 3882,
											"end": 3887,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3866,
											"end": 3888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3864,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3889,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3990,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4030,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4017,
											"end": 4026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4041,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 4105,
											"end": 4106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4090,
											"end": 4107,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4087,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4041,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 4041,
											"end": 4108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4041,
											"end": 4108,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 4041,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4206,
											"end": 4212,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4251,
											"end": 4260,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4242,
											"end": 4249,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4238,
											"end": 4261,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4234,
											"end": 4266,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4269,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 4269,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 4269,
											"end": 4348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4269,
											"end": 4348,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 4269,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4389,
											"end": 4390,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 4459,
											"end": 4466,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4457,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4414,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 4414,
											"end": 4467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4414,
											"end": 4467,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 4414,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4360,
											"end": 4477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4518,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 4587,
											"end": 4594,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4584,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4567,
											"end": 4576,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4585,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 4542,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4532,
											"end": 4595,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4532,
											"end": 4595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4487,
											"end": 4605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4646,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 4715,
											"end": 4722,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4691,
											"end": 4713,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4670,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 4670,
											"end": 4723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4670,
											"end": 4723,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 4670,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4660,
											"end": 4723,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4660,
											"end": 4723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4615,
											"end": 4733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5190,
											"end": 5191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5187,
											"end": 5188,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5204,
											"end": 5321,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 5204,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5314,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5311,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5315,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5327,
											"end": 5507,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 5327,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5452,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5476,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 5469,
											"end": 5470,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5496,
											"end": 5500,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5493,
											"end": 5494,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5486,
											"end": 5501,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5513,
											"end": 5794,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 5513,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 5618,
											"end": 5622,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 5596,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5594,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5624,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5726,
											"end": 5732,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5724,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5711,
											"end": 5733,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5690,
											"end": 5708,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5688,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5675,
											"end": 5709,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5672,
											"end": 5734,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5669,
											"end": 5757,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5669,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 5669,
											"end": 5757,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 5737,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5669,
											"end": 5757,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 5669,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5787,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5773,
											"end": 5775,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5766,
											"end": 5788,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5556,
											"end": 5794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5513,
											"end": 5794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5513,
											"end": 5794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5513,
											"end": 5794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5929,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 5800,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5834,
											"end": 5840,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 5861,
											"end": 5881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5851,
											"end": 5881,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5851,
											"end": 5881,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5890,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 5918,
											"end": 5922,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5910,
											"end": 5916,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5890,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 5890,
											"end": 5923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5890,
											"end": 5923,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 5890,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5929,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5929,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5929,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 6243,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 5935,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5997,
											"end": 6001,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6087,
											"end": 6105,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6079,
											"end": 6085,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6076,
											"end": 6106,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6129,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 6073,
											"end": 6129,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 6109,
											"end": 6127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6129,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 6073,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6147,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 6169,
											"end": 6175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6147,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 6147,
											"end": 6176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6147,
											"end": 6176,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 6147,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6176,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6235,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6225,
											"end": 6229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6236,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6213,
											"end": 6236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6213,
											"end": 6236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 6243,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 6243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 6243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 6243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6249,
											"end": 6397,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 6249,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6347,
											"end": 6353,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6342,
											"end": 6345,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6337,
											"end": 6340,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6324,
											"end": 6354,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6379,
											"end": 6385,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6374,
											"end": 6377,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6363,
											"end": 6390,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6249,
											"end": 6397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6249,
											"end": 6397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6249,
											"end": 6397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6249,
											"end": 6397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6828,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 6403,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6481,
											"end": 6486,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6506,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 6522,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 6564,
											"end": 6570,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 6522,
											"end": 6571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6571,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 6522,
											"end": 6571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 6506,
											"end": 6572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6572,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 6506,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6497,
											"end": 6572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6497,
											"end": 6572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6595,
											"end": 6601,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6588,
											"end": 6593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6581,
											"end": 6602,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6633,
											"end": 6637,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6626,
											"end": 6631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6622,
											"end": 6638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6674,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6662,
											"end": 6668,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6657,
											"end": 6660,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6653,
											"end": 6669,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6650,
											"end": 6675,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6647,
											"end": 6759,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6647,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 6647,
											"end": 6759,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 6678,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 6678,
											"end": 6757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6757,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 6678,
											"end": 6757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6647,
											"end": 6759,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 6647,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 6815,
											"end": 6821,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6813,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6805,
											"end": 6808,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 6768,
											"end": 6822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6822,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 6768,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6487,
											"end": 6828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6828,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6828,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6848,
											"end": 7188,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 6848,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6904,
											"end": 6909,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 6956,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6946,
											"end": 6950,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6951,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6930,
											"end": 6957,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6920,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 6920,
											"end": 7042,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6961,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 6961,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 6961,
											"end": 7040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6961,
											"end": 7040,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 6961,
											"end": 7040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6920,
											"end": 7042,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 6920,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7078,
											"end": 7084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7065,
											"end": 7085,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7103,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 7178,
											"end": 7181,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7170,
											"end": 7176,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7163,
											"end": 7167,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7155,
											"end": 7161,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7103,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 7103,
											"end": 7182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7103,
											"end": 7182,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 7103,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7094,
											"end": 7182,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7094,
											"end": 7182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6910,
											"end": 7188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6848,
											"end": 7188,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6848,
											"end": 7188,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6848,
											"end": 7188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6848,
											"end": 7188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6848,
											"end": 7188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7848,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 7194,
											"end": 7848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7272,
											"end": 7278,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7286,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7329,
											"end": 7331,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7317,
											"end": 7326,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7308,
											"end": 7315,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7304,
											"end": 7327,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7300,
											"end": 7332,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7297,
											"end": 7416,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7297,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 7297,
											"end": 7416,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7335,
											"end": 7414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 7335,
											"end": 7414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 7335,
											"end": 7414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7335,
											"end": 7414,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 7335,
											"end": 7414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7297,
											"end": 7416,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 7297,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7483,
											"end": 7484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7481,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7468,
											"end": 7485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7486,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7531,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7505,
											"end": 7511,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7502,
											"end": 7532,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7616,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 7499,
											"end": 7616,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7535,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 7535,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 7535,
											"end": 7614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7535,
											"end": 7614,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 7535,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7616,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 7499,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7640,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 7695,
											"end": 7702,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 7692,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7675,
											"end": 7684,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7693,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7640,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 7640,
											"end": 7703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7640,
											"end": 7703,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 7640,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7630,
											"end": 7703,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7630,
											"end": 7703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7426,
											"end": 7713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7752,
											"end": 7754,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 7823,
											"end": 7830,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7803,
											"end": 7812,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7799,
											"end": 7821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 7778,
											"end": 7831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7723,
											"end": 7841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7848,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7848,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 7964,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7950,
											"end": 7959,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7941,
											"end": 7948,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7937,
											"end": 7960,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7933,
											"end": 7965,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7930,
											"end": 8049,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7930,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 7930,
											"end": 8049,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7968,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 7968,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 7968,
											"end": 8047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7968,
											"end": 8047,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 7968,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7930,
											"end": 8049,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 7930,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8088,
											"end": 8089,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 8158,
											"end": 8165,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8149,
											"end": 8155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8138,
											"end": 8147,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8134,
											"end": 8156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 8113,
											"end": 8166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8166,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8166,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8059,
											"end": 8176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 8183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8307,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 8189,
											"end": 8307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 8294,
											"end": 8299,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 8276,
											"end": 8300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8300,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 8276,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8274,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8264,
											"end": 8301,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8535,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 8313,
											"end": 8535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8406,
											"end": 8410,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8444,
											"end": 8446,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8433,
											"end": 8442,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8429,
											"end": 8447,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8421,
											"end": 8447,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8421,
											"end": 8447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8457,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 8525,
											"end": 8526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8514,
											"end": 8523,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8510,
											"end": 8527,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8501,
											"end": 8507,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8457,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 8457,
											"end": 8528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8457,
											"end": 8528,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 8457,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8535,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8535,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8541,
											"end": 8659,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 8541,
											"end": 8659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 8628,
											"end": 8633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8612,
											"end": 8634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8634,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 8612,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8605,
											"end": 8610,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8602,
											"end": 8635,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8592,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 8592,
											"end": 8653,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8649,
											"end": 8650,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8646,
											"end": 8647,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8639,
											"end": 8651,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8592,
											"end": 8653,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 8592,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8541,
											"end": 8659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8541,
											"end": 8659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8665,
											"end": 8800,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 8665,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8709,
											"end": 8714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8747,
											"end": 8753,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8734,
											"end": 8754,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8725,
											"end": 8754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8725,
											"end": 8754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8763,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 8788,
											"end": 8793,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8763,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 8763,
											"end": 8794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8763,
											"end": 8794,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 8763,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8665,
											"end": 8800,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8665,
											"end": 8800,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8665,
											"end": 8800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8665,
											"end": 8800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8665,
											"end": 8800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8806,
											"end": 9131,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 8806,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8863,
											"end": 8869,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8912,
											"end": 8914,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8900,
											"end": 8909,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8891,
											"end": 8898,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8887,
											"end": 8910,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8883,
											"end": 8915,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8999,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 8880,
											"end": 8999,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8918,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 8918,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 8918,
											"end": 8997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8918,
											"end": 8997,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 8918,
											"end": 8997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8999,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 8880,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9038,
											"end": 9039,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9063,
											"end": 9114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 9106,
											"end": 9113,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9097,
											"end": 9103,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9086,
											"end": 9095,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9082,
											"end": 9104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9063,
											"end": 9114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 9063,
											"end": 9114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9063,
											"end": 9114,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 9063,
											"end": 9114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9053,
											"end": 9114,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9053,
											"end": 9114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9009,
											"end": 9124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8806,
											"end": 9131,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8806,
											"end": 9131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8806,
											"end": 9131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8806,
											"end": 9131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8806,
											"end": 9131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9611,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 9137,
											"end": 9611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9205,
											"end": 9211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9213,
											"end": 9219,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9262,
											"end": 9264,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9250,
											"end": 9259,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9241,
											"end": 9248,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9237,
											"end": 9260,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9233,
											"end": 9265,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9230,
											"end": 9349,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9230,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 9230,
											"end": 9349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9268,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 9268,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 9268,
											"end": 9347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9268,
											"end": 9347,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 9268,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9230,
											"end": 9349,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 9230,
											"end": 9349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9413,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 9458,
											"end": 9465,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9449,
											"end": 9455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9438,
											"end": 9447,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9456,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9413,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 9413,
											"end": 9466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9413,
											"end": 9466,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 9413,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9403,
											"end": 9466,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9403,
											"end": 9466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9359,
											"end": 9476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9515,
											"end": 9517,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9541,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 9586,
											"end": 9593,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9577,
											"end": 9583,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9566,
											"end": 9575,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9562,
											"end": 9584,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9541,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 9541,
											"end": 9594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9541,
											"end": 9594,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 9541,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9531,
											"end": 9594,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9531,
											"end": 9594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9486,
											"end": 9604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9611,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9611,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9611,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9617,
											"end": 9733,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 9617,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9687,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 9702,
											"end": 9707,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9687,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 9687,
											"end": 9708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9687,
											"end": 9708,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 9687,
											"end": 9708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9680,
											"end": 9685,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9677,
											"end": 9709,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9667,
											"end": 9727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 9667,
											"end": 9727,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9723,
											"end": 9724,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9720,
											"end": 9721,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9713,
											"end": 9725,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9667,
											"end": 9727,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 9667,
											"end": 9727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9617,
											"end": 9733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9617,
											"end": 9733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9739,
											"end": 9872,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 9739,
											"end": 9872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9787,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9820,
											"end": 9826,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9807,
											"end": 9827,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 9798,
											"end": 9827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9798,
											"end": 9827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9836,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 9860,
											"end": 9865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9836,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 9836,
											"end": 9866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9836,
											"end": 9866,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 9836,
											"end": 9866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9739,
											"end": 9872,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9739,
											"end": 9872,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9739,
											"end": 9872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9739,
											"end": 9872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9739,
											"end": 9872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9878,
											"end": 10346,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 9878,
											"end": 10346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9943,
											"end": 9949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10000,
											"end": 10002,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9988,
											"end": 9997,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9979,
											"end": 9986,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9975,
											"end": 9998,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9971,
											"end": 10003,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9968,
											"end": 10087,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9968,
											"end": 10087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 9968,
											"end": 10087,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10006,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 10006,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 10006,
											"end": 10085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10006,
											"end": 10085,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 10006,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9968,
											"end": 10087,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 9968,
											"end": 10087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10126,
											"end": 10127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10151,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 10193,
											"end": 10200,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10184,
											"end": 10190,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10173,
											"end": 10182,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10169,
											"end": 10191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10151,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 10151,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10151,
											"end": 10201,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 10151,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10141,
											"end": 10201,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10141,
											"end": 10201,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10097,
											"end": 10211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10250,
											"end": 10252,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10276,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 10321,
											"end": 10328,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10312,
											"end": 10318,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10301,
											"end": 10310,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10297,
											"end": 10319,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 10276,
											"end": 10329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10329,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 10276,
											"end": 10329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10266,
											"end": 10329,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10266,
											"end": 10329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10221,
											"end": 10339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9878,
											"end": 10346,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9878,
											"end": 10346,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9878,
											"end": 10346,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9878,
											"end": 10346,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9878,
											"end": 10346,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9878,
											"end": 10346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10352,
											"end": 10877,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 10352,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10517,
											"end": 10521,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10555,
											"end": 10557,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10544,
											"end": 10553,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10540,
											"end": 10558,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10532,
											"end": 10558,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10532,
											"end": 10558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10604,
											"end": 10613,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10598,
											"end": 10602,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10594,
											"end": 10614,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10590,
											"end": 10591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10579,
											"end": 10588,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10575,
											"end": 10592,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10568,
											"end": 10615,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10632,
											"end": 10710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 10705,
											"end": 10709,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10696,
											"end": 10702,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10632,
											"end": 10710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 10632,
											"end": 10710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10632,
											"end": 10710,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 10632,
											"end": 10710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10624,
											"end": 10710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10624,
											"end": 10710,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10720,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 10784,
											"end": 10786,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10773,
											"end": 10782,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10769,
											"end": 10787,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10760,
											"end": 10766,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10720,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 10720,
											"end": 10788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10720,
											"end": 10788,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 10720,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10798,
											"end": 10870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 10866,
											"end": 10868,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10855,
											"end": 10864,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10851,
											"end": 10869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10842,
											"end": 10848,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10798,
											"end": 10870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 10798,
											"end": 10870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10798,
											"end": 10870,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 10798,
											"end": 10870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10352,
											"end": 10877,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10352,
											"end": 10877,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10352,
											"end": 10877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10352,
											"end": 10877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10352,
											"end": 10877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10352,
											"end": 10877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10352,
											"end": 10877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10883,
											"end": 11063,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 10883,
											"end": 11063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10931,
											"end": 11008,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10928,
											"end": 10929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10921,
											"end": 11009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11028,
											"end": 11032,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 11025,
											"end": 11026,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11018,
											"end": 11033,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11052,
											"end": 11056,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11049,
											"end": 11050,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11042,
											"end": 11057,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11069,
											"end": 11389,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 11069,
											"end": 11389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11113,
											"end": 11119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11150,
											"end": 11151,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 11144,
											"end": 11148,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11140,
											"end": 11152,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11130,
											"end": 11152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11130,
											"end": 11152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11197,
											"end": 11198,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 11191,
											"end": 11195,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11187,
											"end": 11199,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11218,
											"end": 11236,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11208,
											"end": 11289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 11208,
											"end": 11289,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11274,
											"end": 11278,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 11266,
											"end": 11272,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11262,
											"end": 11279,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11252,
											"end": 11279,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11252,
											"end": 11279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11208,
											"end": 11289,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 11208,
											"end": 11289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11336,
											"end": 11338,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11328,
											"end": 11334,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11325,
											"end": 11339,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11305,
											"end": 11323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11302,
											"end": 11340,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11299,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 11299,
											"end": 11383,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11355,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 11355,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 11355,
											"end": 11373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11355,
											"end": 11373,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 11355,
											"end": 11373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11299,
											"end": 11383,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 11299,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11120,
											"end": 11389,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11069,
											"end": 11389,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11069,
											"end": 11389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11069,
											"end": 11389,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11069,
											"end": 11389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11395,
											"end": 11565,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 11395,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11535,
											"end": 11557,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 11531,
											"end": 11532,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11529,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11519,
											"end": 11533,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11512,
											"end": 11558,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11395,
											"end": 11565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11395,
											"end": 11565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11571,
											"end": 11937,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 11571,
											"end": 11937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11713,
											"end": 11716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11734,
											"end": 11801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 11798,
											"end": 11800,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 11793,
											"end": 11796,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11734,
											"end": 11801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 11734,
											"end": 11801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11734,
											"end": 11801,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 11734,
											"end": 11801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11727,
											"end": 11801,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11727,
											"end": 11801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11810,
											"end": 11903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 11899,
											"end": 11902,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11810,
											"end": 11903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 11810,
											"end": 11903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11810,
											"end": 11903,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 11810,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11928,
											"end": 11930,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11923,
											"end": 11926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11919,
											"end": 11931,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11931,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11571,
											"end": 11937,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11571,
											"end": 11937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11571,
											"end": 11937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11571,
											"end": 11937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11943,
											"end": 12362,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 11943,
											"end": 12362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12113,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12147,
											"end": 12149,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12136,
											"end": 12145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12132,
											"end": 12150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12124,
											"end": 12150,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12124,
											"end": 12150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12196,
											"end": 12205,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12186,
											"end": 12206,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12182,
											"end": 12183,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12171,
											"end": 12180,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12167,
											"end": 12184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12160,
											"end": 12207,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12224,
											"end": 12355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 12350,
											"end": 12354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12224,
											"end": 12355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 12224,
											"end": 12355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12224,
											"end": 12355,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 12224,
											"end": 12355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12216,
											"end": 12355,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12216,
											"end": 12355,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11943,
											"end": 12362,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11943,
											"end": 12362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11943,
											"end": 12362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11943,
											"end": 12362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12368,
											"end": 12509,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 12368,
											"end": 12509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12417,
											"end": 12421,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12440,
											"end": 12443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12432,
											"end": 12443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12432,
											"end": 12443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12463,
											"end": 12466,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12460,
											"end": 12461,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12453,
											"end": 12467,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12497,
											"end": 12501,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12494,
											"end": 12495,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12484,
											"end": 12502,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12476,
											"end": 12502,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12476,
											"end": 12502,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12368,
											"end": 12509,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12368,
											"end": 12509,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12368,
											"end": 12509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12368,
											"end": 12509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12515,
											"end": 12608,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 12515,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12552,
											"end": 12558,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12599,
											"end": 12601,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12594,
											"end": 12596,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 12587,
											"end": 12592,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12583,
											"end": 12597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12579,
											"end": 12602,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12569,
											"end": 12602,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12569,
											"end": 12602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12515,
											"end": 12608,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12515,
											"end": 12608,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12515,
											"end": 12608,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12515,
											"end": 12608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12614,
											"end": 12721,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 12614,
											"end": 12721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12658,
											"end": 12666,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12708,
											"end": 12713,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12702,
											"end": 12706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12698,
											"end": 12714,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 12677,
											"end": 12714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12677,
											"end": 12714,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12614,
											"end": 12721,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12614,
											"end": 12721,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12614,
											"end": 12721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12614,
											"end": 12721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12614,
											"end": 12721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12727,
											"end": 13120,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 12727,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12796,
											"end": 12802,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12846,
											"end": 12847,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 12834,
											"end": 12844,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12830,
											"end": 12848,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12869,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 12899,
											"end": 12965,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12888,
											"end": 12897,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12869,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 12869,
											"end": 12966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12869,
											"end": 12966,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 12869,
											"end": 12966,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12987,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 13017,
											"end": 13025,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13006,
											"end": 13015,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12987,
											"end": 13026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 12987,
											"end": 13026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12987,
											"end": 13026,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 12987,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12975,
											"end": 13026,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 12975,
											"end": 13026,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13059,
											"end": 13063,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13055,
											"end": 13064,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 13048,
											"end": 13053,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13044,
											"end": 13065,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13035,
											"end": 13065,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13035,
											"end": 13065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13108,
											"end": 13112,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13098,
											"end": 13106,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13094,
											"end": 13113,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13087,
											"end": 13092,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13084,
											"end": 13114,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 13074,
											"end": 13114,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13074,
											"end": 13114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12803,
											"end": 13120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12803,
											"end": 13120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12727,
											"end": 13120,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 12727,
											"end": 13120,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12727,
											"end": 13120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12727,
											"end": 13120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12727,
											"end": 13120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12727,
											"end": 13120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13126,
											"end": 13186,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 13126,
											"end": 13186,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13154,
											"end": 13157,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13175,
											"end": 13180,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13168,
											"end": 13180,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13168,
											"end": 13180,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13126,
											"end": 13186,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13126,
											"end": 13186,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13126,
											"end": 13186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13126,
											"end": 13186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13192,
											"end": 13334,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 13192,
											"end": 13334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13242,
											"end": 13251,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13275,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 13293,
											"end": 13327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 13302,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 13320,
											"end": 13325,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13302,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 13302,
											"end": 13326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13302,
											"end": 13326,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 13302,
											"end": 13326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13293,
											"end": 13327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 13293,
											"end": 13327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13293,
											"end": 13327,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 13293,
											"end": 13327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13275,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 13275,
											"end": 13328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13275,
											"end": 13328,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 13275,
											"end": 13328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13262,
											"end": 13328,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13262,
											"end": 13328,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13192,
											"end": 13334,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13192,
											"end": 13334,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13192,
											"end": 13334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13192,
											"end": 13334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13340,
											"end": 13415,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 13340,
											"end": 13415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13383,
											"end": 13386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13404,
											"end": 13409,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13409,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13409,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13340,
											"end": 13415,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13340,
											"end": 13415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13340,
											"end": 13415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13340,
											"end": 13415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13421,
											"end": 13690,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 13421,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13531,
											"end": 13570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 13562,
											"end": 13569,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13531,
											"end": 13570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 13531,
											"end": 13570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13531,
											"end": 13570,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 13531,
											"end": 13570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13592,
											"end": 13683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 13641,
											"end": 13682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 13665,
											"end": 13681,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13641,
											"end": 13682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 13641,
											"end": 13682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13641,
											"end": 13682,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 13641,
											"end": 13682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13633,
											"end": 13639,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13626,
											"end": 13630,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13620,
											"end": 13631,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13592,
											"end": 13683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 13592,
											"end": 13683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13592,
											"end": 13683,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 13592,
											"end": 13683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13586,
											"end": 13590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13579,
											"end": 13684,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 13497,
											"end": 13690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13421,
											"end": 13690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13421,
											"end": 13690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13421,
											"end": 13690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13421,
											"end": 13690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13696,
											"end": 13769,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 13696,
											"end": 13769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13741,
											"end": 13744,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13696,
											"end": 13769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13696,
											"end": 13769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13775,
											"end": 13964,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 13775,
											"end": 13964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13852,
											"end": 13884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 13852,
											"end": 13884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 13852,
											"end": 13884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13852,
											"end": 13884,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 13852,
											"end": 13884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13893,
											"end": 13958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 13951,
											"end": 13957,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13943,
											"end": 13949,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13937,
											"end": 13941,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13893,
											"end": 13958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 13893,
											"end": 13958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13893,
											"end": 13958,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 13893,
											"end": 13958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13828,
											"end": 13964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13775,
											"end": 13964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13775,
											"end": 13964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13775,
											"end": 13964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13970,
											"end": 14156,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 13970,
											"end": 14156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14030,
											"end": 14150,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 14030,
											"end": 14150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14047,
											"end": 14050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14045,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14037,
											"end": 14051,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 14030,
											"end": 14150,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14030,
											"end": 14150,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 14030,
											"end": 14150,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 14138,
											"end": 14139,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14131,
											"end": 14136,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 14101,
											"end": 14140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14140,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 14101,
											"end": 14140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14074,
											"end": 14075,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 14067,
											"end": 14072,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14063,
											"end": 14076,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14054,
											"end": 14076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14054,
											"end": 14076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14030,
											"end": 14150,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 14030,
											"end": 14150,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14030,
											"end": 14150,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 14030,
											"end": 14150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13970,
											"end": 14156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13970,
											"end": 14156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13970,
											"end": 14156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14162,
											"end": 14705,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 14162,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14263,
											"end": 14265,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 14258,
											"end": 14261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14255,
											"end": 14266,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14698,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 14252,
											"end": 14698,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14297,
											"end": 14335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 14329,
											"end": 14334,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14297,
											"end": 14335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 14297,
											"end": 14335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14297,
											"end": 14335,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 14297,
											"end": 14335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14381,
											"end": 14410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 14399,
											"end": 14409,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14381,
											"end": 14410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 14381,
											"end": 14410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14381,
											"end": 14410,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 14381,
											"end": 14410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14371,
											"end": 14379,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14367,
											"end": 14411,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14564,
											"end": 14566,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14552,
											"end": 14562,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14549,
											"end": 14567,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 14546,
											"end": 14595,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14546,
											"end": 14595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 14546,
											"end": 14595,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14585,
											"end": 14593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14570,
											"end": 14593,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14570,
											"end": 14593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14546,
											"end": 14595,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 14546,
											"end": 14595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14608,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 14664,
											"end": 14686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 14682,
											"end": 14685,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14664,
											"end": 14686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 14664,
											"end": 14686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14664,
											"end": 14686,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 14664,
											"end": 14686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14654,
											"end": 14662,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14650,
											"end": 14687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14637,
											"end": 14648,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14608,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 14608,
											"end": 14688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14608,
											"end": 14688,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 14608,
											"end": 14688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14267,
											"end": 14698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14267,
											"end": 14698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14698,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 14252,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14162,
											"end": 14705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14162,
											"end": 14705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14162,
											"end": 14705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14162,
											"end": 14705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14711,
											"end": 14828,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 14711,
											"end": 14828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14765,
											"end": 14773,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14815,
											"end": 14820,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14809,
											"end": 14813,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14805,
											"end": 14821,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 14784,
											"end": 14821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14784,
											"end": 14821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14711,
											"end": 14828,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14711,
											"end": 14828,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14711,
											"end": 14828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14711,
											"end": 14828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14711,
											"end": 14828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14834,
											"end": 15003,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 14834,
											"end": 15003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14878,
											"end": 14884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14911,
											"end": 14962,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 14959,
											"end": 14960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14955,
											"end": 14961,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 14947,
											"end": 14952,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14944,
											"end": 14945,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 14940,
											"end": 14953,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14911,
											"end": 14962,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 14911,
											"end": 14962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14911,
											"end": 14962,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 14911,
											"end": 14962,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14907,
											"end": 14963,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 14992,
											"end": 14996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14986,
											"end": 14990,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14982,
											"end": 14997,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14972,
											"end": 14997,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14972,
											"end": 14997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14885,
											"end": 15003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14834,
											"end": 15003,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14834,
											"end": 15003,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14834,
											"end": 15003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14834,
											"end": 15003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14834,
											"end": 15003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15008,
											"end": 15303,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 15008,
											"end": 15303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15084,
											"end": 15088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15230,
											"end": 15259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 15255,
											"end": 15258,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15249,
											"end": 15253,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15230,
											"end": 15259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 15230,
											"end": 15259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15230,
											"end": 15259,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 15230,
											"end": 15259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15222,
											"end": 15259,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15222,
											"end": 15259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15292,
											"end": 15295,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15289,
											"end": 15290,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 15285,
											"end": 15296,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 15279,
											"end": 15283,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15276,
											"end": 15297,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 15268,
											"end": 15297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15268,
											"end": 15297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15008,
											"end": 15303,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15008,
											"end": 15303,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15008,
											"end": 15303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15008,
											"end": 15303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15008,
											"end": 15303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15308,
											"end": 16703,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 15308,
											"end": 16703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15425,
											"end": 15462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 15458,
											"end": 15461,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15425,
											"end": 15462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 15425,
											"end": 15462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15425,
											"end": 15462,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 15425,
											"end": 15462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15527,
											"end": 15545,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15519,
											"end": 15525,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15516,
											"end": 15546,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 15513,
											"end": 15569,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15513,
											"end": 15569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 15513,
											"end": 15569,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15549,
											"end": 15567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 15549,
											"end": 15567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 15549,
											"end": 15567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15549,
											"end": 15567,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 15549,
											"end": 15567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15513,
											"end": 15569,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 15513,
											"end": 15569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15593,
											"end": 15631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 15625,
											"end": 15629,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15619,
											"end": 15630,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 15593,
											"end": 15631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 15593,
											"end": 15631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15593,
											"end": 15631,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 15593,
											"end": 15631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15678,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 15738,
											"end": 15744,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15730,
											"end": 15736,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15724,
											"end": 15728,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15678,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 15678,
											"end": 15745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15678,
											"end": 15745,
											"name": "tag",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 15678,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15772,
											"end": 15773,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15796,
											"end": 15800,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15783,
											"end": 15800,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15783,
											"end": 15800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15828,
											"end": 15830,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 15820,
											"end": 15826,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15817,
											"end": 15831,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15846,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 15840,
											"end": 16458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15840,
											"end": 16458,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 15840,
											"end": 16458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 15840,
											"end": 16458,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16502,
											"end": 16503,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16519,
											"end": 16525,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16516,
											"end": 16593,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16516,
											"end": 16593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 16516,
											"end": 16593,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16568,
											"end": 16577,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16566,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 16559,
											"end": 16578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16553,
											"end": 16579,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16544,
											"end": 16579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16544,
											"end": 16579,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16516,
											"end": 16593,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 16516,
											"end": 16593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 16679,
											"end": 16685,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16672,
											"end": 16677,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 16619,
											"end": 16686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16686,
											"name": "tag",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 16619,
											"end": 16686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16613,
											"end": 16617,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16606,
											"end": 16687,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 16475,
											"end": 16697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15810,
											"end": 16697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 15810,
											"end": 16697,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15840,
											"end": 16458,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 15840,
											"end": 16458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15892,
											"end": 15896,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 15888,
											"end": 15897,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 15880,
											"end": 15886,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15876,
											"end": 15898,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15926,
											"end": 15963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 15958,
											"end": 15962,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15926,
											"end": 15963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 15926,
											"end": 15963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15926,
											"end": 15963,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 15926,
											"end": 15963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15985,
											"end": 15986,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15999,
											"end": 16207,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 15999,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16013,
											"end": 16020,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16010,
											"end": 16011,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16007,
											"end": 16021,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 15999,
											"end": 16207,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15999,
											"end": 16207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 15999,
											"end": 16207,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16092,
											"end": 16101,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16087,
											"end": 16090,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 16083,
											"end": 16102,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16077,
											"end": 16103,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16075,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16062,
											"end": 16104,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 16143,
											"end": 16144,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16135,
											"end": 16141,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16131,
											"end": 16145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16121,
											"end": 16145,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16121,
											"end": 16145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16190,
											"end": 16192,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16179,
											"end": 16188,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16175,
											"end": 16193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16162,
											"end": 16193,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 16162,
											"end": 16193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16036,
											"end": 16040,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16033,
											"end": 16034,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16029,
											"end": 16041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16024,
											"end": 16041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16024,
											"end": 16041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15999,
											"end": 16207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 15999,
											"end": 16207,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15999,
											"end": 16207,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 15999,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16235,
											"end": 16241,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16226,
											"end": 16233,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16223,
											"end": 16242,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 16220,
											"end": 16399,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16220,
											"end": 16399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 16220,
											"end": 16399,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16293,
											"end": 16302,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16288,
											"end": 16291,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 16284,
											"end": 16303,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16278,
											"end": 16304,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16336,
											"end": 16384,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 16378,
											"end": 16382,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 16370,
											"end": 16376,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 16366,
											"end": 16383,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16355,
											"end": 16364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16336,
											"end": 16384,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 16336,
											"end": 16384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16336,
											"end": 16384,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 16336,
											"end": 16384,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16321,
											"end": 16385,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 16243,
											"end": 16399,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16220,
											"end": 16399,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 16220,
											"end": 16399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16445,
											"end": 16446,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16441,
											"end": 16442,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 16433,
											"end": 16439,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16429,
											"end": 16443,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 16425,
											"end": 16447,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16419,
											"end": 16423,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 16412,
											"end": 16448,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 15847,
											"end": 16458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15847,
											"end": 16458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15847,
											"end": 16458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15810,
											"end": 16697,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 15810,
											"end": 16697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15810,
											"end": 16697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15400,
											"end": 16703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15400,
											"end": 16703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15400,
											"end": 16703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15308,
											"end": 16703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15308,
											"end": 16703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15308,
											"end": 16703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16709,
											"end": 16889,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 16709,
											"end": 16889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16757,
											"end": 16834,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16754,
											"end": 16755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16747,
											"end": 16835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16854,
											"end": 16858,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 16851,
											"end": 16852,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16844,
											"end": 16859,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16878,
											"end": 16882,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 16875,
											"end": 16876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16868,
											"end": 16883,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16895,
											"end": 17062,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 16895,
											"end": 17062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16932,
											"end": 16935,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16955,
											"end": 16977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 16971,
											"end": 16976,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16955,
											"end": 16977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 16955,
											"end": 16977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16955,
											"end": 16977,
											"name": "tag",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 16955,
											"end": 16977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16946,
											"end": 16977,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16946,
											"end": 16977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16999,
											"end": 17003,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 16992,
											"end": 16997,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16989,
											"end": 17004,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16986,
											"end": 17027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 16986,
											"end": 17027,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17007,
											"end": 17025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 17007,
											"end": 17025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 17007,
											"end": 17025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17007,
											"end": 17025,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 17007,
											"end": 17025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16986,
											"end": 17027,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 16986,
											"end": 17027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17054,
											"end": 17055,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17047,
											"end": 17052,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17043,
											"end": 17056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17036,
											"end": 17056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17036,
											"end": 17056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16895,
											"end": 17062,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16895,
											"end": 17062,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16895,
											"end": 17062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16895,
											"end": 17062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17068,
											"end": 17237,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 17068,
											"end": 17237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17208,
											"end": 17229,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E7420616D6F756E7400000000000000000000000000"
										},
										{
											"begin": 17204,
											"end": 17205,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17196,
											"end": 17202,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17192,
											"end": 17206,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17185,
											"end": 17230,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17068,
											"end": 17237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17068,
											"end": 17237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17243,
											"end": 17609,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 17243,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17385,
											"end": 17388,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17406,
											"end": 17473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 17470,
											"end": 17472,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 17465,
											"end": 17468,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17406,
											"end": 17473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 17406,
											"end": 17473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17406,
											"end": 17473,
											"name": "tag",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 17406,
											"end": 17473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17399,
											"end": 17473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17399,
											"end": 17473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17482,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 17571,
											"end": 17574,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17482,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 17482,
											"end": 17575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17482,
											"end": 17575,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 17482,
											"end": 17575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17600,
											"end": 17602,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17595,
											"end": 17598,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17591,
											"end": 17603,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17584,
											"end": 17603,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17584,
											"end": 17603,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17243,
											"end": 17609,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17243,
											"end": 17609,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17243,
											"end": 17609,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17243,
											"end": 17609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17615,
											"end": 18034,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 17615,
											"end": 18034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17781,
											"end": 17785,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17819,
											"end": 17821,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17808,
											"end": 17817,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17804,
											"end": 17822,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17796,
											"end": 17822,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17796,
											"end": 17822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17868,
											"end": 17877,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17862,
											"end": 17866,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17858,
											"end": 17878,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17854,
											"end": 17855,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17843,
											"end": 17852,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17839,
											"end": 17856,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17832,
											"end": 17879,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17896,
											"end": 18027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 18022,
											"end": 18026,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17896,
											"end": 18027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 17896,
											"end": 18027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17896,
											"end": 18027,
											"name": "tag",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 17896,
											"end": 18027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17888,
											"end": 18027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17888,
											"end": 18027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17615,
											"end": 18034,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17615,
											"end": 18034,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17615,
											"end": 18034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17615,
											"end": 18034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18040,
											"end": 18204,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 18040,
											"end": 18204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18180,
											"end": 18196,
											"name": "PUSH",
											"source": 8,
											"value": "4974656D206E6F7420666F756E64000000000000000000000000000000000000"
										},
										{
											"begin": 18176,
											"end": 18177,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18168,
											"end": 18174,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18164,
											"end": 18178,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18157,
											"end": 18197,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18040,
											"end": 18204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18040,
											"end": 18204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18210,
											"end": 18576,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 18210,
											"end": 18576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18352,
											"end": 18355,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18373,
											"end": 18440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 18437,
											"end": 18439,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 18432,
											"end": 18435,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18373,
											"end": 18440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 18373,
											"end": 18440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18373,
											"end": 18440,
											"name": "tag",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 18373,
											"end": 18440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18366,
											"end": 18440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18366,
											"end": 18440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18449,
											"end": 18542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 18538,
											"end": 18541,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18449,
											"end": 18542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 18449,
											"end": 18542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18449,
											"end": 18542,
											"name": "tag",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 18449,
											"end": 18542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18567,
											"end": 18569,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18562,
											"end": 18565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18558,
											"end": 18570,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18551,
											"end": 18570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18551,
											"end": 18570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18210,
											"end": 18576,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18210,
											"end": 18576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18210,
											"end": 18576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18210,
											"end": 18576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18582,
											"end": 19001,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 18582,
											"end": 19001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18748,
											"end": 18752,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18786,
											"end": 18788,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18775,
											"end": 18784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18771,
											"end": 18789,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18763,
											"end": 18789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18763,
											"end": 18789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18835,
											"end": 18844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18829,
											"end": 18833,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18825,
											"end": 18845,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18821,
											"end": 18822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18810,
											"end": 18819,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18806,
											"end": 18823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18799,
											"end": 18846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18863,
											"end": 18994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 18989,
											"end": 18993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18863,
											"end": 18994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 18863,
											"end": 18994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18863,
											"end": 18994,
											"name": "tag",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 18863,
											"end": 18994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18855,
											"end": 18994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18855,
											"end": 18994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18582,
											"end": 19001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18582,
											"end": 19001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18582,
											"end": 19001,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18582,
											"end": 19001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19031,
											"end": 19862,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 19031,
											"end": 19862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19116,
											"end": 19119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19153,
											"end": 19158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19147,
											"end": 19159,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 19182,
											"end": 19218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 19208,
											"end": 19217,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19182,
											"end": 19218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 19182,
											"end": 19218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19182,
											"end": 19218,
											"name": "tag",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 19182,
											"end": 19218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19234,
											"end": 19305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 19298,
											"end": 19304,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19293,
											"end": 19296,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 19234,
											"end": 19305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 19234,
											"end": 19305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19234,
											"end": 19305,
											"name": "tag",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 19234,
											"end": 19305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19227,
											"end": 19305,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 19227,
											"end": 19305,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19336,
											"end": 19337,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 19325,
											"end": 19334,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19321,
											"end": 19338,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19352,
											"end": 19353,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19347,
											"end": 19511,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19347,
											"end": 19511,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 19347,
											"end": 19511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 19347,
											"end": 19511,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19525,
											"end": 19526,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 19520,
											"end": 19856,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19520,
											"end": 19856,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 19520,
											"end": 19856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 19520,
											"end": 19856,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19314,
											"end": 19856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 19314,
											"end": 19856,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19347,
											"end": 19511,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 19347,
											"end": 19511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19431,
											"end": 19435,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 19427,
											"end": 19436,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 19416,
											"end": 19425,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19412,
											"end": 19437,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19407,
											"end": 19410,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 19400,
											"end": 19438,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19491,
											"end": 19497,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19484,
											"end": 19498,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19477,
											"end": 19499,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19471,
											"end": 19475,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19467,
											"end": 19500,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 19462,
											"end": 19465,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 19458,
											"end": 19501,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19451,
											"end": 19501,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 19451,
											"end": 19501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19347,
											"end": 19511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 19347,
											"end": 19511,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19520,
											"end": 19856,
											"name": "tag",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 19520,
											"end": 19856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19587,
											"end": 19625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 19619,
											"end": 19624,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19587,
											"end": 19625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 19587,
											"end": 19625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19587,
											"end": 19625,
											"name": "tag",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 19587,
											"end": 19625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19647,
											"end": 19648,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19661,
											"end": 19815,
											"name": "tag",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 19661,
											"end": 19815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19675,
											"end": 19681,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19672,
											"end": 19673,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19669,
											"end": 19682,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 19661,
											"end": 19815,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19661,
											"end": 19815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 19661,
											"end": 19815,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19749,
											"end": 19756,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19743,
											"end": 19757,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 19739,
											"end": 19740,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19734,
											"end": 19737,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 19730,
											"end": 19741,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19723,
											"end": 19758,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19799,
											"end": 19800,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 19790,
											"end": 19797,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19786,
											"end": 19801,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19775,
											"end": 19801,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19775,
											"end": 19801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19697,
											"end": 19701,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19694,
											"end": 19695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19690,
											"end": 19702,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19685,
											"end": 19702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19661,
											"end": 19815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 19661,
											"end": 19815,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19661,
											"end": 19815,
											"name": "tag",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 19661,
											"end": 19815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19844,
											"end": 19845,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19839,
											"end": 19842,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 19835,
											"end": 19846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19828,
											"end": 19846,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 19828,
											"end": 19846,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19527,
											"end": 19856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19527,
											"end": 19856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19314,
											"end": 19856,
											"name": "tag",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 19314,
											"end": 19856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19314,
											"end": 19856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19120,
											"end": 19862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19120,
											"end": 19862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19031,
											"end": 19862,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19031,
											"end": 19862,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19031,
											"end": 19862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19031,
											"end": 19862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19031,
											"end": 19862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19868,
											"end": 20387,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 19868,
											"end": 20387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20030,
											"end": 20034,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20068,
											"end": 20070,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 20057,
											"end": 20066,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20053,
											"end": 20071,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20045,
											"end": 20071,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20045,
											"end": 20071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20081,
											"end": 20148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 20145,
											"end": 20146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20134,
											"end": 20143,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20130,
											"end": 20147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20121,
											"end": 20127,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20081,
											"end": 20148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 20081,
											"end": 20148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20081,
											"end": 20148,
											"name": "tag",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 20081,
											"end": 20148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20195,
											"end": 20204,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20189,
											"end": 20193,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20185,
											"end": 20205,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20180,
											"end": 20182,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20169,
											"end": 20178,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20165,
											"end": 20183,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20158,
											"end": 20206,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20223,
											"end": 20298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 20293,
											"end": 20297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20284,
											"end": 20290,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 20223,
											"end": 20298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 20223,
											"end": 20298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20223,
											"end": 20298,
											"name": "tag",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 20223,
											"end": 20298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20215,
											"end": 20298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20215,
											"end": 20298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20308,
											"end": 20380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 20376,
											"end": 20378,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20365,
											"end": 20374,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20361,
											"end": 20379,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20352,
											"end": 20358,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20308,
											"end": 20380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 20308,
											"end": 20380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20308,
											"end": 20380,
											"name": "tag",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 20308,
											"end": 20380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19868,
											"end": 20387,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 19868,
											"end": 20387,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 19868,
											"end": 20387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19868,
											"end": 20387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19868,
											"end": 20387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19868,
											"end": 20387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19868,
											"end": 20387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20393,
											"end": 20472,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 20393,
											"end": 20472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20432,
											"end": 20439,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20461,
											"end": 20466,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20450,
											"end": 20466,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20450,
											"end": 20466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20393,
											"end": 20472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20393,
											"end": 20472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20393,
											"end": 20472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20393,
											"end": 20472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20478,
											"end": 20635,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 20478,
											"end": 20635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20583,
											"end": 20628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 20603,
											"end": 20627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "579"
										},
										{
											"begin": 20621,
											"end": 20626,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20603,
											"end": 20627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 20603,
											"end": 20627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20603,
											"end": 20627,
											"name": "tag",
											"source": 8,
											"value": "579"
										},
										{
											"begin": 20603,
											"end": 20627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20583,
											"end": 20628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 20583,
											"end": 20628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20583,
											"end": 20628,
											"name": "tag",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 20583,
											"end": 20628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20578,
											"end": 20581,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20571,
											"end": 20629,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20478,
											"end": 20635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20478,
											"end": 20635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20478,
											"end": 20635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20641,
											"end": 20735,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 20641,
											"end": 20735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20674,
											"end": 20682,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20722,
											"end": 20727,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20718,
											"end": 20720,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 20714,
											"end": 20728,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 20693,
											"end": 20728,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20693,
											"end": 20728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20641,
											"end": 20735,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20641,
											"end": 20735,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20641,
											"end": 20735,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20641,
											"end": 20735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20741,
											"end": 20835,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 20741,
											"end": 20835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20780,
											"end": 20787,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20809,
											"end": 20829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 20823,
											"end": 20828,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20809,
											"end": 20829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 20809,
											"end": 20829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20809,
											"end": 20829,
											"name": "tag",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 20809,
											"end": 20829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20798,
											"end": 20829,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20798,
											"end": 20829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20741,
											"end": 20835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20741,
											"end": 20835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20741,
											"end": 20835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20741,
											"end": 20835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20841,
											"end": 20941,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 20841,
											"end": 20941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20880,
											"end": 20887,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20909,
											"end": 20935,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 20929,
											"end": 20934,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20909,
											"end": 20935,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 20909,
											"end": 20935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20909,
											"end": 20935,
											"name": "tag",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 20909,
											"end": 20935,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20898,
											"end": 20935,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20898,
											"end": 20935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20841,
											"end": 20941,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20841,
											"end": 20941,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20841,
											"end": 20941,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20841,
											"end": 20941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20947,
											"end": 21104,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 20947,
											"end": 21104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21052,
											"end": 21097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 21072,
											"end": 21096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 21090,
											"end": 21095,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21072,
											"end": 21096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 21072,
											"end": 21096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21072,
											"end": 21096,
											"name": "tag",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 21072,
											"end": 21096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21052,
											"end": 21097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 21052,
											"end": 21097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21052,
											"end": 21097,
											"name": "tag",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 21052,
											"end": 21097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21047,
											"end": 21050,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21040,
											"end": 21098,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20947,
											"end": 21104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20947,
											"end": 21104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20947,
											"end": 21104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21110,
											"end": 21507,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 21110,
											"end": 21507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21250,
											"end": 21253,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21265,
											"end": 21340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 21336,
											"end": 21339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21327,
											"end": 21333,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21265,
											"end": 21340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 21265,
											"end": 21340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21265,
											"end": 21340,
											"name": "tag",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 21265,
											"end": 21340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21365,
											"end": 21367,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21360,
											"end": 21363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21356,
											"end": 21368,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21349,
											"end": 21368,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21349,
											"end": 21368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21378,
											"end": 21453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 21449,
											"end": 21452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21440,
											"end": 21446,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21378,
											"end": 21453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 21378,
											"end": 21453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21378,
											"end": 21453,
											"name": "tag",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 21378,
											"end": 21453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21478,
											"end": 21480,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 21473,
											"end": 21476,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21469,
											"end": 21481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21462,
											"end": 21481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21462,
											"end": 21481,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21498,
											"end": 21501,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21491,
											"end": 21501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21491,
											"end": 21501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21110,
											"end": 21507,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 21110,
											"end": 21507,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21110,
											"end": 21507,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21110,
											"end": 21507,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21110,
											"end": 21507,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21110,
											"end": 21507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21513,
											"end": 21693,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 21513,
											"end": 21693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21561,
											"end": 21638,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21558,
											"end": 21559,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21551,
											"end": 21639,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21658,
											"end": 21662,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 21655,
											"end": 21656,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21648,
											"end": 21663,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21682,
											"end": 21686,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 21679,
											"end": 21680,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21672,
											"end": 21687,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21699,
											"end": 21875,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 21699,
											"end": 21875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21731,
											"end": 21732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21748,
											"end": 21768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 21766,
											"end": 21767,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21748,
											"end": 21768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 21748,
											"end": 21768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21748,
											"end": 21768,
											"name": "tag",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 21748,
											"end": 21768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21743,
											"end": 21768,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21743,
											"end": 21768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21782,
											"end": 21802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 21800,
											"end": 21801,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21782,
											"end": 21802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 21782,
											"end": 21802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21782,
											"end": 21802,
											"name": "tag",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 21782,
											"end": 21802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21777,
											"end": 21802,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21777,
											"end": 21802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21821,
											"end": 21822,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21811,
											"end": 21846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 21811,
											"end": 21846,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21826,
											"end": 21844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 21826,
											"end": 21844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 21826,
											"end": 21844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21826,
											"end": 21844,
											"name": "tag",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 21826,
											"end": 21844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21811,
											"end": 21846,
											"name": "tag",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 21811,
											"end": 21846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21867,
											"end": 21868,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21864,
											"end": 21865,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21860,
											"end": 21869,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 21855,
											"end": 21869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21855,
											"end": 21869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21699,
											"end": 21875,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21699,
											"end": 21875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21699,
											"end": 21875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21699,
											"end": 21875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21699,
											"end": 21875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21881,
											"end": 22291,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 21881,
											"end": 22291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21921,
											"end": 21928,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21944,
											"end": 21964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 21962,
											"end": 21963,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21944,
											"end": 21964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 21944,
											"end": 21964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21944,
											"end": 21964,
											"name": "tag",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 21944,
											"end": 21964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 21964,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 21964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21978,
											"end": 21998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 21996,
											"end": 21997,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21978,
											"end": 21998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 21978,
											"end": 21998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21978,
											"end": 21998,
											"name": "tag",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 21978,
											"end": 21998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21973,
											"end": 21998,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21973,
											"end": 21998,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22033,
											"end": 22034,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22030,
											"end": 22031,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22026,
											"end": 22035,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 22055,
											"end": 22085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 22073,
											"end": 22084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22055,
											"end": 22085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 22055,
											"end": 22085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22055,
											"end": 22085,
											"name": "tag",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 22055,
											"end": 22085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22044,
											"end": 22085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22044,
											"end": 22085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22234,
											"end": 22235,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22225,
											"end": 22232,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22221,
											"end": 22236,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 22218,
											"end": 22219,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22215,
											"end": 22237,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 22195,
											"end": 22196,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22188,
											"end": 22197,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22168,
											"end": 22251,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 22145,
											"end": 22284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "601"
										},
										{
											"begin": 22145,
											"end": 22284,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22264,
											"end": 22282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 22264,
											"end": 22282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 22264,
											"end": 22282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22264,
											"end": 22282,
											"name": "tag",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 22264,
											"end": 22282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22145,
											"end": 22284,
											"name": "tag",
											"source": 8,
											"value": "601"
										},
										{
											"begin": 22145,
											"end": 22284,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21929,
											"end": 22291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21881,
											"end": 22291,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21881,
											"end": 22291,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21881,
											"end": 22291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21881,
											"end": 22291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21881,
											"end": 22291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22297,
											"end": 22450,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 22297,
											"end": 22450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22437,
											"end": 22442,
											"name": "PUSH",
											"source": 8,
											"value": "776F6E0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22433,
											"end": 22434,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22425,
											"end": 22431,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22421,
											"end": 22435,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22414,
											"end": 22443,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22297,
											"end": 22450,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22297,
											"end": 22450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22456,
											"end": 22821,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 22456,
											"end": 22821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22598,
											"end": 22601,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22619,
											"end": 22685,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "605"
										},
										{
											"begin": 22683,
											"end": 22684,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 22678,
											"end": 22681,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22619,
											"end": 22685,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 22619,
											"end": 22685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22619,
											"end": 22685,
											"name": "tag",
											"source": 8,
											"value": "605"
										},
										{
											"begin": 22619,
											"end": 22685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22612,
											"end": 22685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22612,
											"end": 22685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22694,
											"end": 22787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 22783,
											"end": 22786,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22694,
											"end": 22787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 22694,
											"end": 22787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22694,
											"end": 22787,
											"name": "tag",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 22694,
											"end": 22787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22812,
											"end": 22814,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22807,
											"end": 22810,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22803,
											"end": 22815,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22796,
											"end": 22815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22796,
											"end": 22815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22456,
											"end": 22821,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22456,
											"end": 22821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22456,
											"end": 22821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22456,
											"end": 22821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22827,
											"end": 23454,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 22827,
											"end": 23454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23043,
											"end": 23047,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23081,
											"end": 23083,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 23070,
											"end": 23079,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23066,
											"end": 23084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23058,
											"end": 23084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23058,
											"end": 23084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23094,
											"end": 23165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 23162,
											"end": 23163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23151,
											"end": 23160,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23147,
											"end": 23164,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23138,
											"end": 23144,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 23094,
											"end": 23165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 23094,
											"end": 23165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23094,
											"end": 23165,
											"name": "tag",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 23094,
											"end": 23165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23175,
											"end": 23241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 23237,
											"end": 23239,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23226,
											"end": 23235,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23222,
											"end": 23240,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23213,
											"end": 23219,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23175,
											"end": 23241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 23175,
											"end": 23241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23175,
											"end": 23241,
											"name": "tag",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 23175,
											"end": 23241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23288,
											"end": 23297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23282,
											"end": 23286,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23278,
											"end": 23298,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23273,
											"end": 23275,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23262,
											"end": 23271,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23258,
											"end": 23276,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23251,
											"end": 23299,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23316,
											"end": 23447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 23442,
											"end": 23446,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23316,
											"end": 23447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 23316,
											"end": 23447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23316,
											"end": 23447,
											"name": "tag",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 23316,
											"end": 23447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23308,
											"end": 23447,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23308,
											"end": 23447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22827,
											"end": 23454,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 22827,
											"end": 23454,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 22827,
											"end": 23454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22827,
											"end": 23454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22827,
											"end": 23454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22827,
											"end": 23454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23460,
											"end": 23614,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 23460,
											"end": 23614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23600,
											"end": 23606,
											"name": "PUSH",
											"source": 8,
											"value": "6C6F737400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23596,
											"end": 23597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23588,
											"end": 23594,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23584,
											"end": 23598,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23577,
											"end": 23607,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23460,
											"end": 23614,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23460,
											"end": 23614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23620,
											"end": 23985,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 23620,
											"end": 23985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23762,
											"end": 23765,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23783,
											"end": 23849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 23847,
											"end": 23848,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 23842,
											"end": 23845,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23783,
											"end": 23849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 23783,
											"end": 23849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23783,
											"end": 23849,
											"name": "tag",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 23783,
											"end": 23849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23776,
											"end": 23849,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23776,
											"end": 23849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23858,
											"end": 23951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 23947,
											"end": 23950,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23858,
											"end": 23951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 23858,
											"end": 23951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23858,
											"end": 23951,
											"name": "tag",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 23858,
											"end": 23951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23976,
											"end": 23978,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23971,
											"end": 23974,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23967,
											"end": 23979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23960,
											"end": 23979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23960,
											"end": 23979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23620,
											"end": 23985,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23620,
											"end": 23985,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23620,
											"end": 23985,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23620,
											"end": 23985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23991,
											"end": 24618,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 23991,
											"end": 24618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24207,
											"end": 24211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24245,
											"end": 24247,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 24234,
											"end": 24243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24230,
											"end": 24248,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24222,
											"end": 24248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24222,
											"end": 24248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24258,
											"end": 24329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 24326,
											"end": 24327,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24315,
											"end": 24324,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24311,
											"end": 24328,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24302,
											"end": 24308,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 24258,
											"end": 24329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 24258,
											"end": 24329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24258,
											"end": 24329,
											"name": "tag",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 24258,
											"end": 24329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24339,
											"end": 24405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 24401,
											"end": 24403,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24390,
											"end": 24399,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24386,
											"end": 24404,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24377,
											"end": 24383,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 24339,
											"end": 24405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 24339,
											"end": 24405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24339,
											"end": 24405,
											"name": "tag",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 24339,
											"end": 24405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24452,
											"end": 24461,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24446,
											"end": 24450,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24442,
											"end": 24462,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 24437,
											"end": 24439,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 24426,
											"end": 24435,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24422,
											"end": 24440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24415,
											"end": 24463,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24480,
											"end": 24611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 24606,
											"end": 24610,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24480,
											"end": 24611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 24480,
											"end": 24611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24480,
											"end": 24611,
											"name": "tag",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 24480,
											"end": 24611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24472,
											"end": 24611,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24472,
											"end": 24611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23991,
											"end": 24618,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 23991,
											"end": 24618,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 23991,
											"end": 24618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23991,
											"end": 24618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23991,
											"end": 24618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23991,
											"end": 24618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24624,
											"end": 24852,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 24624,
											"end": 24852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24764,
											"end": 24798,
											"name": "PUSH",
											"source": 8,
											"value": "596F7527766520616C726561647920636C61696D656420796F75722077656C63"
										},
										{
											"begin": 24760,
											"end": 24761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24752,
											"end": 24758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24748,
											"end": 24762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24741,
											"end": 24799,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24833,
											"end": 24844,
											"name": "PUSH",
											"source": 8,
											"value": "6F6D6520626F6E75730000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24828,
											"end": 24830,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24820,
											"end": 24826,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24816,
											"end": 24831,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24809,
											"end": 24845,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24624,
											"end": 24852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24624,
											"end": 24852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24858,
											"end": 25224,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 24858,
											"end": 25224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25000,
											"end": 25003,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25021,
											"end": 25088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 25085,
											"end": 25087,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 25080,
											"end": 25083,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25021,
											"end": 25088,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 25021,
											"end": 25088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25021,
											"end": 25088,
											"name": "tag",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 25021,
											"end": 25088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25014,
											"end": 25088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25014,
											"end": 25088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25097,
											"end": 25190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 25186,
											"end": 25189,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25097,
											"end": 25190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 25097,
											"end": 25190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25097,
											"end": 25190,
											"name": "tag",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 25097,
											"end": 25190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25215,
											"end": 25217,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 25210,
											"end": 25213,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25206,
											"end": 25218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25199,
											"end": 25218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25199,
											"end": 25218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24858,
											"end": 25224,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24858,
											"end": 25224,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24858,
											"end": 25224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24858,
											"end": 25224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25230,
											"end": 25649,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 25230,
											"end": 25649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25396,
											"end": 25400,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25434,
											"end": 25436,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25423,
											"end": 25432,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25419,
											"end": 25437,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25411,
											"end": 25437,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25411,
											"end": 25437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25483,
											"end": 25492,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25477,
											"end": 25481,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25473,
											"end": 25493,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 25469,
											"end": 25470,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25458,
											"end": 25467,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25454,
											"end": 25471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25447,
											"end": 25494,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25511,
											"end": 25642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 25637,
											"end": 25641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25511,
											"end": 25642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 25511,
											"end": 25642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25511,
											"end": 25642,
											"name": "tag",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 25511,
											"end": 25642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25503,
											"end": 25642,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25503,
											"end": 25642,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25230,
											"end": 25649,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25230,
											"end": 25649,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25230,
											"end": 25649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25230,
											"end": 25649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25655,
											"end": 26097,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 25655,
											"end": 26097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25804,
											"end": 25808,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25842,
											"end": 25844,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 25831,
											"end": 25840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25827,
											"end": 25845,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25819,
											"end": 25845,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25819,
											"end": 25845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25855,
											"end": 25926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 25923,
											"end": 25924,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25912,
											"end": 25921,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25908,
											"end": 25925,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25899,
											"end": 25905,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 25855,
											"end": 25926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 25855,
											"end": 25926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25855,
											"end": 25926,
											"name": "tag",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 25855,
											"end": 25926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25936,
											"end": 26008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 26004,
											"end": 26006,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25993,
											"end": 26002,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25989,
											"end": 26007,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25980,
											"end": 25986,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 25936,
											"end": 26008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 25936,
											"end": 26008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25936,
											"end": 26008,
											"name": "tag",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 25936,
											"end": 26008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26018,
											"end": 26090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 26086,
											"end": 26088,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 26075,
											"end": 26084,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26071,
											"end": 26089,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26062,
											"end": 26068,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26018,
											"end": 26090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 26018,
											"end": 26090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26018,
											"end": 26090,
											"name": "tag",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 26018,
											"end": 26090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25655,
											"end": 26097,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 25655,
											"end": 26097,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 25655,
											"end": 26097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25655,
											"end": 26097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25655,
											"end": 26097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25655,
											"end": 26097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25655,
											"end": 26097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26103,
											"end": 26294,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 26103,
											"end": 26294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26143,
											"end": 26146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26162,
											"end": 26182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 26180,
											"end": 26181,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26162,
											"end": 26182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 26162,
											"end": 26182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26162,
											"end": 26182,
											"name": "tag",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 26162,
											"end": 26182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26157,
											"end": 26182,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26157,
											"end": 26182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26196,
											"end": 26216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 26214,
											"end": 26215,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26196,
											"end": 26216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 26196,
											"end": 26216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26196,
											"end": 26216,
											"name": "tag",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 26196,
											"end": 26216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26191,
											"end": 26216,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 26191,
											"end": 26216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26239,
											"end": 26240,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26236,
											"end": 26237,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26232,
											"end": 26241,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26225,
											"end": 26241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26225,
											"end": 26241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26260,
											"end": 26263,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 26257,
											"end": 26258,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26254,
											"end": 26264,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 26251,
											"end": 26287,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 26251,
											"end": 26287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 26251,
											"end": 26287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 26267,
											"end": 26285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 26267,
											"end": 26285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 26267,
											"end": 26285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26267,
											"end": 26285,
											"name": "tag",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 26267,
											"end": 26285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26251,
											"end": 26287,
											"name": "tag",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 26251,
											"end": 26287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26103,
											"end": 26294,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 26103,
											"end": 26294,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26103,
											"end": 26294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26103,
											"end": 26294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26103,
											"end": 26294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/DegenToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addItem(string,uint256)": "62d6bbdf",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"burnToken(uint256)": "7b47ec1a",
							"decimals()": "313ce567",
							"getBalance()": "12065fe0",
							"isLessThanFive(bool,uint256)": "ea5e65e0",
							"items(uint8)": "fbd1a97b",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"purchaseItem(uint8)": "af3bcb7d",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"tokenId()": "17d70f7c",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferToken(address,uint256)": "1072cbea",
							"welcomeBonus()": "f5112f87"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"won\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"name\":\"GameOutcome\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"itemId\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"itemName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"addItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_prediction\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_betAmount\",\"type\":\"uint256\"}],\"name\":\"isLessThanFive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"items\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"itemId\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_itemId\",\"type\":\"uint8\"}],\"name\":\"purchaseItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenId\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"welcomeBonus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DegenToken.sol\":\"DegenToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/DegenToken.sol\":{\"keccak256\":\"0x696d2e76521d0b0a3c898aeab06c3f0ddeab619cea0a1c20ea621fb9ef16e73a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3746acd712847845a4d0e50f4484275a0eab3e10795f7a4eb361d75e89330727\",\"dweb:/ipfs/Qmbf2nqjbK4qJT58BvkhBEpKXYEWCTnKtoiBF4iQhLjHWD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1002,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "items",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint8,t_struct(Item)997_storage)"
							},
							{
								"astId": 1004,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "tokenId",
								"offset": 0,
								"slot": "7",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint8,t_struct(Item)997_storage)": {
								"encoding": "mapping",
								"key": "t_uint8",
								"label": "mapping(uint8 => struct DegenToken.Item)",
								"numberOfBytes": "32",
								"value": "t_struct(Item)997_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Item)997_storage": {
								"encoding": "inplace",
								"label": "struct DegenToken.Item",
								"members": [
									{
										"astId": 992,
										"contract": "contracts/DegenToken.sol:DegenToken",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 994,
										"contract": "contracts/DegenToken.sol:DegenToken",
										"label": "itemId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint8"
									},
									{
										"astId": 996,
										"contract": "contracts/DegenToken.sol:DegenToken",
										"label": "price",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 980,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								979
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 950,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 980,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 980,
							"src": "186:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "194:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nameLocations": [
											"483:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "483:7:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "ERC20",
										"nameLocations": [
											"492:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "492:5:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "662:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "678:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "692:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "672:26:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:4",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "632:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:4"
									},
									"scope": 923,
									"src": "618:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1086:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "1121:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1096:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1151:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1056:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:4"
									},
									"scope": 923,
									"src": "1021:158:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 924,
							"src": "448:733:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "124:1058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 950,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:5"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 949,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 949,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 945,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 949,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 950,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 957,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 956,
												"id": 959,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 979,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 966,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 965,
												"id": 968,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 963,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 979,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 974,
												"id": 976,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 979,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/DegenToken.sol": {
				"ast": {
					"absolutePath": "contracts/DegenToken.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"DegenToken": [
							1332
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						],
						"Ownable": [
							147
						]
					},
					"id": 1333,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "568:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1333,
							"sourceUnit": 800,
							"src": "596:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 983,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1333,
							"sourceUnit": 148,
							"src": "653:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1333,
							"sourceUnit": 924,
							"src": "707:74:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 985,
										"name": "ERC20",
										"nameLocations": [
											"808:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "808:5:7"
									},
									"id": 986,
									"nodeType": "InheritanceSpecifier",
									"src": "808:5:7"
								},
								{
									"baseName": {
										"id": 987,
										"name": "Ownable",
										"nameLocations": [
											"815:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "815:7:7"
									},
									"id": 988,
									"nodeType": "InheritanceSpecifier",
									"src": "815:7:7"
								},
								{
									"baseName": {
										"id": 989,
										"name": "ERC20Burnable",
										"nameLocations": [
											"824:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "824:13:7"
									},
									"id": 990,
									"nodeType": "InheritanceSpecifier",
									"src": "824:13:7"
								}
							],
							"canonicalName": "DegenToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1332,
							"linearizedBaseContracts": [
								1332,
								923,
								147,
								799,
								189,
								949,
								877,
								979
							],
							"name": "DegenToken",
							"nameLocation": "794:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DegenToken.Item",
									"id": 997,
									"members": [
										{
											"constant": false,
											"id": 992,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "877:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "870:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 991,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "870:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 994,
											"mutability": "mutable",
											"name": "itemId",
											"nameLocation": "898:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "892:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 993,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "892:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 996,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "923:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "915:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 995,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "915:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Item",
									"nameLocation": "854:4:7",
									"nodeType": "StructDefinition",
									"scope": 1332,
									"src": "847:89:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fbd1a97b",
									"id": 1002,
									"mutability": "mutable",
									"name": "items",
									"nameLocation": "971:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1332,
									"src": "942:34:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
										"typeString": "mapping(uint8 => struct DegenToken.Item)"
									},
									"typeName": {
										"id": 1001,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 998,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "951:5:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "Mapping",
										"src": "942:21:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
											"typeString": "mapping(uint8 => struct DegenToken.Item)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1000,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 999,
												"name": "Item",
												"nameLocations": [
													"958:4:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 997,
												"src": "958:4:7"
											},
											"referencedDeclaration": 997,
											"src": "958:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Item_$997_storage_ptr",
												"typeString": "struct DegenToken.Item"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17d70f7c",
									"id": 1004,
									"mutability": "mutable",
									"name": "tokenId",
									"nameLocation": "996:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1332,
									"src": "983:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1003,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "983:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8bedd141782c49139782bd92bd7a760a0bcb544ffecfd2b25f00366fae06598e",
									"id": 1014,
									"name": "ItemPurchased",
									"nameLocation": "1022:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1052:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "1036:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "1065:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "1059:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1007,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1059:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemName",
												"nameLocation": "1080:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "1073:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1009,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1073:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1098:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "1090:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1090:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1035:69:7"
									},
									"src": "1016:89:7"
								},
								{
									"anonymous": false,
									"eventSelector": "d04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587",
									"id": 1024,
									"name": "GameOutcome",
									"nameLocation": "1117:11:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "1145:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "1129:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"indexed": false,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "1161:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "1153:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"indexed": false,
												"mutability": "mutable",
												"name": "won",
												"nameLocation": "1171:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "1166:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1019,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1166:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"indexed": false,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1183:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "1176:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1021,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1176:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:62:7"
									},
									"src": "1111:80:7"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "1296:340:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1039,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "1312:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1040,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "1326:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1038,
														"name": "mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "1307:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1307:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "1307:31:7"
											},
											{
												"expression": {
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1043,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1359:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1045,
														"indexExpression": {
															"hexValue": "31",
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1365:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1359:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "4e6f76696365204e6176696761746f72",
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1375:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_f93d0924b6e1f086750f1d72f63121b4bc1d38acfc288e215c263238a8a3728a",
																	"typeString": "literal_string \"Novice Navigator\""
																},
																"value": "Novice Navigator"
															},
															{
																"hexValue": "31",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1394:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															{
																"hexValue": "313030",
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1397:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_f93d0924b6e1f086750f1d72f63121b4bc1d38acfc288e215c263238a8a3728a",
																	"typeString": "literal_string \"Novice Navigator\""
																},
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																{
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															],
															"id": 1046,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1370:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1370:31:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "1359:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "1359:42:7"
											},
											{
												"expression": {
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1053,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1412:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1055,
														"indexExpression": {
															"hexValue": "32",
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1418:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1412:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "4d7974686963204d6176657269636b",
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1426:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d8da57334a66c00806b841d692d6139ebc41480393e33e8be0d23418882bec42",
																	"typeString": "literal_string \"Mythic Maverick\""
																},
																"value": "Mythic Maverick"
															},
															{
																"hexValue": "32",
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1445:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															{
																"hexValue": "373030",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1448:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_700_by_1",
																	"typeString": "int_const 700"
																},
																"value": "700"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_d8da57334a66c00806b841d692d6139ebc41480393e33e8be0d23418882bec42",
																	"typeString": "literal_string \"Mythic Maverick\""
																},
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																{
																	"typeIdentifier": "t_rational_700_by_1",
																	"typeString": "int_const 700"
																}
															],
															"id": 1056,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1421:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1421:31:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "1412:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "1412:40:7"
											},
											{
												"expression": {
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1063,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1463:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1065,
														"indexExpression": {
															"hexValue": "33",
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1469:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1463:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "43656c65737469616c2043727573686572",
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1477:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_b57257d4b4927c9d29138dda352a97afab9b1fe7c30bc1efffaba568b2ffa6f1",
																	"typeString": "literal_string \"Celestial Crusher\""
																},
																"value": "Celestial Crusher"
															},
															{
																"hexValue": "33",
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1498:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															{
																"hexValue": "31323030",
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1501:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1200_by_1",
																	"typeString": "int_const 1200"
																},
																"value": "1200"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_b57257d4b4927c9d29138dda352a97afab9b1fe7c30bc1efffaba568b2ffa6f1",
																	"typeString": "literal_string \"Celestial Crusher\""
																},
																{
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																{
																	"typeIdentifier": "t_rational_1200_by_1",
																	"typeString": "int_const 1200"
																}
															],
															"id": 1066,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1472:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1472:34:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "1463:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "1463:43:7"
											},
											{
												"expression": {
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1073,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1517:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1075,
														"indexExpression": {
															"hexValue": "34",
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1523:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1517:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "41737472616c20416365",
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1531:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a5690cea7966b1bddf0971fab7696fc0b0211de341269b07a3f67ac03c93a16d",
																	"typeString": "literal_string \"Astral Ace\""
																},
																"value": "Astral Ace"
															},
															{
																"hexValue": "34",
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1545:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															{
																"hexValue": "32323030",
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1548:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2200_by_1",
																	"typeString": "int_const 2200"
																},
																"value": "2200"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_a5690cea7966b1bddf0971fab7696fc0b0211de341269b07a3f67ac03c93a16d",
																	"typeString": "literal_string \"Astral Ace\""
																},
																{
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																{
																	"typeIdentifier": "t_rational_2200_by_1",
																	"typeString": "int_const 2200"
																}
															],
															"id": 1076,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1526:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1526:27:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "1517:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "1517:36:7"
											},
											{
												"expression": {
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1083,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1564:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1085,
														"indexExpression": {
															"hexValue": "35",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1570:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1564:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "446976696e6520446f6d696e61746f72",
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1578:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_fa2c900fc7c49268b4beba97e687238ae58ec6cc4f2e4aacc3154338d556113a",
																	"typeString": "literal_string \"Divine Dominator\""
																},
																"value": "Divine Dominator"
															},
															{
																"hexValue": "35",
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1598:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															{
																"hexValue": "32343030",
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1601:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2400_by_1",
																	"typeString": "int_const 2400"
																},
																"value": "2400"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_fa2c900fc7c49268b4beba97e687238ae58ec6cc4f2e4aacc3154338d556113a",
																	"typeString": "literal_string \"Divine Dominator\""
																},
																{
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																{
																	"typeIdentifier": "t_rational_2400_by_1",
																	"typeString": "int_const 2400"
																}
															],
															"id": 1086,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1573:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1573:33:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "1564:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "1564:42:7"
											},
											{
												"expression": {
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1093,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "1617:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "36",
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1625:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "1617:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "1617:9:7"
											}
										]
									},
									"id": 1098,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "446567656e",
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1258:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_906c077abc9a71ae76538cee0d26636e7b6a00e3d54b28138c5ecbb7aec06c8d",
														"typeString": "literal_string \"Degen\""
													},
													"value": "Degen"
												},
												{
													"hexValue": "44474e",
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1267:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0b9f9ff197d13cbef1db00fe5f394520d062f532845bf34370b18f7b8fc04c88",
														"typeString": "literal_string \"DGN\""
													},
													"value": "DGN"
												}
											],
											"id": 1033,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1030,
												"name": "ERC20",
												"nameLocations": [
													"1252:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1252:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1252:21:7"
										},
										{
											"arguments": [
												{
													"id": 1035,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1026,
													"src": "1282:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1036,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1034,
												"name": "Ownable",
												"nameLocations": [
													"1274:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1274:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1274:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1220:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1212:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "tokenSupply",
												"nameLocation": "1239:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1234:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1234:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:40:7"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1296:0:7"
									},
									"scope": 1332,
									"src": "1199:437:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "1700:27:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1718:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1103,
												"id": 1105,
												"nodeType": "Return",
												"src": "1711:8:7"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1653:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1100,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1664:8:7"
									},
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1661:2:7"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1694:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1101,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1694:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:7:7"
									},
									"scope": 1332,
									"src": "1644:83:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "1819:36:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1117,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "1836:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1118,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "1840:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1116,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1830:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1830:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "1830:17:7"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1113,
												"name": "onlyOwner",
												"nameLocations": [
													"1809:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1809:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1809:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "1769:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1782:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1774:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1774:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1794:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1786:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1773:28:7"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:7"
									},
									"scope": 1332,
									"src": "1760:95:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "1959:122:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1131,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1988:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1992:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1988:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1130,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1978:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1978:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1134,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "2001:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1978:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2010:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1970:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1970:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "1970:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1140,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "2053:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1141,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "2065:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1139,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "2044:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2044:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "2044:29:7"
											}
										]
									},
									"functionSelector": "1072cbea",
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferToken",
									"nameLocation": "1902:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "1924:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "1916:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1941:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "1936:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1936:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1915:34:7"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:0:7"
									},
									"scope": 1332,
									"src": "1893:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "2147:131:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1150,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2176:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2180:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2176:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1149,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2166:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2166:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2191:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2166:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7527766520616c726561647920636c61696d656420796f75722077656c636f6d6520626f6e7573",
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2194:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98",
																"typeString": "literal_string \"You've already claimed your welcome bonus\""
															},
															"value": "You've already claimed your welcome bonus"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98",
																"typeString": "literal_string \"You've already claimed your welcome bonus\""
															}
														],
														"id": 1148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2158:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2158:80:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "2158:80:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1159,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2255:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2259:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2255:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3530",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2267:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															},
															"value": "50"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															}
														],
														"id": 1158,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2249:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "2249:21:7"
											}
										]
									},
									"functionSelector": "f5112f87",
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "welcomeBonus",
									"nameLocation": "2125:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2137:2:7"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2147:0:7"
									},
									"scope": 1332,
									"src": "2116:162:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "2357:83:7",
										"statements": [
											{
												"expression": {
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1174,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "2368:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1176,
														"indexExpression": {
															"id": 1175,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "2374:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2368:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1178,
																"name": "_name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "2390:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 1179,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "2397:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 1180,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "2405:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1177,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "2385:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2385:27:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "2368:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1183,
												"nodeType": "ExpressionStatement",
												"src": "2368:44:7"
											},
											{
												"expression": {
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2423:9:7",
													"subExpression": {
														"id": 1184,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "2423:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "2423:9:7"
											}
										]
									},
									"functionSelector": "62d6bbdf",
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1172,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1171,
												"name": "onlyOwner",
												"nameLocations": [
													"2347:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2347:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2347:9:7"
										}
									],
									"name": "addItem",
									"nameLocation": "2295:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "2317:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "2303:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "2332:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "2324:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:37:7"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2357:0:7"
									},
									"scope": 1332,
									"src": "2286:154:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "2518:405:7",
										"statements": [
											{
												"assignments": [
													1196
												],
												"declarations": [
													{
														"constant": false,
														"id": 1196,
														"mutability": "mutable",
														"name": "randomNumber",
														"nameLocation": "2534:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "2529:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1195,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2529:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1202,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "2581:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2587:9:7",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "2581:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 1204,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2598:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2602:6:7",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2598:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 1200,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "2564:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2568:12:7",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "2564:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2564:45:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1199,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2554:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2554:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2549:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1197,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2549:4:7",
																"typeDescriptions": {}
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2549:62:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2614:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "2549:67:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2529:87:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1212,
														"name": "_prediction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "2633:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1213,
																	"name": "randomNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "2648:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2661:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "2648:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1216,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2647:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2633:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1247,
													"nodeType": "Block",
													"src": "2801:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1236,
																		"name": "_betAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1192,
																		"src": "2821:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1235,
																	"name": "burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "2816:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2816:16:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1238,
															"nodeType": "ExpressionStatement",
															"src": "2816:16:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1240,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2864:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2868:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2864:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1242,
																		"name": "randomNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "2876:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2890:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "6c6f7374",
																		"id": 1244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2897:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888",
																			"typeString": "literal_string \"lost\""
																		},
																		"value": "lost"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888",
																			"typeString": "literal_string \"lost\""
																		}
																	],
																	"id": 1239,
																	"name": "GameOutcome",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "2852:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,bool,string memory)"
																	}
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2852:52:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1246,
															"nodeType": "EmitStatement",
															"src": "2847:57:7"
														}
													]
												},
												"id": 1248,
												"nodeType": "IfStatement",
												"src": "2629:287:7",
												"trueBody": {
													"id": 1234,
													"nodeType": "Block",
													"src": "2665:130:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1219,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2686:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2690:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2686:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1221,
																			"name": "_betAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1192,
																			"src": "2698:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2709:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "2698:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1218,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "2680:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2680:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1225,
															"nodeType": "ExpressionStatement",
															"src": "2680:31:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1227,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2743:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2747:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2743:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1229,
																		"name": "randomNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "2755:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2769:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "776f6e",
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2775:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427",
																			"typeString": "literal_string \"won\""
																		},
																		"value": "won"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427",
																			"typeString": "literal_string \"won\""
																		}
																	],
																	"id": 1226,
																	"name": "GameOutcome",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "2731:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,bool,string memory)"
																	}
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2731:50:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1233,
															"nodeType": "EmitStatement",
															"src": "2726:55:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "ea5e65e0",
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isLessThanFive",
									"nameLocation": "2458:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "_prediction",
												"nameLocation": "2478:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "2473:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2473:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "_betAmount",
												"nameLocation": "2499:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "2491:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2491:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2472:38:7"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2518:0:7"
									},
									"scope": 1332,
									"src": "2449:474:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "2981:294:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1256,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "3000:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																			"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																		}
																	},
																	"id": 1258,
																	"indexExpression": {
																		"id": 1257,
																		"name": "_itemId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1252,
																		"src": "3006:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3000:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$997_storage",
																		"typeString": "struct DegenToken.Item storage ref"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3015:5:7",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 996,
																"src": "3000:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3024:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3000:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4974656d206e6f7420666f756e64",
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3027:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c",
																"typeString": "literal_string \"Item not found\""
															},
															"value": "Item not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c",
																"typeString": "literal_string \"Item not found\""
															}
														],
														"id": 1255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2992:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2992:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "2992:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1267,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3073:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3077:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3073:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1266,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "3063:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3063:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1270,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "3088:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																			"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																		}
																	},
																	"id": 1272,
																	"indexExpression": {
																		"id": 1271,
																		"name": "_itemId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1252,
																		"src": "3094:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3088:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$997_storage",
																		"typeString": "struct DegenToken.Item storage ref"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3103:5:7",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 996,
																"src": "3088:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3063:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3110:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3055:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3055:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "3055:78:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1279,
																	"name": "items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "3151:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																		"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																	}
																},
																"id": 1281,
																"indexExpression": {
																	"id": 1280,
																	"name": "_itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "3157:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3151:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$997_storage",
																	"typeString": "struct DegenToken.Item storage ref"
																}
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3166:5:7",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 996,
															"src": "3151:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1278,
														"name": "burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "3146:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3146:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "3146:26:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1286,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3204:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3208:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3204:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1288,
															"name": "_itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "3216:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1289,
																	"name": "items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "3225:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																		"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																	}
																},
																"id": 1291,
																"indexExpression": {
																	"id": 1290,
																	"name": "_itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "3231:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3225:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$997_storage",
																	"typeString": "struct DegenToken.Item storage ref"
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3240:4:7",
															"memberName": "name",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 992,
															"src": "3225:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1293,
																	"name": "items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "3246:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																		"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																	}
																},
																"id": 1295,
																"indexExpression": {
																	"id": 1294,
																	"name": "_itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "3252:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3246:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$997_storage",
																	"typeString": "struct DegenToken.Item storage ref"
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3261:5:7",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 996,
															"src": "3246:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1285,
														"name": "ItemPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "3190:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8,string memory,uint256)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3190:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "EmitStatement",
												"src": "3185:82:7"
											}
										]
									},
									"functionSelector": "af3bcb7d",
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchaseItem",
									"nameLocation": "2944:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "_itemId",
												"nameLocation": "2963:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "2957:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1251,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2957:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2956:15:7"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2981:0:7"
									},
									"scope": 1332,
									"src": "2935:340:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "3368:47:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1306,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3396:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3400:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3396:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1305,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "3386:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3386:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1304,
												"id": 1309,
												"nodeType": "Return",
												"src": "3379:28:7"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "3325:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3335:2:7"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "3360:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3360:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3359:9:7"
									},
									"scope": 1332,
									"src": "3316:99:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "3490:105:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1318,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3519:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3523:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3519:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1317,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "3509:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3509:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1321,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "3532:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3509:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420616d6f756e74",
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3541:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496",
																"typeString": "literal_string \"Insufficient amount\""
															},
															"value": "Insufficient amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496",
																"typeString": "literal_string \"Insufficient amount\""
															}
														],
														"id": 1316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3501:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3501:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "3501:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1327,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "3579:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1326,
														"name": "burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "3574:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3574:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "3574:13:7"
											}
										]
									},
									"functionSelector": "7b47ec1a",
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnToken",
									"nameLocation": "3457:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3472:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "3467:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3467:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3466:14:7"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3490:0:7"
									},
									"scope": 1332,
									"src": "3448:147:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1333,
							"src": "785:2815:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								1014,
								1024
							]
						}
					],
					"src": "568:3032:7"
				},
				"id": 7
			}
		}
	}
}